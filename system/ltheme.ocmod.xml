<?xml version="1.0" encoding="utf-8"?>
<modification>
    <name>Lightshop theme Opencart/ocStore 3.0.x.x</name>
	<code>theme_lightshop</code>
    <version>2.1.0</version>
    <author>899themes.ru</author>
    <link>https://899themes.ru/lightshop/</link>
<!-- admin --> 
    <file path="admin/controller/common/column_left.php">
        <operation>
            <search><![CDATA[
			$catalog = array();
            ]]></search>
            <add position="before" offset="1"><![CDATA[
// lightshop
			$lightshop = array();
			
			if ($this->user->hasPermission('access', 'extension/theme/lightshop')) {
				$stores = $this->model_setting_store->getStores();
				
				if ($stores) {
					$lightshop_store = array();

					$lightshop_store[] = array(
							'name'	   => (utf8_strlen($this->config->get('config_name')) > 12 ? utf8_substr($this->config->get('config_name'), 0, 12) . '..' : $this->config->get('config_name')),
							'href'     => $this->url->link('extension/theme/lightshop', 'user_token=' . $this->session->data['user_token'] . '&store_id=0', true),
							'children' => array()		
					);
					
					foreach ($stores as $store) {
						$lightshop_store[] = array(
							'name'     => (utf8_strlen($store['name']) > 12 ? utf8_substr($store['name'], 0, 12) . '..' : $store['name']),
							'href'     => $this->url->link('extension/theme/lightshop', 'user_token=' . $this->session->data['user_token'] . '&store_id=' . $store['store_id'], true),
							'children' => array()	
						);
					}

					if ($lightshop_store) {		
						$lightshop[] = array(
							'name'	   => $this->language->get('text_theme_lightshop_store'),
							'href'     => '',
							'children' => $lightshop_store		
						);					
					}
					
				} else {
					$lightshop[] = array(
						'name'	   => $this->language->get('text_theme_lightshop'),
						'href'     => $this->url->link('extension/theme/lightshop', 'user_token=' . $this->session->data['user_token'] . '&store_id=0', true),
						'children' => array()		
					);					
				}
			}

			if ($this->user->hasPermission('access', 'extension/module/lightshop/callback')) {
				$lightshop[] = array(
					'name'	   => $this->language->get('text_callback'),
					'href'     => $this->url->link('extension/module/lightshop/callback', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
			if ($this->user->hasPermission('access', 'extension/module/lightshop/subscribe')) {
				$lightshop[] = array(
					'name'	   => $this->language->get('text_subscribe'),
					'href'     => $this->url->link('extension/module/lightshop/subscribe', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}

			if ($this->user->hasPermission('access', 'extension/module/lightshop/lightshop_sets')) {		
				$lightshop[] = array(
					'name'	   => $this->language->get('text_lightshop_sets'),
					'href'     => $this->url->link('extension/module/lightshop/lightshop_sets', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);					
			}			
			if ($this->user->hasPermission('access', 'extension/module/lightshop/lightshop_news')) {		
				$lightshop[] = array(
					'name'	   => $this->language->get('text_lightshop_news'),
					'href'     => $this->url->link('extension/module/lightshop/lightshop_news', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);					
			}
			if ($this->user->hasPermission('access', 'extension/module/lightshop/lightshop_tab')) {		
				$lightshop[] = array(
					'name'	   => $this->language->get('text_lightshop_tab'),
					'href'     => $this->url->link('extension/module/lightshop/lightshop_tab', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);					
			}
			
			$blog = array();
			
			if ($this->user->hasPermission('access', 'extension/module/lightshop/lightshop_blog')) {
				$blog[] = array(
					'name'     => $this->language->get('text_lightshop_blog'),
					'href'     => $this->url->link('extension/module/lightshop/lightshop_blog', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()	
				);
			}
			
			if ($this->user->hasPermission('access', 'extension/module/lightshop/lightshopcat_blog')) {
				$blog[] = array(
					'name'	   => $this->language->get('text_lightshopcat_blog'),
					'href'     => $this->url->link('extension/module/lightshop/lightshopcat_blog', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);
			}
			if ($this->user->hasPermission('access', 'extension/module/lightshop/lightshopblog_review')) {
				$blog[] = array(
					'name'	   => $this->language->get('text_lightshopblog_review'),
					'href'     => $this->url->link('extension/module/lightshop/lightshopblog_review', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);
			}
			
			if ($blog) {		
				$lightshop[] = array(
					'name'	   => $this->language->get('text_lightshop_blog_main'),
					'href'     => '',
					'children' => $blog		
				);					
			}
			
			if ($lightshop) {
				$data['menus'][] = array(
					'id'       => 'menu-lightshop',
					'icon'	   => 'lightshop', 
					'name'	   => $this->language->get('text_lightshop'),
					'href'     => '',
					'children' => $lightshop
				);		
			}
			
// lightshop end
            ]]></add>
        </operation>
    </file> 
    <file path="admin/controller/common/dashboard.php">
        <operation>
            <search><![CDATA[
		$data['header'] = $this->load->controller('common/header');
            ]]></search>
            <add position="before"><![CDATA[
		require_once(DIR_APPLICATION .'controller/extension/theme/lclient/checker.php');//lightshop change this
            ]]></add>
        </operation>
    </file> 
    <file path="admin/controller/common/header.php">
        <operation>
            <search><![CDATA[
		$data['title'] = $this->document->getTitle();
            ]]></search>
            <add position="before"><![CDATA[		
		$this->document->addStyle('view/stylesheet/lightshop/lightshop-column-icon.css');// lightshop
            ]]></add>
        </operation>
    </file>  
    <file path="admin/controller/extension/module/filter.php">
        <operation>
            <search><![CDATA[
		$data['header'] = $this->load->controller('common/header');
            ]]></search>
            <add position="before"><![CDATA[
//lightshop start
		if (isset($this->request->post['filter_grouptype'])) {
			$data['filter_grouptype'] = $this->request->post['filter_grouptype'];
		} elseif($this->config->get('filter_grouptype')) {
			$data['filter_grouptype'] = $this->config->get('filter_grouptype');
		}else{
			$data['filter_grouptype'] = 0;
		}
//lightshop stop
            ]]></add>
        </operation>
    </file> 
    <file path="admin/language/*/common/header.php">
        <operation>
            <search><![CDATA[
			$_['text_logout']
            ]]></search>
            <add position="after"><![CDATA[
// lightshop
$_['text_callback']            = 'Обратный звонок';
// lightshop end
            ]]></add>
        </operation>
    </file>
    <file path="admin/language/*/common/column_left.php">
        <operation>
            <search><![CDATA[
$_['text_other_status']
            ]]></search>
            <add position="after"><![CDATA[
// lightshop
$_['text_subscribe']          	    		= 'Подписка на новости';// lightshop
$_['text_lightshop_news']          	    	= 'Новости';// lightshop
$_['text_lightshop_blog_main']          	= 'Блог';// lightshop
$_['text_lightshopcat_blog']          	    = 'Категории';// lightshop
$_['text_lightshop_blog']          	    	= 'Статьи';// lightshop
$_['text_lightshopblog_review']          	= 'Отзывы';// lightshop
$_['text_lightshop_sets']        		  	= 'Наборы';// lightshop
$_['text_lightshop']        		  		= 'Лайтшоп';// lightshop
$_['text_theme_lightshop']        		  	= 'Настройка шаблона';// lightshop
$_['text_theme_lightshop_store']        	= 'Настройка';// lightshop
$_['text_lightshop_tab']          	    	= 'Вкладки к товарам';// lightshop

// lightshop end
            ]]></add>
        </operation>
    </file>  
    <file path="admin/model/catalog/manufacturer.php">
        <operation error="skip"><!-- ocStore only -->
            <search><![CDATA[
			$sql .= " AND name LIKE '" . $this->db->escape($data['filter_name']) . "%'";
            ]]></search>
            <add position="replace"><![CDATA[	
			$sql .= " AND md.name LIKE '" . $this->db->escape($data['filter_name']) . "%'"; //Lightshop change this
            ]]></add>
        </operation>
    </file>
    <file path="admin/model/catalog/product.php">
        <operation error="skip">
            <search><![CDATA[
		$this->db->query("DELETE FROM " . DB_PREFIX . "coupon_product WHERE product_id = '" . (int)$product_id . "'");
            ]]></search>
            <add position="after"><![CDATA[	
		$this->db->query("DELETE FROM " . DB_PREFIX . "lightshop_blog_related_prod WHERE related_id = '" . (int)$product_id . "'");// lightshop add this
            ]]></add>
        </operation>
    </file>	
    <file path="admin/view/template/extension/module/filter.twig">
        <operation>
            <search><![CDATA[
<form action="{{ action }}" method="post" enctype="multipart/form-data" id="form-module" class="form-horizontal">
            ]]></search>
            <add position="after"><![CDATA[
<!-- lightshop -->		
            <div class="form-group">
              <label class="col-sm-2 control-label"><span data-toggle="tooltip" title="" data-original-title="Тип фильтрации по группам фильтров">Тип фильтрации по группам фильтров</span></label>
              <div class="col-sm-10">
                <label class="radio-inline"><input type="radio" name="filter_grouptype" value="0" {{ filter_grouptype == '0' ? 'checked' : '' }}> И </label>
                <label class="radio-inline"><input type="radio" name="filter_grouptype" value="1" {{ filter_grouptype == '1' ? 'checked' : '' }}> ИЛИ </label>
              </div>  
            </div>  
<!-- lightshop end -->
            ]]></add>
        </operation>
    </file>
<!-- catalog --> 
    <file path="catalog/controller/account/address.php">
        <operation>
            <search><![CDATA[
		$data['addresses'] = array();
            ]]></search>
            <add position="before"><![CDATA[
		$data['heading_title'] = $this->language->get('heading_title');// Lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
if (isset($this->error['firstname'])) {
            ]]></search>
            <add position="before"><![CDATA[
//lightshop start
		$data['button_back'] = $this->language->get('button_back');
		$data['entry_telephone'] = $this->language->get('entry_telephone');
		$data['entry_email'] = $this->language->get('entry_email');
	
		$this->load->model('extension/module/lightshop');
		$activeFields = $this->model_extension_module_lightshop->getFields($this->config->get('config_customer_group_id'),0);

		$allFields = $this->model_extension_module_lightshop->getAllFields();

		$data['allCustomFields'] = $allFields;
		foreach($allFields as $field){
			$data['entry_'.$field.'_required'] = 0;
			$data['entry_'.$field.'_show'] = 0;

			if (isset($this->request->post[$field])) {
				$data[$field] = $this->request->post[$field];
			} elseif (!empty($customer_info)) {
				$data[$field] = $customer_info[$field];
			} else {
				$data[$field] = '';
			}

			if (isset($this->error[$field])) {
				$data['error_'.$field] = $this->error[$field];
			} else {
				$data['error_'.$field] = '';
			}
			
		}

		foreach($activeFields as $field){
			if($field['description']){
				$data['entry_'.$field['name']] = $field['description'];
			}
			$data['entry_'.$field['name'].'_required'] = $field['required'];
			$data['entry_'.$field['name'].'_show'] = $field['is_show'];
		}
		$data['entry_email_show'] = 0;$data['entry_fax_show'] = 0;$data['entry_telephone_show'] = 0;//не должно быть в адресе
//lightshop end
            ]]></add>
        </operation>
        <operation>
            <search index="1"><![CDATA[
                $this->error['custom_field'][$custom_field['custom_field_id']] = sprintf($this->language->get('error_custom_field'), $custom_field['name']);
            ]]></search>
            <add position="after" offset="3"><![CDATA[
//lightshop start				
		$this->load->model('extension/module/lightshop');
		$this->error = $this->model_extension_module_lightshop->checkLCustomFields($this->error);
		$ignoredFields = $this->model_extension_module_lightshop->getIgnoredFields($this->config->get('config_customer_group_id'),0);
		$ignoredFields[] = 'email';$ignoredFields[] = 'fax';$ignoredFields[] = 'telephone'; //Не нужны в адресах
		if(isset($this->error)){
			foreach($this->error as $key => $fieldsdata){
				if(in_array($key,$ignoredFields)){
					unset($this->error[$key]);
				}
			}

			if(!count($this->error)){
				$this->error = false;
			}
		}
		
//lightshop end	
            ]]></add>
        </operation>
	</file>
    <file path="catalog/controller/account/edit.php">
        <operation>
            <search><![CDATA[
		if (isset($this->error['warning'])) {
            ]]></search>
            <add position="before"><![CDATA[
//lightshop start
		
		$this->load->model('extension/module/lightshop');
		$activeFields = $this->model_extension_module_lightshop->getFields($this->config->get('config_customer_group_id'),1);
		$allFields = $this->model_extension_module_lightshop->getAllFields();

		$data['allCustomFields'] = $allFields;
		foreach($allFields as $field){
			$data['entry_'.$field.'_required'] = 0;
			$data['entry_'.$field.'_show'] = 0;

			if (isset($this->request->post[$field])) {
				$data[$field] = $this->request->post[$field];
			} elseif (!empty($customer_info)) {
				$data[$field] = $customer_info[$field];
			} else {
				$data[$field] = '';
			}

			if (isset($this->error[$field])) {
				$data['error_'.$field] = $this->error[$field];
			} else {
				$data['error_'.$field] = '';
			}

		}

		foreach($activeFields as $field){
			if($field['description']){
				$data['entry_'.$field['name']] = $field['description'];
			}
			$data['entry_'.$field['name'].'_required'] = $field['required'];
			$data['entry_'.$field['name'].'_show'] = $field['is_show'];
		}
		$data['entry_email_required'] = 1; // В регистрации всегда требовать email
		$data['entry_email_show'] = 1;
//lightshop end

            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
		$data['action'] = $this->url->link('account/edit', '', true);
            ]]></search>
            <add position="before"><![CDATA[
		if (isset($this->error['address_1'])) {
			$data['error_address_1'] = $this->error['address_1'];
		} else {
			$data['error_address_1'] = '';
		}

		if (isset($this->error['city'])) {
			$data['error_city'] = $this->error['city'];
		} else {
			$data['error_city'] = '';
		}

		if (isset($this->error['zone'])) {
			$data['error_zone'] = $this->error['zone'];
		} else {
			$data['error_zone'] = '';
		}

		if (isset($this->error['country'])) {
			$data['error_country'] = $this->error['country'];
		} else {
			$data['error_country'] = '';
		}
		if (isset($this->error['postcode'])) {
			$data['error_postcode'] = $this->error['postcode'];
		} else {
			$data['error_postcode'] = '';
		}

		if (isset($this->error['company'])) {
			$data['error_company'] = $this->error['company'];
		} else {
			$data['error_company'] = '';
		}
		if (isset($this->error['fax'])) {
			$data['error_fax'] = $this->error['fax'];
		} else {
			$data['error_fax'] = '';
		}
		if (isset($this->error['address_2'])) {
			$data['error_address_2'] = $this->error['address_2'];
		} else {
			$data['error_address_2'] = '';
		}
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
			$this->error['telephone'] = $this->language->get('error_telephone');
            ]]></search>
            <add position="after" offset="2"><![CDATA[
		if ((utf8_strlen(trim($this->request->post['address_1'])) < 3) || (utf8_strlen(trim($this->request->post['address_1'])) > 128)) {
			$this->error['address_1'] = $this->language->get('error_address_1');
		}


		if ((utf8_strlen(trim($this->request->post['city'])) < 2) || (utf8_strlen(trim($this->request->post['city'])) > 128)) {
			$this->error['city'] = $this->language->get('error_city');
		}
            ]]></add>
        </operation>
        <operation>
            <search index="1"><![CDATA[
                $this->error['custom_field'][$custom_field['custom_field_id']] = sprintf($this->language->get('error_custom_field'), $custom_field['name']);
            ]]></search>
            <add position="after" offset="3"><![CDATA[
//lightshop start				
		$this->load->model('extension/module/lightshop');
		$this->error = $this->model_extension_module_lightshop->checkLCustomFields($this->error);
		$ignoredFields = $this->model_extension_module_lightshop->getIgnoredFields($this->config->get('config_customer_group_id'),1);
		if(isset($this->error)){
			foreach($this->error as $key => $fieldsdata){
				if(in_array($key,$ignoredFields)  && $key != 'email' ){
					unset($this->error[$key]);
				}
			}

			if(!count($this->error)){
				$this->error = false;
			}
		}
//lightshop end	
            ]]></add>
        </operation>
	</file>
    <file path="catalog/controller/account/login.php">
        <operation>
            <search><![CDATA[
		$data['action'] = $this->url->link('account/login', '', true);
            ]]></search>
            <add position="before"><![CDATA[
		// lightshop
		$this->load->language('extension/theme/lightshop');
		$data['text_account_check'] = $this->language->get('text_account_check');
		// lightshop end
            ]]></add>
        </operation>
	</file>
    <file path="catalog/controller/account/register.php">
        <operation>
            <search><![CDATA[
		$this->load->model('account/customer');
            ]]></search>
            <add position="after"><![CDATA[
		$this->load->model('account/address');//lightshop added this
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$customer_id = $this->model_account_customer->addCustomer($this->request->post);
            ]]></search>
            <add position="after"><![CDATA[
		//lightshop
			if ($customer_id) {
				$ad_data = $this->request->post;
				$ad_data['default'] = 1;
				$this->model_account_address->addAddress($customer_id, $ad_data);
			}
		//lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$data['customer_group_id'] = $this->request->post['customer_group_id'];
            ]]></search>
            <add position="after"><![CDATA[
		}elseif(isset($this->request->get['customer_group_id'])){
			$data['customer_group_id'] = $this->request->get['customer_group_id'];
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		if (isset($this->request->post['firstname'])) {
            ]]></search>
            <add position="before"><![CDATA[
//lightshop start

		
		$this->load->model('extension/module/lightshop');
		$activeFields = $this->model_extension_module_lightshop->getFields($data['customer_group_id']);
		$allFields = $this->model_extension_module_lightshop->getAllFields();

		$data['allCustomFields'] = $allFields;
		foreach($allFields as $field){
			$data['entry_'.$field.'_required'] = 0;
			$data['entry_'.$field.'_show'] = 0;
		}

		foreach($activeFields as $field){
			if($field['description']){
				$data['entry_'.$field['name']] = $field['description'];
			}
			$data['entry_'.$field['name'].'_required'] = $field['required'];
			$data['entry_'.$field['name'].'_show'] = $field['is_show'];
			if(!isset($data['error_'.$field['name']])){
				$data['error_'.$field['name']] = '' ;
			}			
		}
		$data['entry_email_required'] = 1; // В регистрации всегда требовать email
		$data['entry_email_show'] = 1;

//lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		$data['custom_fields'] = array();
            ]]></search>
            <add position="before" index="1"><![CDATA[
//lightshop start
		$this->load->model('localisation/country');

		$data['countries'] = $this->model_localisation_country->getCountries();
//lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		$data['action'] = $this->url->link('account/register', '', true);
            ]]></search>
            <add position="before"><![CDATA[
		if (isset($this->error['address_2'])) {
			$data['error_address_2'] = $this->error['address_2'];
		} else {
			$data['error_address_2'] = '';
		}
		
		if (isset($this->error['company'])) {
			$data['error_company'] = $this->error['company'];
		} else {
			$data['error_company'] = '';
		}
		
		if (isset($this->error['fax'])) {
			$data['error_fax'] = $this->error['fax'];
		} else {
			$data['error_fax'] = '';
		}
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
				$this->error['warning'] = sprintf($this->language->get('error_agree'), $information_info['title']);
            ]]></search>
            <add position="after" offset="2"><![CDATA[
//lightshop start				
		$this->load->model('extension/module/lightshop');
		$this->error = $this->model_extension_module_lightshop->checkLCustomFields($this->error);
		$ignoredFields = $this->model_extension_module_lightshop->getIgnoredFields($customer_group_id);	
		if(isset($this->error)){
			foreach($this->error as $key => $fieldsdata){
				if(in_array($key,$ignoredFields) && $key != 'email'){// В регистрации всегда проверять email
					unset($this->error[$key]);
				}
			}
			if(!count($this->error)){
				$this->error = false;
			}
		}
//lightshop end	
            ]]></add>
        </operation>
	</file>
    <file path="catalog/controller/account/voucher.php">
        <operation>
            <search index="0"><![CDATA[
		$this->load->language('account/voucher');
            ]]></search>
            <add position="after"><![CDATA[
		$this->load->language('extension/theme/lightshop');// lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		if (isset($this->error['warning'])) {
            ]]></search>
            <add position="before"><![CDATA[
		// lightshop
		if ($this->config->get('theme_lightshop_voucher_pdata')) {
			$this->load->language('extension/theme/lightshop');
			$this->load->model('catalog/information');

			$information_info = $this->model_catalog_information->getInformation($this->config->get('theme_lightshop_voucher_pdata'));

			if ($information_info) {
				$data['text_lightshop_pdata_checkbox'] = sprintf($this->language->get('text_lightshop_pdata_checkbox'), $this->url->link('information/information/agree', 'information_id=' . $this->config->get('theme_lightshop_voucher_pdata'), true), $information_info['title'], $information_info['title']);
			} else {
				$data['text_lightshop_pdata_checkbox'] = '';
			}
		} else {
			$data['text_lightshop_pdata_checkbox'] = '';
		}
		// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		$data['action'] = $this->url->link('account/voucher', '', true);
            ]]></search>
            <add position="before"><![CDATA[
		// lightshop
		if (isset($this->error['error_pdata'])) {
			$data['error_pdata'] = $this->error['error_pdata'];
		} else {
			$data['error_pdata'] = '';
		}
		// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
		$data['column_left'] = $this->load->controller('common/column_left');
            ]]></search>
            <add position="before"><![CDATA[
		// lightshop
		if (isset($this->request->post['pdata'])) {
			$data['pdata'] = $this->request->post['pdata'];
		} else {
			$data['pdata'] = '';
		}
		// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
		return !$this->error;
            ]]></search>
            <add position="before"><![CDATA[
		// lightshop
		if ($this->config->get('theme_lightshop_voucher_pdata')) {
			$this->load->model('catalog/information');
			
			$information_info = $this->model_catalog_information->getInformation($this->config->get('theme_lightshop_voucher_pdata'));
			
			if ($information_info && !isset($this->request->post['pdata'])) {
				$this->error['error_pdata'] = sprintf($this->language->get('text_lightshop_error_pdata'), $information_info['title']);
			}
		}
		// lightshop end
            ]]></add>
        </operation>
	</file>
    <file path="catalog/controller/account/wishlist.php">
        <operation>
            <search index="0"><![CDATA[
		if (!$this->customer->isLogged()) {
            ]]></search>
            <add position="replace"><![CDATA[
		if (!$this->customer->isLogged() && !$this->config->get('theme_lightshop_wishlist')) {
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
		$this->load->language('account/wishlist');
            ]]></search>
            <add position="after"><![CDATA[
		$this->load->language('extension/theme/lightshop'); // lightshop
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
			$this->model_account_wishlist->deleteWishlist($this->request->get['remove']);
            ]]></search>
            <add position="replace"><![CDATA[
			$this->model_account_wishlist->deleteWishlistLb($this->request->get['remove']);
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
		$data['products'] = array();
            ]]></search>
            <add position="before"><![CDATA[
		$data['islogged'] = $this->customer->isLogged();//lightshop
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
		$results = $this->model_account_wishlist->getWishlist();
            ]]></search>
            <add position="replace"><![CDATA[
		$results = $this->model_account_wishlist->getWishlistLb();// <--lightshop change this
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
						if ($product_info) {
            ]]></search>
            <add position="after"><![CDATA[
				// lightshop
				if ($this->config->get('theme_lightshop_image_wishlist_resize')) {
				if ($product_info['image']) {
					$image = $this->model_tool_image->lightshop_resize($product_info['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_height'));
				} else {
					$image = $this->model_tool_image->lightshop_resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_height'));
				}
				} else {
            ]]></add>
        </operation>
        <operation>
            <search index="1"><![CDATA[
				if ($product_info['image']) {
            ]]></search>
            <add position="after" offset="4"><![CDATA[
				}
				
				if ($this->config->get('config_review_status')) {
					$rating = (int)$product_info['rating'];
				} else {
					$rating = false;
				}	
				
				if ($product_info['quantity'] <= 0 && !$this->config->get('config_stock_checkout')) {
					$buy_btn = $product_info['stock_status'];
				} else {
					$buy_btn = '';
				}
				
				$data['button_compare'] = $this->language->get('button_compare');				
				// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
					$image = false;
            ]]></search>
            <add position="replace"><![CDATA[
					$image = $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_height'));
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
					'stock'      => $stock,
            ]]></search>
            <add position="after"><![CDATA[
					// lightshop
					'rating'      => $rating,
					'minimum'     => $product_info['minimum'] > 0 ? $product_info['minimum'] : 1,
					'buy_btn'	  => $buy_btn,
					// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
				$this->model_account_wishlist->deleteWishlist($result['product_id']);
            ]]></search>
            <add position="replace"><![CDATA[
				$this->model_account_wishlist->deleteWishlistLb($result['product_id']);
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
	public function add() {
            ]]></search>
            <add position="after" offset="1"><![CDATA[
		$this->load->language('extension/theme/lightshop'); // lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			if ($this->customer->isLogged()) {
            ]]></search>
            <add position="replace"><![CDATA[
			if ($this->customer->isLogged() || $this->config->get('theme_lightshop_wishlist')) {
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
				$this->model_account_wishlist->addWishlist($this->request->post['product_id']);
            ]]></search>
            <add position="replace"><![CDATA[
				$this->model_account_wishlist->addWishlistLb($this->request->post['product_id']);//lightshop change this
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
				$json['total'] = sprintf($this->language->get('text_wishlist'), $this->model_account_wishlist->getTotalWishlist());
            ]]></search>
            <add position="replace"><![CDATA[
				$json['total'] = sprintf($this->language->get('text_wishlist'), $this->model_account_wishlist->getTotalWishlistLb());
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		$this->response->setOutput(json_encode($json));
            ]]></search>
            <add position="after" offset="1"><![CDATA[
	public function getwish() {
		
		$data['islogged'] = false;
		
		if ($this->customer->isLogged()) {
			$data['islogged'] = true;
//			$this->session->data['redirect'] = $this->url->link('account/wishlist', '', true);

//			$this->response->redirect($this->url->link('account/login', '', true));
		}
		
		

		$this->load->language('account/wishlist');
		$this->load->language('extension/theme/lightshop'); // lightshop

		$this->load->model('account/wishlist');

		$this->load->model('catalog/product');

		$this->load->model('tool/image');
		$data['text_islogged'] = sprintf($this->language->get('text_islogged'), $this->url->link('account/login', '', true), $this->url->link('account/register', '', true), $this->url->link('account/wishlist'));

		$json = array();

		$data['products'] = array();

		$results = $this->model_account_wishlist->getWishlistLb();//lightshop change this

		foreach ($results as $result) {
			$product_info = $this->model_catalog_product->getProduct($result['product_id']);

			if ($product_info) {

				// lightshop
				if ($this->config->get('theme_lightshop_image_wishlist_resize')) {
					if ($product_info['image']) {
						$image = $this->model_tool_image->lightshop_resize($product_info['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_height'));
					} else {
						$image = $this->model_tool_image->lightshop_resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_height'));
					}
					} else {
					if ($product_info['image']) {
						$image = $this->model_tool_image->resize($product_info['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_height'));
					} else {
						$image = $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_height'));
					}
				}
				

				if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
					$price = $this->currency->format($this->tax->calculate($product_info['price'], $product_info['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$price = false;
				}

				if ((float)$product_info['special']) {
					$special = $this->currency->format($this->tax->calculate($product_info['special'], $product_info['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$special = false;
				}

				$data['products'][] = array(
					'product_id' => $product_info['product_id'],
					'thumb'      => $image,
					'name'       => $product_info['name'],
					'href'       => $this->url->link('product/product', 'product_id=' . $product_info['product_id'])
				);
				$data['count'] = count($data['products']);
			} 
		}

		$this->response->setOutput($this->load->view('account/wish_head', $data));
	}
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/account/tracking.php">
        <operation>
            <search><![CDATA[
			$this->load->model('catalog/product');
            ]]></search>
            <add position="after"><![CDATA[
			$this->load->model('tool/image'); // lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			foreach ($results as $result) {
            ]]></search>
            <add position="after"><![CDATA[
				// lightshop
				if ($result['image']) {
					$image = $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));
				} else {
					$image = $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));
				}
				if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
					$price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$price = false;
				}

				if ((float)$result['special']) {
					$special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$special = false;
				}
				// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
					'name' =>
            ]]></search>
            <add position="after"><![CDATA[
					'thumb'       => $image, // lightshop
					'track'       => '1', // lightshop
					'price'       => $price, // lightshop
					'special'     => $special, // lightshop
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/affiliate/register.php">
        <operation>
            <search index="0"><![CDATA[
$customer_id = $this->model_account_customer
            ]]></search>
            <add position="after"><![CDATA[
			$this->customer->login($this->request->post['email'], $this->request->post['password']);//lightshop add this
            ]]></add>
        </operation>
        <operation>
            <search index="1"><![CDATA[
			$this->customer->login($this->request->post['email'], $this->request->post['password']);
            ]]></search>
            <add position="replace"><![CDATA[
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		$data['text_account_already'] = sprintf
            ]]></search>
            <add position="before"><![CDATA[
		$data['heading_title'] = $this->language->get('heading_title');
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		if (isset($this->request->post['firstname'])) {
            ]]></search>
            <add position="before"><![CDATA[
//lightshop start
		$data['button_back'] = $this->language->get('button_back');
		$data['entry_telephone'] = $this->language->get('entry_telephone');
		$data['entry_email'] = $this->language->get('entry_email');
	
		$this->load->model('extension/module/lightshop');
		$activeFields = $this->model_extension_module_lightshop->getFields($this->config->get('config_customer_group_id'),0);

		$allFields = $this->model_extension_module_lightshop->getAllFields();

		$data['allCustomFields'] = $allFields;
		foreach($allFields as $field){
			$data['entry_'.$field.'_required'] = 0;
			$data['entry_'.$field.'_show'] = 0;

			if (isset($this->request->post[$field])) {
				$data[$field] = $this->request->post[$field];
			} elseif (!empty($customer_info)) {
				$data[$field] = $customer_info[$field];
			} else {
				$data[$field] = '';
			}

			if (isset($this->error[$field])) {
				$data['error_'.$field] = $this->error[$field];
			} else {
				$data['error_'.$field] = '';
			}
			
		}

		foreach($activeFields as $field){
			if($field['description']){
				$data['entry_'.$field['name']] = $field['description'];
			}
			$data['entry_'.$field['name'].'_required'] = $field['required'];
			$data['entry_'.$field['name'].'_show'] = $field['is_show'];
		}
		$data['entry_email_show'] = 0;$data['entry_fax_show'] = 0;$data['entry_telephone_show'] = 0;//не должно быть в адресе
//lightshop end
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
		$this->load->model('account/custom_field');
            ]]></search>
            <add position="before" offsrt="1"><![CDATA[
//Lightshop start
		if (isset($this->request->post['city'])) {
			$data['city'] = $this->request->post['city'];
		} else {
			$data['city'] = '';
		}

		if (isset($this->request->post['country_id'])) {
			$data['country_id'] = (int)$this->request->post['country_id'];
		} else {
			$data['country_id'] = $this->config->get('config_country_id');
		}

		$this->load->model('localisation/country');

		$data['countries'] = $this->model_localisation_country->getCountries();
//Lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		return !$this->error;
            ]]></search>
            <add position="before"><![CDATA[
//lightshop start				
		$this->load->model('extension/module/lightshop');
		$this->error = $this->model_extension_module_lightshop->checkLCustomFields($this->error);
		$ignoredFields = $this->model_extension_module_lightshop->getIgnoredFields($this->config->get('config_customer_group_id'),0);
		$ignoredFields[] = 'email';$ignoredFields[] = 'fax';$ignoredFields[] = 'telephone'; //Не нужны в адресах
		if(isset($this->error)){
			foreach($this->error as $key => $fieldsdata){
				if(in_array($key,$ignoredFields)){
					unset($this->error[$key]);
				}
			}

			if(!count($this->error)){
				$this->error = false;
			}
		}
		
//lightshop end	
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/api/customer.php">
        <operation>
            <search index="0"><![CDATA[
				$customer_group_id = $this->config->get('config_customer_group_id');
            ]]></search>
            <add position="after" offset="1"><![CDATA[
//lightshop start				
		$this->load->model('extension/module/lightshop');
		if(!isset($json['error'])){
			$json['error'] = array();
		}
		$json['error'] = $this->model_extension_module_lightshop->checkLCustomFields($json['error']);
		$ignoredFields = $this->model_extension_module_lightshop->getIgnoredFields($customer_group_id);

		if(isset($json['error'])){
			foreach($json['error'] as $key => $fieldsdata){
				if(in_array($key,$ignoredFields)){
					unset($json['error'][$key]);
				}
			}
			if(!count($json['error'])){
				unset($json['error']);
			}
		}
//lightshop end	
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/api/payment.php">
        <operation>
            <search index="1"><![CDATA[
					$json['error']['custom_field' . $custom_field['custom_field_id']] = sprintf($this->language->get('error_custom_field'), $custom_field['name']);
            ]]></search>
            <add position="after" offset="3"><![CDATA[
//lightshop start				
		$this->load->model('extension/module/lightshop');
		$ignoredFields = $this->model_extension_module_lightshop->getIgnoredFields($this->config->get('config_customer_group_id'));
		if(isset($json['error'])){
			foreach($json['error'] as $key => $fieldsdata){
				if(in_array($key,$ignoredFields)){
					unset($json['error'][$key]);
				}
			}
			if(!count($json['error'])){
				unset($json['error']);
			}
		}
//lightshop end	
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/api/shipping.php">
        <operation>
            <search index="1"><![CDATA[
						$json['error']['custom_field' . $custom_field['custom_field_id']] = sprintf($this->language->get('error_custom_field'), $custom_field['name']);
            ]]></search>
            <add position="after" offset="2"><![CDATA[
//lightshop start				
		$this->load->model('extension/module/lightshop');
		$ignoredFields = $this->model_extension_module_lightshop->getIgnoredFields($this->config->get('config_customer_group_id'));
		if(isset($json['error'])){
			foreach($json['error'] as $key => $fieldsdata){
				if(in_array($key,$ignoredFields)){
					unset($json['error'][$key]);
				}
			}
			if(!count($json['error'])){
				unset($json['error']);
			}
		}
//lightshop end	
            ]]></add>
        </operation>
    </file>

    <file path="catalog/controller/checkout/cart.php">
        <operation>
            <search><![CDATA[
		if ($this->cart->hasProducts() || !empty($this->session->data['vouchers'])) {
            ]]></search>
            <add position="before"><![CDATA[
		// lightshop
			if ($this->config->get($this->config->get('theme_lightshop_config_captcha_fo') . '_status')) {
				$data['captcha_fo'] = $this->load->controller('extension/captcha/' . $this->config->get('theme_lightshop_config_captcha_fo'));
			} else {
				$data['captcha_fo'] = '';
			}
		$this->load->language('extension/theme/lightshop'); 
		$data['schema'] = $this->config->get('theme_lightshop_schema');
			$data['button_fastorder_sendorder'] = $this->language->get('button_lighshop_sendorder');
			$data['text_lightshop_fast_order'] = $this->language->get('text_lightshop_fast_order');
			$data['text_fastorder_name'] = $this->language->get('text_lighshop_name');
			$data['text_fastorder_phone'] = $this->language->get('text_lighshop_phone');
			$data['text_fastorder_comment'] = $this->language->get('text_lighshop_comment');
			if ($this->config->get('theme_lightshop_buy_click_pdata')) {
				$this->load->language('extension/theme/lightshop');
				$this->load->model('catalog/information');

				$information_info = $this->model_catalog_information->getInformation($this->config->get('theme_lightshop_buy_click_pdata'));

				if ($information_info) {
					$data['text_lightshop_pdata'] = sprintf($this->language->get('text_lightshop_pdata'), $this->language->get('button_lighshop_sendorder'), $this->url->link('information/information/agree', 'information_id=' . $this->config->get('theme_lightshop_buy_click_pdata'), true), $information_info['title'], $information_info['title']);
				} else {
					$data['text_lightshop_pdata'] = '';
				}
			} else {
				$data['text_lightshop_pdata'] = '';
			}
			
			$data['buy_click'] = array();
			if($this->config->get('theme_lightshop_buy_click')){
				$data['buy_click'] = $this->config->get('theme_lightshop_buy_click');
				if ($this->customer->isLogged()) {
					$this->load->model('account/customer');
					$data['customer_info'] = $this->model_account_customer->getCustomer($this->customer->getId());
				}
			}
			$data['language_id'] = $this->config->get('config_language_id');

			$this->load->language('checkout/checkout');
			$data['entry_firstname'] = $this->language->get('entry_firstname');
			$data['entry_lastname'] = $this->language->get('entry_lastname');
			$data['entry_email'] = $this->language->get('entry_email');
			$data['entry_telephone'] = $this->language->get('entry_telephone');
			$data['entry_comment'] = $this->language->get('entry_comment');
		// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
					$image = $this->model_tool_image->resize($product['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_cart_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_cart_height'));
            ]]></search>
            <add position="replace"><![CDATA[
					$image = $this->config->get('theme_lightshop_image_cart_resize') ? $this->model_tool_image->lightshop_resize($product['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_cart_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_cart_height')) : $this->model_tool_image->resize($product['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_cart_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_cart_height')); // lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$this->response->setOutput($this->load->view('checkout/cart', $data));
            ]]></search>
            <add position="before"><![CDATA[
			$data['buyclick_form'] = $this->load->view('product/buyclick_form', $data);//Lightshop added this
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
$json['total'] = sprintf($this->language->get('text_items'), $this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0), $this->currency->format($total, $this->session->data['currency']));
            ]]></search>
            <add position="replace"><![CDATA[
// lightshop
$json['total'] = $this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0);
// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
	public function remove() {
            ]]></search>
            <add position="before"><![CDATA[
	// lightshop
	public function setadd() {
		$this->load->language('extension/module/lightshop_set');
		$json = array();

		if (isset($this->request->post['setproducts'])) {
			$product_ids = $this->request->post['setproducts'];
		} else {
			$product_ids = array();
		}	

		if (isset($this->request->post['setid'])) {
			$setid = $this->request->post['setid'];
		} else {
			$setid = 0;
		}	

		$this->session->data['lightshopsetid'][] = $setid;

		$option = array();


		foreach ($product_ids as $product_id => $quantity) {
			$this->cart->add($product_id, $quantity, $option);
		}

		$json['total'] = $this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0);
		$json['success'] = $this->language->get('text_set_added');

		$this->response->addHeader('Content-Type: application/json');
		$this->response->setOutput(json_encode($json));
	}
	// lightshop end
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/checkout/checkout.php">
        <operation>
            <search><![CDATA[
		if ($this->cart->hasShipping()) {
            ]]></search>
            <add position="before"><![CDATA[
		// lightshop
		$this->load->language('extension/theme/lightshop');
		$data['text_lightshop_checkout_s1'] = $this->language->get('text_lightshop_checkout_s1');
		$data['text_lightshop_checkout_s2'] = $this->language->get('text_lightshop_checkout_s2');
		$data['text_lightshop_checkout_s3'] = $this->language->get('text_lightshop_checkout_s3');
		$data['text_lightshop_checkout_s4'] = $this->language->get('text_lightshop_checkout_s4');

		$data['checkout_st3_sa'] = $this->config->get('theme_lightshop_checkout_st3_sa');

		$this->load->model('catalog/information');
		$information_info = $this->model_catalog_information->getInformation($this->config->get('config_checkout_id'));
		if ($information_info) {
			$data['error_agree'] = sprintf($this->language->get('error_agree'), $information_info['title']);
		} else {
			$data['error_agree'] = '';
		}
		
		$data['show_checkout_shipping'] = $this->config->get('theme_lightshop_checkout_shipping');
		// lightshop end
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/checkout/confirm.php">
        <operation>
            <search index="0"><![CDATA[
		if ($this->cart->hasShipping()) {
            ]]></search>
            <add position="replace"><![CDATA[
		if ($this->cart->hasShipping() || $this->config->get('theme_lightshop_checkout_shipping')) {
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
			if (!isset($this->session->data['shipping_method'])) {
            ]]></search>
            <add position="before"><![CDATA[
/*
            ]]></add>
        </operation>
        <operation>
            <search index="1"><![CDATA[
				$redirect = $this->url->link('checkout/checkout', '', true);
            ]]></search>
            <add position="after" offset="1"><![CDATA[
*/
            ]]></add>
        </operation>
        <operation>
            <search index="1"><![CDATA[
				$redirect = $this->url->link('checkout/checkout', '', true);
            ]]></search>
            <add position="after" offset="3"><![CDATA[
		if (isset($this->session->data['shipping_method'])) {
				$data['shipping_methods'] = $this->session->data['shipping_methods'];
				if(!isset($this->session->data['shipping_method'])){
					$this->session->data['shipping_method'] = current($this->session->data['shipping_methods']);
				}
			} else {
				$data['shipping_methods'] = array();
			}

            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
		if (!isset($this->session->data['payment_method'])) {
            ]]></search>
            <add position="before"><![CDATA[
/*	
            ]]></add>
        </operation>
        <operation>
            <search index="3"><![CDATA[
			$redirect = $this->url->link('checkout/checkout', '', true);
            ]]></search>
            <add position="after" offset="1"><![CDATA[
*/
            ]]></add>
        </operation>
        <operation>
            <search index="3"><![CDATA[
			$redirect = $this->url->link('checkout/checkout', '', true);
            ]]></search>
            <add position="after" offset="3"><![CDATA[
		if (isset($this->session->data['payment_methods'])) {
			$data['payment_methods'] = $this->session->data['payment_methods'];
			if(!isset($this->session->data['payment_method'])){
				$this->session->data['payment_method'] = current($this->session->data['payment_methods']);
			}
		} else {
			$data['payment_methods'] = array();
		}
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$this->session->data['order_id'] = $this->model_checkout_order->addOrder($order_data);
            ]]></search>
            <add position="replace"><![CDATA[
//Lightshop
			if (isset($this->session->data['order_id'])) {
				$this->model_checkout_order->editOrder($this->session->data['order_id'],$order_data);
			}else{
				$this->session->data['order_id'] = $this->model_checkout_order->addOrder($order_data);
				$this->session->data['ls_order_id'] = $this->session->data['order_id'];

			}
//Lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$data['payment'] = $this->load->controller('extension/payment/' . $this->session->data['payment_method']['code']);
            ]]></search>
            <add position="replace"><![CDATA[
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/checkout/guest.php">
        <operation>
            <search><![CDATA[
		if (isset($this->session->data['guest']['customer_group_id'])) {
            ]]></search>
            <add position="replace"><![CDATA[
		if (isset($this->request->post['customer_group_id'])) {
			$data['customer_group_id'] = $this->request->post['customer_group_id'];
		} elseif(isset($this->session->data['guest']['customer_group_id'])) {
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		if (isset($this->session->data['guest']['firstname'])) {
            ]]></search>
            <add position="before"><![CDATA[
//lightshop start
		$data['button_back'] = $this->language->get('button_back');
		$data['entry_telephone'] = $this->language->get('entry_telephone');
		$data['entry_email'] = $this->language->get('entry_email');
		$data['checkout_st3_sa'] = $this->config->get('theme_lightshop_checkout_st3_sa');
		
		$this->load->model('extension/module/lightshop');
		$activeFields = $this->model_extension_module_lightshop->getFields($data['customer_group_id']);
		$allFields = $this->model_extension_module_lightshop->getAllFields();

		$data['allCustomFields'] = $allFields;
		foreach($allFields as $field){
			$data['entry_'.$field.'_required'] = 0;
			$data['entry_'.$field.'_show'] = 0;
		
			if (isset($this->request->post[$field])) {
				$data[$field] = $this->request->post[$field];
			} elseif (!empty($customer_info)) {
				$data[$field] = $customer_info[$field];
			} else {
				$data[$field] = '';
			}

			if (isset($this->error[$field])) {
				$data['error_'.$field] = $this->error[$field];
			} else {
				$data['error_'.$field] = '';
			}

		}

		foreach($activeFields as $field){
			if($field['description']){
				$data['entry_'.$field['name']] = $field['description'];
			}
			$data['entry_'.$field['name'].'_required'] = $field['required'];
			$data['entry_'.$field['name'].'_show'] = $field['is_show'];
		}


//lightshop end		
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		if ($this->customer->isLogged()) {
            ]]></search>
            <add position="before" offset="1"><![CDATA[
		$customer_group_id = $this->config->get('config_customer_group_id');
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
				$customer_group_id = $this->request->post['customer_group_id'];
            ]]></search>
            <add position="replace" offset="2"><![CDATA[
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			if (isset($this->request->post['customer_group_id']) && is_array
            ]]></search>
            <add position="after"><![CDATA[
				$customer_group_id = $this->request->post['customer_group_id'];
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$this->session->data['account'] = 'guest';
            ]]></search>
            <add position="before" offset="1"><![CDATA[
//lightshop start				
		$this->load->model('extension/module/lightshop');
		if(!isset($json['error'])){
			$json['error'] = array();
		}
		$json['error'] = $this->model_extension_module_lightshop->checkLCustomFields($json['error']);
		$ignoredFields = array();
		if($this->model_extension_module_lightshop->getIgnoredFields($customer_group_id)){
			$ignoredFields = $this->model_extension_module_lightshop->getIgnoredFields($customer_group_id);
		}

		if(isset($json['error'])){
			foreach($json['error'] as $key => $fieldsdata){
				if(in_array($key,$ignoredFields)){
					unset($json['error'][$key]);
				}
			}
			if(!count($json['error'])){
				unset($json['error']);
			}
		}
//lightshop end	
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			unset($this->session->data['shipping_method']);
            ]]></search>
            <add position="replace" offset="3"><![CDATA[
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/checkout/guest_shipping.php">
        <operation>
            <search index="0"><![CDATA[
$this->load->model('localisation/country');
            ]]></search>
            <add position="after"><![CDATA[
//lightshop start
		$data['button_back'] = $this->language->get('button_back');
		$data['entry_telephone'] = $this->language->get('entry_telephone');
		$data['entry_email'] = $this->language->get('entry_email');
		$data['entry_fax'] = $this->language->get('entry_fax');
		
		$this->load->model('extension/module/lightshop');
		$activeFields = $this->model_extension_module_lightshop->getFields($this->session->data['guest']['customer_group_id']);
		$allFields = $this->model_extension_module_lightshop->getAllFields();

		$data['allCustomFields'] = $allFields;
		foreach($allFields as $field){
			$data['entry_'.$field.'_required'] = 0;
			$data['entry_'.$field.'_show'] = 0;

			if (isset($this->request->post[$field])) {
				$data[$field] = $this->request->post[$field];
			} elseif (!empty($customer_info)) {
				$data[$field] = $customer_info[$field];
			} else {
				$data[$field] = '';
			}

			if (isset($this->error[$field])) {
				$data['error_'.$field] = $this->error[$field];
			} else {
				$data['error_'.$field] = '';
			}

		}

		foreach($activeFields as $field){
			if($field['description']){
				$data['entry_'.$field['name']] = $field['description'];
			}
			$data['entry_'.$field['name'].'_required'] = $field['required'];
			$data['entry_'.$field['name'].'_show'] = $field['is_show'];
		}



//lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			if ((utf8_strlen(trim($this->request->post['address_1'])) < 3) || (utf8_strlen(trim($this->request->post['address_1'])) > 128)) {
            ]]></search>
            <add position="before"><![CDATA[
			if ((utf8_strlen(trim($this->request->post['telephone'])) < 1) || (utf8_strlen(trim($this->request->post['telephone'])) > 32)) {
				$json['error']['telephone'] = $this->language->get('error_telephone');
			}	
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$this->session->data['shipping_address']['firstname'] = $this->request->post['firstname'];
            ]]></search>
            <add position="before" offset="1"><![CDATA[
//lightshop start				
		$this->load->model('extension/module/lightshop');
		if(!isset($json['error'])){
			$json['error'] = array();
		}
		$json['error'] = $this->model_extension_module_lightshop->checkLCustomFields($json['error']);
		$ignoredFields = $this->model_extension_module_lightshop->getIgnoredFields($this->session->data['guest']['customer_group_id']);
		if(isset($json['error'])){
			foreach($json['error'] as $key => $fieldsdata){
				if(in_array($key,$ignoredFields)){
					unset($json['error'][$key]);
				}
			}
			if(!count($json['error'])){
				unset($json['error']);
			}
		}
//lightshop end	
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			unset($this->session->data['shipping_method']);
            ]]></search>
            <add position="replace" offset="1"><![CDATA[
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/checkout/login.php">
        <operation>
            <search><![CDATA[
		$data['forgotten'] = $this->url->link('account/forgotten', '', true);
            ]]></search>
            <add position="after"><![CDATA[
//lightshop start
		$this->load->language('extension/theme/lightshop');
		$data['text_account_check'] = $this->language->get('text_account_check');
//lightshop end
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/checkout/payment_address.php">
        <operation>
            <search><![CDATA[
		$this->load->model('account/address');
            ]]></search>
            <add position="after"><![CDATA[
//lightshop start
		$data['entry_telephone'] = $this->language->get('entry_telephone');
		$data['entry_email'] = $this->language->get('entry_email');
		$data['entry_fax'] = $this->language->get('entry_fax');

		if (isset($this->request->post['customer_group_id'])) {
			$customer_group_id = $this->request->post['customer_group_id'];
		} elseif(isset($this->session->data['guest']['customer_group_id'])) {
			$customer_group_id  = $this->session->data['guest']['customer_group_id'];
		} else {
			$customer_group_id  = $this->config->get('config_customer_group_id');
		}
		
		$this->load->model('extension/module/lightshop');
		$activeFields = $this->model_extension_module_lightshop->getFields($customer_group_id,0);
		$allFields = $this->model_extension_module_lightshop->getAllFields();

		$data['allCustomFields'] = $allFields;
		foreach($allFields as $field){
			$data['entry_'.$field.'_required'] = 0;
			$data['entry_'.$field.'_show'] = 0;

			if (isset($this->request->post[$field])) {
				$data[$field] = $this->request->post[$field];
			} elseif (!empty($customer_info)) {
				$data[$field] = $customer_info[$field];
			} else {
				$data[$field] = '';
			}

			if (isset($this->error[$field])) {
				$data['error_'.$field] = $this->error[$field];
			} else {
				$data['error_'.$field] = '';
			}
			
		}
 
		foreach($activeFields as $field){
			if($field['description']){
				$data['entry_'.$field['name']] = $field['description'];
			}
			$data['entry_'.$field['name'].'_required'] = $field['required'];
			$data['entry_'.$field['name'].'_show'] = $field['is_show'];
		}
//lightshop end
            ]]></add>
        </operation>
        <operation>
            <search index="1"><![CDATA[
				$this->load->model('localisation/country');
            ]]></search>
            <add position="before"><![CDATA[
//lightshop start
				if ((utf8_strlen(trim($this->request->post['telephone'])) < 2) || (utf8_strlen(trim($this->request->post['telephone'])) > 128)) {
					$json['error']['telephone'] = $this->language->get('error_telephone');
				}
//lightshop end
            ]]></add>
        </operation>
        <operation>
            <search index="1"><![CDATA[
                        $json['error']['custom_field' . $custom_field['custom_field_id']] = sprintf($this->language->get('error_custom_field'), $custom_field['name']);
            ]]></search>
            <add position="after" offset="3"><![CDATA[
//lightshop start	
				if (isset($json['error'])) {
					$this->load->model('extension/module/lightshop');
					$json['error'] = $this->model_extension_module_lightshop->checkLCustomFields($json['error']);
					$ignoredFields = $this->model_extension_module_lightshop->getIgnoredFields($this->config->get('config_customer_group_id'),0);
				
					if(isset($json['error'])){
						foreach($json['error'] as $key => $fieldsdata){
							if(in_array($key,$ignoredFields)){
								unset($json['error'][$key]);
							}
						}
						if(!count($json['error'])){
							unset($json['error']);
						}
					}
				}			

//lightshop end	
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
unset($this->session->data['payment_method']);
            ]]></search>
            <add position="replace" offset="1"><![CDATA[
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/checkout/payment_method.php">
        <operation>
            <search><![CDATA[
		if (isset($this->session->data['payment_address'])) {
            ]]></search>
            <add position="before"><![CDATA[
		// lightshop
		$this->load->language('extension/theme/lightshop');
		$data['button_back'] = $this->language->get('button_back');
		// lightshop end
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/checkout/register.php">
        <operation>
            <search><![CDATA[
			$data['zone_id'] = '';
            ]]></search>
            <add position="after" offset="2"><![CDATA[
//lightshop start

		if (isset($this->request->post['customer_group_id'])) {
			$data['customer_group_id'] = $this->request->post['customer_group_id'];
		} else {
			$data['customer_group_id'] = $this->config->get('config_customer_group_id');
		}
		
		$this->load->model('extension/module/lightshop');
		$activeFields = $this->model_extension_module_lightshop->getFields($data['customer_group_id']);
		$allFields = $this->model_extension_module_lightshop->getAllFields();
		$data['checkout_st3_sa'] = $this->config->get('theme_lightshop_checkout_st3_sa');
		$data['button_back'] = $this->language->get('button_back');

		$data['allCustomFields'] = $allFields;
		foreach($allFields as $field){
			$data['entry_'.$field.'_required'] = 0;
			$data['entry_'.$field.'_show'] = 0;

			if (isset($this->request->post[$field])) {
				$data[$field] = $this->request->post[$field];
			} elseif (!empty($customer_info)) {
				$data[$field] = $customer_info[$field];
			} else {
				$data[$field] = '';
			}

			if (isset($this->error[$field])) {
				$data['error_'.$field] = $this->error[$field];
			} else {
				$data['error_'.$field] = '';
			}
			
		}

		foreach($activeFields as $field){
			if($field['description']){
				$data['entry_'.$field['name']] = $field['description'];
			}
			$data['entry_'.$field['name'].'_required'] = $field['required'];
			$data['entry_'.$field['name'].'_show'] = $field['is_show'];
		}
		$data['entry_email_required'] = 1; // В регистрации всегда требовать email
		$data['entry_email_show'] = 1;


//lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$customer_id = $this->model_account_customer->addCustomer($this->request->post);
            ]]></search>
            <add position="before" offset="2"><![CDATA[
//lightshop start				
		$this->load->model('extension/module/lightshop');
		if(!isset($json['error'])){
			$json['error'] = array();
		}
		$json['error'] = $this->model_extension_module_lightshop->checkLCustomFields($json['error']);
		$ignoredFields = $this->model_extension_module_lightshop->getIgnoredFields($customer_group_id);
		if(isset($json['error'])){
			foreach($json['error'] as $key => $fieldsdata){
				if(in_array($key,$ignoredFields)  && $key != 'email' ){
					unset($json['error'][$key]);
				}
			}
			if(!count($json['error'])){
				unset($json['error']);
			}
		}
//lightshop end	
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			unset($this->session->data['shipping_method']);
            ]]></search>
            <add position="replace" offset="3"><![CDATA[
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/checkout/shipping_address.php">
        <operation>
            <search><![CDATA[
		$this->load->model('account/address');
            ]]></search>
            <add position="before"><![CDATA[
//lightshop start
		$data['button_back'] = $this->language->get('button_back');
		$data['entry_telephone'] = $this->language->get('entry_telephone');
		$data['entry_email'] = $this->language->get('entry_email');
		$data['checkout_st3_sa'] = $this->config->get('theme_lightshop_checkout_st3_sa');
		$data['entry_fax'] = $this->language->get('entry_fax');

		if (isset($this->request->post['customer_group_id'])) {
			$customer_group_id = $this->request->post['customer_group_id'];
		} elseif(isset($this->session->data['guest']['customer_group_id'])) {
			$customer_group_id  = $this->session->data['guest']['customer_group_id'];
		} else {
			$customer_group_id  = $this->config->get('config_customer_group_id');
		}
		
		$this->load->model('extension/module/lightshop');
		$activeFields = $this->model_extension_module_lightshop->getFields($customer_group_id,0);
		$allFields = $this->model_extension_module_lightshop->getAllFields();

		$data['allCustomFields'] = $allFields;
		foreach($allFields as $field){
			$data['entry_'.$field.'_required'] = 0;
			$data['entry_'.$field.'_show'] = 0;

			if (isset($this->request->post[$field])) {
				$data[$field] = $this->request->post[$field];
			} elseif (!empty($customer_info)) {
				$data[$field] = $customer_info[$field];
			} else {
				$data[$field] = '';
			}

			if (isset($this->error[$field])) {
				$data['error_'.$field] = $this->error[$field];
			} else {
				$data['error_'.$field] = '';
			}

		}

		foreach($activeFields as $field){
			if($field['description']){
				$data['entry_'.$field['name']] = $field['description'];
			}
			$data['entry_'.$field['name'].'_required'] = $field['required'];
			$data['entry_'.$field['name'].'_show'] = $field['is_show'];
		}
//lightshop end
            ]]></add>
        </operation>
        <operation>
            <search index="1"><![CDATA[
				$this->load->model('localisation/country');
            ]]></search>
            <add position="before"><![CDATA[
				if ((utf8_strlen(trim($this->request->post['telephone'])) < 2) || (utf8_strlen(trim($this->request->post['telephone'])) > 128)) {
					$json['error']['telephone'] = $this->language->get('error_telephone');
				}
            ]]></add>
        </operation>
        <operation>
            <search index="1"><![CDATA[
                        $json['error']['custom_field' . $custom_field['custom_field_id']] = sprintf($this->language->get('error_custom_field'), $custom_field['name']);
            ]]></search>
            <add position="after" offset="3"><![CDATA[
//lightshop start	
	if(isset($json['error'])){			
		$this->load->model('extension/module/lightshop');
		$json['error'] = $this->model_extension_module_lightshop->checkLCustomFields($json['error']);
		$ignoredFields = $this->model_extension_module_lightshop->getIgnoredFields($this->config->get('config_customer_group_id'));
		if(isset($json['error'])){
			foreach($json['error'] as $key => $fieldsdata){
				if(in_array($key,$ignoredFields)){
					unset($json['error'][$key]);
				}
			}
			if(!count($json['error'])){
				unset($json['error']);
			}
		}
	}
//lightshop end	
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
unset($this->session->data['shipping_method']);
            ]]></search>
            <add position="replace" offset="1"><![CDATA[
            ]]></add>
        </operation>		
    </file>
    <file path="catalog/controller/checkout/shipping_method.php">
        <operation>
            <search><![CDATA[
		$this->response->setOutput($this->load->view('checkout/shipping_method', $data));
            ]]></search>
            <add position="before"><![CDATA[
		// lightshop
		$this->load->language('extension/theme/lightshop');
		$data['button_back'] = $this->language->get('button_back');
		// lightshop end
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/checkout/success.php">
        <operation>
            <search><![CDATA[
		$this->load->language('checkout/success');
            ]]></search>
            <add position="after"><![CDATA[
		$data['order_id'] = 0;// lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$this->cart->clear();
            ]]></search>
            <add position="after"><![CDATA[
			$data['order_id'] = $this->session->data['order_id'];// lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			unset($this->session->data['totals']);
            ]]></search>
            <add position="after"><![CDATA[
			unset($this->session->data['lightshopsetid']);// lightshop
			unset($this->session->data['shippay_shipping_methods']);// lightshop
			unset($this->session->data['shippay_payment_methods']);// lightshop
			unset($this->session->data['shippay_payment_method']);// lightshop
			unset($this->session->data['shippay_shipping_method']);// lightshop
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/common/cart.php">
        <operation>
            <search><![CDATA[
$this->load->model('tool/image');
            ]]></search>
            <add position="before"><![CDATA[
// lightshop	

			if ($this->config->get($this->config->get('theme_lightshop_config_captcha_fo') . '_status')) {
				$this->request->get['route'] = '';
				$data['captcha_fo'] = $this->load->controller('extension/captcha/' . $this->config->get('theme_lightshop_config_captcha_fo'));
			} else {
				$data['captcha_fo'] = '';
			}
		$this->load->language('extension/theme/lightshop');	
		$data['text_items'] = $this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0);
		$data['button_fastorder_sendorder'] = $this->language->get('button_lighshop_sendorder');
		$data['text_lightshop_cart_title'] = $this->language->get('text_lightshop_cart_title');
		$data['text_lightshop_cart_quantity'] = $this->language->get('text_lightshop_cart_quantity');
		$data['text_lightshop_fast_order'] = $this->language->get('text_lightshop_fast_order');
		$data['text_lightshop_order'] = $this->language->get('text_lightshop_order');
		$data['text_lightshop_edit_cart'] = $this->language->get('text_lightshop_edit_cart');
			if ($this->config->get('theme_lightshop_buy_click_pdata')) {
				$this->load->language('extension/theme/lightshop');
				$this->load->model('catalog/information');

				$information_info = $this->model_catalog_information->getInformation($this->config->get('theme_lightshop_buy_click_pdata'));

				if ($information_info) {
					$data['text_lightshop_pdata'] = sprintf($this->language->get('text_lightshop_pdata'), $this->language->get('button_lighshop_sendorder'), $this->url->link('information/information/agree', 'information_id=' . $this->config->get('theme_lightshop_buy_click_pdata'), true), $information_info['title'], $information_info['title']);
				} else {
					$data['text_lightshop_pdata'] = '';
				}
			} else {
				$data['text_lightshop_pdata'] = '';
			}
			
		$data['buy_click'] = array();
		if($this->config->get('theme_lightshop_buy_click')){
			$data['buy_click'] = $this->config->get('theme_lightshop_buy_click');
				if ($this->customer->isLogged()) {
					$this->load->model('account/customer');
					$data['customer_info'] = $this->model_account_customer->getCustomer($this->customer->getId());
				}
		}
		$data['language_id'] = $this->config->get('config_language_id');
			$this->load->language('checkout/checkout');
			$data['entry_firstname'] = $this->language->get('entry_firstname');
			$data['entry_lastname'] = $this->language->get('entry_lastname');
			$data['entry_email'] = $this->language->get('entry_email');
			$data['entry_telephone'] = $this->language->get('entry_telephone');
			$data['entry_comment'] = $this->language->get('entry_comment');
// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
				$image = $this->model_tool_image->resize($product['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_cart_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_cart_height'));
            ]]></search>
            <add position="replace"><![CDATA[
				$image = $this->config->get('theme_lightshop_image_cart_resize') ? $this->model_tool_image->lightshop_resize($product['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_cart_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_cart_height')) : $this->model_tool_image->resize($product['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_cart_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_cart_height')); // lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
				$image = '';
            ]]></search>
            <add position="replace"><![CDATA[
				$image = $this->config->get('theme_lightshop_image_cart_resize') ? $this->model_tool_image->lightshop_resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_cart_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_cart_height')) : $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_cart_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_cart_height')); // lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
				'title' => $total['title'],
            ]]></search>
            <add position="after"><![CDATA[
				'code' => $total['code'], //lightshop	add this
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		return $this->load->view('common/cart', $data);
            ]]></search>
            <add position="replace"><![CDATA[
//lightshop	
			$data['buyclick_form'] = $this->load->view('product/buyclick_form', $data);	
			$data['text_custcart'] = $this->language->get('text_custcart');  	
			$data['text_lightshop_cart_quantity'] = $this->language->get('text_lightshop_cart_quantity');  	
			if(isset($this->request->get['custcart'])){
				$this->response->setOutput($this->load->view('common/custcart', $data));
			}else{
				return $this->load->view('common/cart', $data);
			}
//lightshop	
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/common/{column_left,column_right}.php">
        <operation>
            <search><![CDATA[
				$setting_info = $this->model_setting_module->getModule($part[1]);
            ]]></search>
            <add position="after"><![CDATA[
				$setting_info['layout'] = $module['position'];//lightshop
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/common/currency.php">
        <operation>
            <search><![CDATA[
			$this->response->redirect($this->request->post['redirect']);
            ]]></search>
            <add position="before"><![CDATA[
//lightshop start
			if(strpos($this->request->post['redirect'], 'min_price=')){
				$this->session->data['change_currency'] = 1;
			}
// lightshop end
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/common/footer.php">
        <operation>
            <search><![CDATA[
		$this->load->language('common/footer');
            ]]></search>
            <add position="after"><![CDATA[
		$this->load->model('setting/setting');
		$this->load->model('extension/module/lightshopnews');//!!!
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		$data['scripts'] = $this->document->getScripts('footer');
            ]]></search>
            <add position="after"><![CDATA[
		// lightshop
		$this->load->language('extension/theme/lightshop');
		$data['scripts'] = $this->document->getScripts();
		$data['js_codes'] = $this->document->getScripts('js_code'); 
		$data['styles'] = $this->document->getStyles();
		if ($this->request->server['HTTPS']) {
			$server = $this->config->get('config_ssl');
		} else {
			$server = $this->config->get('config_url');
		}

		$data['version'] = $this->config->get('theme_lightshop_version');

		$data['language_id'] = $this->config->get('config_language_id');	
		$data['top_links'] = array();
		if($this->config->get('theme_lightshoplinks_array')){
			$data['top_links'] = $this->config->get('theme_lightshoplinks_array');
			$data['top_links'] = $data['top_links'][$this->config->get('config_language_id')];
			foreach($data['top_links'] as $key => $link){ 
				if(strpos(current($link),':') !== false ){ continue;}
				$data['top_links'][$key][key($link)] = $this->url->link(current($link));	
			}
		}
		$this->load->model('extension/module/lightshop');
		$catLinks = $this->model_extension_module_lightshop->createCatLinks($this->config->get('config_language_id'));
		$data['top_links'] = array_merge ($data['top_links'],$catLinks);
					
		$data['footer_navs'] = array();
		$footer_navs = $this->config->get('theme_lightshop_footer_nav');
		if(isset($footer_navs)){
			foreach($footer_navs as $footer_nav){
				
				if(isset($footer_nav['type'][0]['links'])){
					foreach($footer_nav['type'][0]['links'] as $key => $link){
						if(strpos($link,':') !== false ){$footer_nav['type'][0]['links'][$key] = current($data['top_links'][$key]); continue;}
						$footer_nav['type'][0]['links'][$key] = $this->url->link($link);
					}					
				}
				if(isset($footer_nav['type'][1]['links']['html'])){
					if ($footer_nav['type'][1]['links']['html']) {
						$footer_nav['type'][1]['links']['html'] = html_entity_decode($footer_nav['type'][1]['links']['html']);
					}
				}

				$data['footer_navs'][$footer_nav['sort']] = $footer_nav;
			}
		}
		ksort($data['footer_navs']);

		//Социальные сети
		$data['social_navs'] = array();
		$social_links = $this->model_setting_setting->getSetting('theme_lightshopsoclinks');
		$data['social_links'] = $social_links['theme_lightshopsoclinks_array'];
		$data['social_navs'] = $this->config->get('theme_lightshop_social_nav');	
		
		$data['messenger_navs'] = array();
		$messenger_links = $this->model_setting_setting->getSetting('theme_lightshopmeslinks');
		$data['messenger_links'] = $messenger_links['theme_lightshopmeslinks_array'];
		$data['messenger_navs'] = $this->config->get('theme_lightshop_messenger_nav');		
		$data['messenger_status'] = $this->config->get('theme_lightshop_messenger_status');
		$data['messenger_pos'] = $this->config->get('theme_lightshop_messenger_pos');

		$data['text_newsletter'] = $this->language->get('text_newsletter');
		$data['text_footer_subscribe_email'] = $this->language->get('text_footer_subscribe_email');
		$data['text_header_callback'] = $this->language->get('text_header_callback');
		$data['text_social_navs'] = $this->language->get('text_social_navs');
		$data['callback_status'] = $this->config->get('theme_lightshop_callback_status');
		$data['soc_stat'] = $this->config->get('theme_lightshop_footer_soc_stat');
		$data['phone_1'] = html_entity_decode($this->config->get('theme_lightshop_phone_1' . $this->config->get('config_language_id')), ENT_QUOTES, 'UTF-8');
		$data['phone_2'] = html_entity_decode($this->config->get('theme_lightshop_phone_2' . $this->config->get('config_language_id')), ENT_QUOTES, 'UTF-8');		
		$data['theme_color'] = $this->config->get('theme_lightshop_color');
		$data['theme_fc_color'] = $this->config->get('theme_lightshop_color_2');
		$data['bootstrap'] = $this->config->get('theme_lightshop_bootstrap');
		$data['fontawesome'] = $this->config->get('theme_lightshop_fontawesome');
		$data['theme_color_1'] = $this->config->get('theme_lightshop_custom_color_1');
		$data['theme_color_2'] = $this->config->get('theme_lightshop_custom_color_2');
		list($r, $g, $b) = array_map('hexdec',str_split($this->config->get('theme_lightshop_custom_color_2'),2));
		$data['theme_color_3'] = $r . ', ' . $g . ', ' . $b . ', 0.3';
		$data['theme_fc_color_1'] = $this->config->get('theme_lightshop_custom_fc_color_1');
		$data['theme_fc_color_1_db'] = $this->getbrightness($this->config->get('theme_lightshop_custom_fc_color_1'));
		$data['theme_fc_color_2'] = $this->config->get('theme_lightshop_custom_fc_color_2');
		$data['theme_fc_color_2_db'] = $this->getbrightness($this->config->get('theme_lightshop_custom_fc_color_2'));
		$data['theme_fc_color_3'] = $this->config->get('theme_lightshop_custom_fc_color_3');
		$data['theme_fc_color_3_db'] = $this->getbrightness($this->config->get('theme_lightshop_custom_fc_color_3'));
		$data['theme_fc_color_4'] = $this->config->get('theme_lightshop_custom_fc_color_4');
		$data['theme_fc_color_4_db'] = $this->getbrightness($this->config->get('theme_lightshop_custom_fc_color_4'));
		$data['footer_type'] = $this->config->get('theme_lightshop_footer_type');
		$data['subscribe_status'] = $this->config->get('theme_lightshop_subscribe_status');
		$data['subscribe_title'] = $this->config->get('theme_lightshop_subscribe_title' . $this->config->get('config_language_id'));
		$data['subscribe_subtitle'] = $this->config->get('theme_lightshop_subscribe_subtitle' . $this->config->get('config_language_id'));
		$data['js_footorhead'] = $this->config->get('theme_lightshop_js_footorhead');
		$data['footer_copyright'] = html_entity_decode($this->config->get('theme_lightshop_footer_copyright' . $this->config->get('config_language_id')), ENT_QUOTES, 'UTF-8');
		$data['footer_text'] = html_entity_decode($this->config->get('theme_lightshop_footer_text' . $this->config->get('config_language_id')), ENT_QUOTES, 'UTF-8');
		$data['footer_t_logo'] = $this->config->get('theme_lightshop_footer_t_logo');
		$data['text_logo'] = html_entity_decode($this->config->get('theme_lightshop_footer_text_logo'), ENT_QUOTES, 'UTF-8');
		$data['scroll_to_top'] = $this->config->get('theme_lightshop_scrolltt_status');
		$data['scroll_to_top_pos'] = $this->config->get('theme_lightshop_scrolltt_pos');
		$data['text_lightshop_subscribe_btn'] = $this->language->get('text_lightshop_subscribe_btn');
		
			if ($this->config->get('theme_lightshop_subscribe_pdata')) {
				$this->load->model('catalog/information');

				$information_info = $this->model_catalog_information->getInformation($this->config->get('theme_lightshop_subscribe_pdata'));

				if ($information_info) {
					$data['text_lightshop_pdata'] = sprintf($this->language->get('text_lightshop_pdata'), $this->language->get('text_lightshop_subscribe_btn'), $this->url->link('information/information/agree', 'information_id=' . $this->config->get('theme_lightshop_subscribe_pdata'), true), $information_info['title'], $information_info['title']);
				} else {
					$data['text_lightshop_pdata'] = '';
				}
			} else {
				$data['text_lightshop_pdata'] = '';
			}
		
		if (is_file(DIR_IMAGE . $this->config->get('theme_lightshop_footer_logo'))) {
			$data['footer_logo'] = $server . 'image/' . $this->config->get('theme_lightshop_footer_logo');
		} else {
			$data['footer_logo'] = '';
		}
		$data['custom_css'] = $this->config->get('theme_lightshop_css');
		$data['custom_js'] = html_entity_decode($this->config->get('theme_lightshop_js'), ENT_QUOTES, 'UTF-8');
		$data['og_url'] = (isset($this->request->server['HTTPS']) ? HTTPS_SERVER : HTTP_SERVER) . substr($this->request->server['REQUEST_URI'], 1, (strlen($this->request->server['REQUEST_URI'])-1));
		$data['name'] = $this->config->get('config_name');
		$data['callback'] = $this->load->controller('extension/module/callback');

		$data['islogged'] = $this->customer->isLogged();
		$data['cookieagry'] = 0;
		if (isset($_COOKIE["cookieagry"])){
			$data['cookieagry'] = 1;
		}
		
		if ($this->config->get('theme_lightshop_cookies_pdata')) {
			$this->load->model('catalog/information');

			$information_cookies = $this->model_catalog_information->getInformation($this->config->get('theme_lightshop_cookies_pdata'));

			if ($information_cookies) {
				$data['text_lightshop_cookieagry_btn'] = sprintf($this->language->get('text_lightshop_cookieagry_btn'), html_entity_decode($information_cookies['description'], ENT_QUOTES, 'UTF-8'));
			} else {
				$data['text_lightshop_cookieagry_btn'] = '';
			}
		} else {
			$data['text_lightshop_cookieagry_btn'] = '';
		}
		$data['home'] = $this->url->link('common/home');
		// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		return $this->load->view('common/footer', $data);
            ]]></search>
            <add position="after" offset="1"><![CDATA[
	public function getbrightness($color) {
		$tone = false;
		list($r, $g, $b) = array_map('hexdec',str_split($color,2)); 
		$Y = (0.3*$r) + (0.59*$g) + (0.11*$b);
		if ($Y > 128) {
			$tone = true;
		}
		return $tone ;
	}
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/common/header.php">
        <operation>
            <search index="0"><![CDATA[
		$data['telephone'] = $this->config->get('config_telephone');
            ]]></search>
            <add position="after"><![CDATA[
		// lightshop
		$data['yandex_metrika_counter'] = false;
		if ($this->config->get('analytics_yandex_metrika_counter') && $this->config->get('analytics_yandex_metrika_status')) {
			$data['yandex_metrika_counter'] = $this->config->get('analytics_yandex_metrika_counter');
		}
		$this->load->language('extension/theme/lightshop');
		$data['text_manufacturers'] = $this->language->get('text_manufacturers');
		$data['text_loader'] = $this->language->get('text_loader');
		$data['text_ls_logged'] = sprintf($this->language->get('text_ls_logged'), $this->customer->getFirstName(), $this->customer->getLastName());
		$data['text_register_account'] = $this->language->get('text_register_account');
		$data['outdated_browser'] = $this->language->get('outdated_browser');
		$data['text_search'] = $this->language->get('text_search');
		$data['text_forgotten'] = $this->language->get('text_forgotten');
		$data['forgotten'] = $this->url->link('account/forgotten', '', true);
		$data['header_type'] = $this->config->get('theme_lightshop_header_type');
		$data['js_footorhead'] = $this->config->get('theme_lightshop_js_footorhead');
		$data['open_graph'] = $this->config->get('theme_lightshop_og');
		$data['preloader'] = $this->config->get('theme_lightshop_preloader');
		$data['google_site_verification'] = $this->config->get('theme_lightshop_google_site_verification');
		$data['yandex_verification'] = $this->config->get('theme_lightshop_yandex_verification');
		$data['phone_1'] = html_entity_decode($this->config->get('theme_lightshop_phone_1' . $this->config->get('config_language_id')), ENT_QUOTES, 'UTF-8');
		$data['phone_2'] = html_entity_decode($this->config->get('theme_lightshop_phone_2' . $this->config->get('config_language_id')), ENT_QUOTES, 'UTF-8');
		$data['phone_1_dig'] = preg_replace('/[^0-9]/', '', $data['phone_1']);
		$data['phone_2_dig'] = preg_replace('/[^0-9]/', '', $data['phone_2']);
		$data['theme_fc_color'] = $this->config->get('theme_lightshop_color_2');
		$data['bootstrap'] = $this->config->get('theme_lightshop_bootstrap');
		$data['custom_css'] = html_entity_decode($this->config->get('theme_lightshop_css'), ENT_QUOTES, 'UTF-8');
		$data['theme_color'] = $this->config->get('theme_lightshop_color');
		$data['fontawesome'] = $this->config->get('theme_lightshop_fontawesome');
		$data['theme_color_1'] = $this->config->get('theme_lightshop_custom_color_1');
		$data['theme_color_2'] = $this->config->get('theme_lightshop_custom_color_2');
		list($r, $g, $b) = array_map('hexdec',str_split($this->config->get('theme_lightshop_custom_color_2'),2));
		$data['theme_color_3'] = $r . ', ' . $g . ', ' . $b . ', 0.3';
		$data['theme_fc_color_1'] = $this->config->get('theme_lightshop_custom_fc_color_1');
		$data['theme_fc_color_1_db'] = $this->getbrightness($this->config->get('theme_lightshop_custom_fc_color_1'));
		$data['theme_fc_color_2'] = $this->config->get('theme_lightshop_custom_fc_color_2');
		$data['theme_fc_color_2_db'] = $this->getbrightness($this->config->get('theme_lightshop_custom_fc_color_2'));
		$data['theme_fc_color_3'] = $this->config->get('theme_lightshop_custom_fc_color_3');
		$data['theme_fc_color_3_db'] = $this->getbrightness($this->config->get('theme_lightshop_custom_fc_color_3'));
		$data['theme_fc_color_4'] = $this->config->get('theme_lightshop_custom_fc_color_4');
		$data['theme_fc_color_4_db'] = $this->getbrightness($this->config->get('theme_lightshop_custom_fc_color_4'));
		$data['custom_js'] = html_entity_decode($this->config->get('theme_lightshop_js'), ENT_QUOTES, 'UTF-8');
		$data['cart_call'] = $this->config->get('theme_lightshop_cart_call');
		$data['fixed_header'] = $this->config->get('theme_lightshop_fixed_header');
		$data['type3_logo'] = $this->config->get('theme_lightshop_header_type3_logo');
		$data['type3_menu'] = $this->config->get('theme_lightshop_header_type3_menu');
		$data['container_width'] = $this->config->get('theme_lightshop_container_width');
		$data['header_text_logo'] = html_entity_decode($this->config->get('theme_lightshop_header_text_logo'), ENT_QUOTES, 'UTF-8');
		$data['text_items'] = $this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0);
		$data['text_islogged'] = sprintf($this->language->get('text_islogged'), $this->url->link('account/login', '', true), $this->url->link('account/register', '', true), $this->url->link('account/wishlist'));
		$data['text_empty_wish'] = $this->language->get('text_empty_wish');
		$data['text_lightshop_wish_head'] = $this->language->get('text_lightshop_wish_head');
		$data['text_lightshop_comp_head'] = $this->language->get('text_lightshop_comp_head');
		$data['text_empty_compare'] = $this->language->get('text_empty_compare');
		$data['text_compare_href'] = sprintf($this->language->get('text_compare_href'), $this->url->link('product/compare'));
		$data['text_wish_href'] = sprintf($this->language->get('text_wish_href'), $this->url->link('account/wishlist'));
		$data['text_lightshop_show_all'] = $this->language->get('text_lightshop_show_all');
		$data['text_header_category'] = $this->language->get('text_header_category');
		$data['text_show_more'] = $this->language->get('text_show_more');
		$data['text_account_title'] = $this->language->get('text_account_title');
		$data['text_account_login'] = $this->language->get('text_account_login');
		$data['text_account_register'] = $this->language->get('text_account_register');
		$data['text_account_check'] = $this->language->get('text_account_check');
		$data['text_account_submit'] = $this->language->get('text_account_submit');
		$data['text_account_password'] = $this->language->get('text_account_password');
		$data['text_header_callback'] = $this->language->get('text_header_callback');
		$data['address'] = nl2br($this->config->get('config_address'));
		$data['version'] = $this->config->get('theme_lightshop_version');
		$data['language_id'] = $this->config->get('config_language_id');

		$data['top_links'] = array();
		if($this->config->get('theme_lightshoplinks_array')){
			$data['top_links'] = $this->config->get('theme_lightshoplinks_array');
			$data['top_links'] = $data['top_links'][$this->config->get('config_language_id')];
		}
		
		$this->load->model('extension/module/lightshop');
		$catLinks = $this->model_extension_module_lightshop->createCatLinks($this->config->get('config_language_id'));
		$data['top_links'] = array_merge ($data['top_links'],$catLinks);

		foreach($data['top_links'] as $key => $link){
			if(strpos(current($link),':') !== false ){ continue;}
			$data['top_links'][$key][key($link)] = $this->url->link(current($link));	
		}	

		$data['header_navs'] = array();
		$header_navs = $this->config->get('theme_lightshop_header_nav');

			if($header_navs){
				foreach($header_navs as $header_nav){
					
				if (isset($header_nav['type'][0])) {					
						if(isset($header_nav['type'][0]['links'])){ 
							foreach($header_nav['type'][0]['links'] as $key => $link){ 
								if(strpos($link,':') !== false ){ continue;}
								$header_nav['type'][0]['links'][$key] = $this->url->link($link);
							}					
					}else{
						$header_nav['type'][0]['links'] = array(); 
					}
				}
					if(isset($header_nav['type'][1]['links'])){ 
						foreach($header_nav['type'][1]['links'] as $key => $link){ 
							if(strpos($link,':') !== false ){ $header_nav['type'][1]['links'][$key] = current($data['top_links'][$key]); continue;}
							$header_nav['type'][1]['links'][$key] = $this->url->link($link); 
//							$header_nav['type'][1]['links'][$key] = current($data['top_links'][$key]); 
						}					
					}
					$data['header_navs'][$header_nav['sort']] = $header_nav;
				}				
			}

		ksort($data['header_navs']);

		//Основное меню
		$data['main_navs'] = array();
		$main_navs = $this->config->get('theme_lightshop_main_nav');

		require_once(DIR_APPLICATION . 'controller/extension/module/lightshop/header_add.php');

		//ПРАВЫЙ ЭЛЕМЕНТ ПОДМЕНЮ КАТЕГОРИИ
		$this->load->model('catalog/product');
		$this->load->model('catalog/manufacturer');
		$this->load->model('tool/image');		
		$data['main_recs'] = array();
		$data['main_prods'] = array();
		$data['main_manf'] = array();
		$main_recs = $this->config->get('theme_lightshop_main_rec');

			if(isset($main_recs)){
				foreach($main_recs as $main_rec){
					$data['main_recs'][$main_rec['category_id']] = $main_rec;		
					if(isset($main_rec['type'][0]) && (!$main_rec['settype'] || $main_rec['settype'] == 2) ){
					  if(isset($main_rec['type'][0]['links'])){
						foreach($main_rec['type'][0]['links'] as $prodId => $product){
							$product_info = $this->model_catalog_product->getProduct($prodId);
							if ($product_info['image']) { 
								$thumb = $this->config->get('theme_lightshop_image_main_rec_resize') ? $this->model_tool_image->lightshop_resize($product_info['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_main_rec_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_main_rec_height')) : $this->model_tool_image->resize($product_info['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_main_rec_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_main_rec_height')); 
							} else {
								$thumb = '';
							}
							if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
								$price = $this->currency->format($this->tax->calculate($product_info['price'], $product_info['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
							} else {
								$price = false;
							}
							if ((float)$product_info['special']) {
								$special = $this->currency->format($this->tax->calculate($product_info['special'], $product_info['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
							} else {
								$special = false;
							}
							$data['main_prods'][$main_rec['category_id']][] = array(
														'thumb'       => $thumb,
														'name'        => $product_info['name'],	
														'price'       => $price,
														'special'     => $special,
														'href'        => $this->url->link('product/product', 'product_id=' . $product_info['product_id'])							
							);
						}
					  }
					  if(isset($main_rec['type'][0]['manf'])){
						foreach($main_rec['type'][0]['manf'] as $manfId => $product){
							$manufacturer_info = $this->model_catalog_manufacturer->getManufacturer($manfId);

							$data['main_manf'][$main_rec['category_id']][] = array(
														'name'        => $manufacturer_info['name'],
														'href'        => $this->url->link('product/manufacturer/info', 'manufacturer_id=' . $manufacturer_info['manufacturer_id'])							
							);
						}					  	
					  }

					}else{
						$data['main_html'][$main_rec['category_id']] = html_entity_decode($main_rec['type'][1]['html'], ENT_QUOTES, 'UTF-8');
					}
				}				
			}
		$data['manufacturerlinks'] = $this->url->link('product/manufacturer');

		$this->load->language('product/compare');
		$data['productscomp'] = $this->getCompareData();
		$data['countcomp'] = count($data['productscomp']);
		$data['islogged'] = false;
		$data['productswish'] = array();		
		if ($this->customer->isLogged() || $this->config->get('theme_lightshop_wishlist')) {
			$data['islogged'] = true;
		}
		$data['productswish'] = $this->getWishData(); 
		$data['count'] = count($data['productswish']);
		$data['counTotall'] =$data['countcomp']+$data['count']; 

		if (is_file(DIR_IMAGE . $this->config->get('theme_lightshop_header_logo'))) {
			$data['header_logo'] = $server . 'image/' . $this->config->get('theme_lightshop_header_logo');
		} else {
			$data['header_logo'] = '';
		}
		if (is_file(DIR_IMAGE . $this->config->get('theme_lightshop_fav_16'))) {
			$data['fav_16'] = $server . 'image/' . $this->config->get('theme_lightshop_fav_16');
		} else {
			$data['fav_16'] = '';
		}
		if (is_file(DIR_IMAGE . $this->config->get('theme_lightshop_fav_32'))) {
			$data['fav_32'] = $server . 'image/' . $this->config->get('theme_lightshop_fav_32');
		} else {
			$data['fav_32'] = '';
		}
		if (is_file(DIR_IMAGE . $this->config->get('theme_lightshop_fav_180'))) {
			$data['fav_180'] = $server . 'image/' . $this->config->get('theme_lightshop_fav_180');
		} else {
			$data['fav_180'] = '';
		}
		$data['callback_status'] = $this->config->get('theme_lightshop_callback_status');
		$data['schema'] = $this->config->get('theme_lightshop_schema');
		
		$data['max_subcat'] = $this->config->get('theme_lightshop_max_subcat');

		// Menu
		$this->load->model('catalog/category');

		$this->load->model('catalog/product');

		$data['topcat'] = array();

		$data['categories'] = array();

//		$data['categories'] = $this->cache->get('category.categoriesdata.' . (int)$this->config->get('config_language_id') . '.' . (int)$this->config->get('config_store_id') . '.0');
		$data['topcat'] = $this->cache->get('category.categoriestopcat.' . (int)$this->config->get('config_language_id') . '.' . (int)$this->config->get('config_store_id') . '.0');
//		$data['categories'] = array();
	if (!$data['categories']) {
		$categoriesLs = array();
		$categories = $this->model_catalog_category->getCategories(0);
			
	

		foreach ($categories as $category) {
			if ($category['top']) {
				// Level 2
				$children_data = array();

				$children = $this->model_catalog_category->getCategories($category['category_id']);
				$L3_chid = false;// <--lightshop add this
				foreach ($children as $child) {					
					$children2_data = array();
					$children2 = $this->model_catalog_category->getCategories($child['category_id']);
					foreach ($children2 as $child2) {					
						
						$filter_data = array(
							'filter_category_id'  => $child2['category_id'],
							'filter_sub_category' => true
						);
						// Level 3
						$children2_data[$child2['category_id']] = array(
							'name'  => $child2['name'] . ($this->config->get('config_product_count') ? ' (' . $this->model_catalog_product->getTotalProducts($filter_data) . ')' : ''),
							'href'  => $this->url->link('product/category', 'path=' . $category['category_id'] . '_' . $child['category_id'] . '_' . $child2['category_id'])
						);
						$categoriesLs[$child2['category_id']] = $children2_data[$child2['category_id']];
						$categoriesLs[$child2['category_id']]['childrencount'] = 0;
						$categoriesLs[$child['category_id']]['have_L3'] = false;
					}					
									
					$filter_data = array(
						'filter_category_id'  => $child['category_id'],
						'filter_sub_category' => true
					);
					// Level 2
					if($children2_data){$L3_chid = true;}// <--lightshop add this
					
					$children_data[$child['category_id']] = array(// <--lightshop change this
						'name'  => $child['name'] . ($this->config->get('config_product_count') ? ' (' . $this->model_catalog_product->getTotalProducts($filter_data) . ')' : ''),
						'href'  => $this->url->link('product/category', 'path=' . $category['category_id'] . '_' . $child['category_id']),
						'children' => $children2_data // <--lightshop add this
					);

					$categoriesLs[$child['category_id']] = $children_data[$child['category_id']];
					$categoriesLs[$child['category_id']]['childrencount'] = count($children2_data);
					$categoriesLs[$child['category_id']]['have_L3'] = false;					
				}

				// Level 1
				$data['categories'][$category['category_id']] = array(// <--lightshop change this
					'name'     => $category['name'],
					'column'     => $category['column'],
					'children' => $children_data,
					'have_L3' => $L3_chid,// <--lightshop add this
					'column'   => $category['column'] ? $category['column'] : 1,
					'href'     => $this->url->link('product/category', 'path=' . $category['category_id'])
				);
				$tid = 'c'.$category['category_id'];
				$data['topcat'][$tid] = $this->url->link('product/category', 'path=' . $category['category_id']);// <--lightshop change this
				$categoriesLs[$category['category_id']] = $data['categories'][$category['category_id']];
				$categoriesLs[$category['category_id']]['childrencount'] = count($children_data);
			}
		}

		$data['categories']['categoriesls'] = $categoriesLs;

	$this->cache->set('category.categoriesdata.' . (int)$this->config->get('config_language_id') . '.' . (int)$this->config->get('config_store_id') . '.0', $data['categories']);
	$this->cache->set('category.categoriestopcat.' . (int)$this->config->get('config_language_id') . '.' . (int)$this->config->get('config_store_id') . '.0', $data['topcat']);
    }
    $data['wish_head'] = $this->load->view('account/wish_head', $data);
    $data['compare_head'] = $this->load->view('product/compare_head', $data);		
//lightshop end	
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
		$data['cart'] = $this->load->controller('common/cart');	
            ]]></search>
            <add position="after" offset="1"><![CDATA[
// lightshop
		$data['callback'] = $this->load->controller('extension/module/callback');		
		if (isset($this->request->get['mobiheader'])){
			$this->response->setOutput($this->load->view('common/mobiheader', $data));			
		}else{
			return $this->load->view('common/header'.$data['header_type'], $data);
		}
// lightshop end	
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
			return $this->load->view('common/header'.$data['header_type'], $data);
            ]]></search>
            <add position="after" offset="6"><![CDATA[
// lightshop
	public function getCompareData() {
		$this->load->language('product/compare');
		$this->load->model('tool/image');
		$this->load->language('common/header');
		$this->load->language('extension/theme/lightshop');
		$json = array();

		

		if (!isset($this->session->data['compare'])) {
			$this->session->data['compare'] = array();
		}

		$this->load->model('catalog/product');

		$data = array();

		foreach ($this->session->data['compare'] as $key => $product_id) {
			$product_info = $this->model_catalog_product->getProduct($product_id);

			if ($product_info) {
				if ($product_info['image']) {
					$image = $this->config->get('theme_lightshop_image_compare_resize') ? $this->model_tool_image->lightshop_resize($product_info['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_compare_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_compare_height')) : $this->model_tool_image->resize($product_info['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_compare_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_compare_height')); // lightshop
				} else {
					$image = false;
				}

				$data[$product_id] = array(
					'product_id'   => $product_info['product_id'],
					'name'         => $product_info['name'],
					'thumb'        => $image,
					'href'         => $this->url->link('product/product', 'product_id=' . $product_id)
				);
			}
		}
		return $data;
	}
	
	public function getWishData() {
		$data = array();

		$this->load->language('account/wishlist');

		$this->load->model('account/wishlist');

		$this->load->model('catalog/product');

		$this->load->model('tool/image');
		$this->load->language('extension/theme/lightshop');

		$results = $this->model_account_wishlist->getWishlistLb();

		foreach ($results as $result) {
			$product_info = $this->model_catalog_product->getProduct($result['product_id']);

			if ($product_info) {

				// lightshop
				if ($this->config->get('theme_lightshop_image_wishlist_resize')) {
					if ($product_info['image']) {
						$image = $this->model_tool_image->lightshop_resize($product_info['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_height'));
					} else {
						$image = $this->model_tool_image->lightshop_resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_height'));
					}
					} else {
					if ($product_info['image']) {
						$image = $this->model_tool_image->resize($product_info['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_height'));
					} else {
						$image = $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_wishlist_height'));
					}
				}
				

				if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
					$price = $this->currency->format($this->tax->calculate($product_info['price'], $product_info['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$price = false;
				}

				if ((float)$product_info['special']) {
					$special = $this->currency->format($this->tax->calculate($product_info['special'], $product_info['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$special = false;
				}

				$data[$product_info['product_id']] = array(
					'product_id' => $product_info['product_id'],
					'thumb'      => $image,
					'name'       => $product_info['name'],
					'href'       => $this->url->link('product/product', 'product_id=' . $product_info['product_id'])
				);
			} 
		}
		return $data;
	}
	public function getwish() {
		$this->load->language('extension/theme/lightshop');
		$data['text_islogged'] = sprintf($this->language->get('text_islogged'), $this->url->link('account/login', '', true), $this->url->link('account/register', '', true), $this->url->link('account/wishlist'));
		$data['text_empty_wish'] = $this->language->get('text_empty_wish');
		$data['text_empty_compare'] = $this->language->get('text_empty_compare');
		$data['text_lightshop_wish_head'] = $this->language->get('text_lightshop_wish_head');
		$data['text_compare_href'] = sprintf($this->language->get('text_compare_href'), $this->url->link('product/compare'));
		$data['text_wish_href'] = sprintf($this->language->get('text_wish_href'), $this->url->link('account/wishlist'));
		$data['islogged'] = false;
		$data['productswish'] = array();
		
		if ($this->customer->isLogged() || $this->config->get('theme_lightshop_wishlist')) {
			$data['islogged'] = true;
		}

		$data['productswish'] = $this->getWishData();
		$data['count'] = count($data['productswish']);
		$this->response->setOutput($this->load->view('account/wish_head', $data));
	}
	
	public function getcompare() {
		$this->load->language('extension/theme/lightshop');
		$data['text_islogged'] = sprintf($this->language->get('text_islogged'), $this->url->link('account/login', '', true), $this->url->link('account/register', '', true), $this->url->link('account/wishlist'));
		$data['text_empty_wish'] = $this->language->get('text_empty_wish');
		$data['text_empty_compare'] = $this->language->get('text_empty_compare');
		$data['text_lightshop_comp_head'] = $this->language->get('text_lightshop_comp_head');
		$data['text_compare_href'] = sprintf($this->language->get('text_compare_href'), $this->url->link('product/compare'));
		$data['text_wish_href'] = sprintf($this->language->get('text_wish_href'), $this->url->link('account/wishlist'));
		$data['productscomp'] = $this->getCompareData();
		$data['countcomp'] = count($data['productscomp']);
		$this->response->setOutput($this->load->view('product/compare_head', $data));
	}
	
	public function getwishcompare() {
		$json = array();
		$productscomp = $this->getCompareData();
		$countcomp = count($productscomp);

		$productswish = $this->getWishData(); 
		$count = count($productswish);
		$json['counTotall'] = $countcomp+$count;
		$this->response->setOutput(json_encode($json)); 
	}
	
	public function getbrightness($color) {
		$tone = false;
		list($r, $g, $b) = array_map('hexdec',str_split($color,2)); 
		$Y = (0.3*$r) + (0.59*$g) + (0.11*$b);
		if ($Y > 128) {
			$tone = true;
		}
		return $tone ;
	}

// lightshop end
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/error/not_found.php">
        <operation>
            <search><![CDATA[
		$this->response->setOutput($this->load->view('error/not_found', $data));
            ]]></search>
            <add position="replace"><![CDATA[
// lightshop
		$this->load->language('extension/theme/lightshop');
		if (is_file(DIR_IMAGE . $this->config->get('theme_lightshop_logo_404'))) {
			$data['logo_404'] = HTTP_SERVER . 'image/' . $this->config->get('theme_lightshop_logo_404');
		} else {
			$data['logo_404'] = '';
		}
		$data['text_404'] = sprintf($this->language->get('text_404'), $this->url->link('information/contact', '', true), $this->url->link('product/search', '', true), $this->url->link('common/home', '', true));
		$this->response->setOutput($this->load->view('error/404', $data));
// lightshop end														
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/extension/captcha/{google,basic}.php">
        <operation>
            <search><![CDATA[
$data['route'] = $this->request->get['route']; 
            ]]></search>
            <add position="replace"><![CDATA[
//lightshop
		$data['route'] = '';
		if (isset($this->request->get['route'])) {
			$data['route'] = $this->request->get['route'];
		}
//lightshop
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/extension/feed/google_sitemap.php">
        <operation>
            <search><![CDATA[
			$output .= '</urlset>';
            ]]></search>
            <add position="before"><![CDATA[
// lightshop
			$this->load->model('extension/module/lightshopnews');
			if($this->model_extension_module_lightshopnews->isModuleSet()){
					$filter_data = array(
						'start'              => 0,
						'limit'              => 100000
					);

				foreach ($this->model_extension_module_lightshopnews->getNewss($filter_data) as $result) {
					$output .= '<url>';
					$output .= '<loc>' . $this->url->link('extension/module/lightshop_news/getnews', 'news_id=' . $result['news_id']) . '</loc>';
					$output .= '<changefreq>weekly</changefreq>';
					$output .= '<priority>0.5</priority>';
					$output .= '</url>';
				}
			}

		$this->load->model('extension/module/lightshopblog');
		$this->load->model('extension/module/lightshopcatblog');
			if($this->model_extension_module_lightshopcatblog->isModuleSet()){
					$filter_data = array(
						'start'              => 0,
						'limit'              => 100000
					);

				foreach ($this->model_extension_module_lightshopblog->getBlogs($filter_data) as $result) {
					$output .= '<url>';
					$output .= '<loc>' . $this->url->link('extension/module/lightshop_blog/getblog', 'blog_id=' . $result['blog_id']) . '</loc>';
					$output .= '<changefreq>weekly</changefreq>';
					$output .= '<priority>0.5</priority>';
					$output .= '</url>';
				}
			}
			
			$output .= $this->getCategoriesLb(0);
// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		return $output;
            ]]></search>
            <add position="after"  offset="1"><![CDATA[
// lightshop
	protected function getCategoriesLb($parent_id, $current_path = '') {
		$output = '';

		$results = $this->model_extension_module_lightshopcatblog->getBlogCategories($parent_id);

		foreach ($results as $result) {
			if (!$current_path) {
				$new_path = $result['category_id'];
			} else {
				$new_path = $current_path . '_' . $result['category_id'];
			}

			$output .= '<url>';
			$output .= '<loc>' . $this->url->link('extension/module/lightshopcat_blog/getcat', 'lbpath=' . $new_path) . '</loc>';
			$output .= '<changefreq>weekly</changefreq>';
			$output .= '<priority>0.7</priority>';
			$output .= '</url>';
			
					$filter_data = array(
						'filter_category_id' => $result['category_id'],
						'start'              => 0,
						'limit'              => 100000
					);
			$blogs = $this->model_extension_module_lightshopblog->getBlogs($filter_data);

			foreach ($blogs as $blog) {
				$output .= '<url>';
				$output .= '<loc>' . $this->url->link('extension/module/lightshop_blog/getblog', 'blog_id=' . $blog['blog_id']) . '</loc>';
				$output .= '<changefreq>weekly</changefreq>';
				$output .= '<priority>1.0</priority>';
				$output .= '</url>';
			}

			$output .= $this->getCategoriesLb($result['category_id'], $new_path);
		}

		return $output;
	}
// lightshop end
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/extension/module/account.php">
        <operation>
            <search><![CDATA[
		$data['logged'] = $this->customer->isLogged();
            ]]></search>
            <add position="before"><![CDATA[
// lightshop
		$this->load->language('extension/theme/lightshop');
		$data['text_lightshop_menu'] = $this->language->get('text_lightshop_menu');
// lightshop end
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/extension/module/affiliate.php">
        <operation>
            <search><![CDATA[
		$data['logged'] = $this->affiliate->isLogged();
            ]]></search>
            <add position="before"><![CDATA[
// lightshop
		$this->load->language('extension/theme/lightshop');
		$data['text_lightshop_menu'] = $this->language->get('text_lightshop_menu');
// lightshop end
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/extension/module/filter.php">
        <operation>
            <search><![CDATA[
$this->load->model('catalog/category');
            ]]></search>
            <add position="after"><![CDATA[
		$this->load->model('extension/module/lightshop');	// lightshop			
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
$this->load->language('extension/module/filter');
            ]]></search>
            <add position="after"><![CDATA[
// lightshop
			$this->load->language('extension/theme/lightshop');
			$data['text_lightshop_filter'] = $this->language->get('text_lightshop_filter');
			$data['text_lightshop_from'] = $this->language->get('text_lightshop_from');
			$data['text_lightshop_to'] = $this->language->get('text_lightshop_to');
			$data['text_lightshop_show'] = $this->language->get('text_lightshop_show');
			$data['text_lightshop_reset'] = $this->language->get('text_lightshop_reset');
			$data['text_lightshop_filter_price'] = $this->language->get('text_lightshop_filter_price');
			$dataFilter['category_id'] = $category_id;
			$data['priceLimits'] = $this->model_extension_module_lightshop->getPriceLimits($dataFilter);

			if (isset($this->request->get['min_price'])) {
				$data['min_price'] = (int)$this->request->get['min_price'];
			}else{
				$data['min_price'] = (int)$data['priceLimits']['min_price'];
			}

			if (isset($this->request->get['max_price'])) {
				$data['max_price'] = round($this->request->get['max_price'],2);
			}else{
				$data['max_price'] = round($data['priceLimits']['max_price'],2); 
			}

			$data['min_price_format'] = $this->currency->format($data['min_price'], $this->session->data['currency'],1);
			$data['max_price_format'] = $this->currency->format($data['max_price'], $this->session->data['currency'],1);
			$data['category_id'] = $category_id;
// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
						$childen_data[] = array(
            ]]></search>
            <add position="before"><![CDATA[
						// lightshop
						$isactive = true;
						$count = '';

						$count = $this->model_catalog_product->getTotalProducts($filter_data);
						if (!$count) {
							$isactive = false;
						}
						// lightshop end			
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
							'name'      => $filter['name'] . ($this->config->get('config_product_count') ? ' (' . $this->model_catalog_product->getTotalProducts($filter_data) . ')' : '')
            ]]></search>
            <add position="replace"><![CDATA[
							'name'      => $filter['name'] . ($this->config->get('config_product_count') ? ' (' . $count . ')' : ''), // lightshop
							'isactive'	=> $isactive // lightshop		
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/extension/module/information.php">
        <operation>
            <search><![CDATA[
		$data['informations'] = array();
            ]]></search>
            <add position="after"><![CDATA[
// lightshop
		$this->load->language('extension/theme/lightshop');
		$data['text_lightshop_information'] = $this->language->get('text_lightshop_information');
// lightshop end	
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/extension/module/{latest,bestseller,special}.php">
        <operation>
            <search><![CDATA[
		if ($results) {
            ]]></search>
            <add position="before" offset="2"><![CDATA[
		// lightshop
		$this->load->language('extension/theme/lightshop');
		$data['lazyload'] = $this->config->get('theme_lightshop_lazyload');
		// labels
			$this->load->model('extension/module/lightshop');
			$labelsInfo = array();
			if($this->config->get('theme_lightshop_label')){
				$labelsInfo = $this->config->get('theme_lightshop_label');
			}
			$data['language_id'] = $this->config->get('config_language_id');
			$newest = array();
			$sales = false;
			if(isset($labelsInfo['new']['period']) && $labelsInfo['new']['status']){
				$newest = $this->model_catalog_product->getNewestProducts($labelsInfo['new']['period']);			
			}
			if(isset($labelsInfo['sale']['status']) && $labelsInfo['sale']['status']){
				$sales = true;				
			}	
			$data['labelsinfo'] = $labelsInfo;		
		    if (isset($labelsInfo['hit']) && $labelsInfo['hit']['status']) {
		       $hits = $this->model_extension_module_lightshop->getHitProducts($labelsInfo['hit']['period'],$labelsInfo['hit']['qty']);
		    }			
		// labels	
		// lightshop end					
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
					$data['products'][] = array(
            ]]></search>
            <add position="before"><![CDATA[
					// lightshop
					if (in_array($result['product_id'], $newest)) {
						$isNewest = true;
					} else {
						$isNewest = false;
					}
					
					$discount = '';	
					if($sales && $special){
						if($labelsInfo['sale']['extra'] == 1){
							$discount = round((($result['price'] - $result['special'])/$result['price'])*100);
							$discount = $discount. ' %';
						}
						if($labelsInfo['sale']['extra'] == 2){
							$discount = $this->currency->format($this->tax->calculate(($result['price'] - $result['special']), $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
						}					
					}			
					$catch = false;
					$nocatch = false;
					if (isset($labelsInfo['catch']) && $labelsInfo['catch']['status'] && $result['quantity'] <= $labelsInfo['catch']['qty']) {
						if($result['quantity'] > 0){
							$catch = $labelsInfo['catch']['name'][$this->config->get('config_language_id')];
						}else{
							$catch = $labelsInfo['catch']['name1'][$this->config->get('config_language_id')];
							$nocatch = true;
						}
					}

					$popular = false;
					if (isset($labelsInfo['popular']) && $labelsInfo['popular']['status'] && $result['viewed'] >= $labelsInfo['popular']['views']) {
						$popular = $labelsInfo['popular']['name'][$this->config->get('config_language_id')];
					}

					$hit = false;
					if (isset($labelsInfo['hit']) && $labelsInfo['hit']['status']) {
						if (isset($hits[$result['product_id']])) {
							$hit = $labelsInfo['hit']['name'][$this->config->get('config_language_id')];
						}
					}						
					
					// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
						'special'     => $special,
            ]]></search>
            <add position="before"><![CDATA[
						'isnewest'       => $isNewest,// lightshop
						'sales'       => $sales,// lightshop
						'discount'       => $discount,// lightshop
						'popular'	  => $popular,// lightshop
						'hit'	 	  => $hit,// lightshop
						'catch'       => $catch,// lightshop
						'nocatch'       => $nocatch,// lightshop
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/extension/module/bestseller.php">
        <operation>
            <search><![CDATA[
			return $this->load->view('extension/module/bestseller', $data);
            ]]></search>
            <add position="replace"><![CDATA[
					// lightshop
			if(isset($setting['layout']) && strpos($setting['layout'],'column_') !== false){
				return $this->load->view('extension/module/bestseller_column', $data);
			}else{
				return $this->load->view('extension/module/bestseller', $data);
			}
					// lightshop end

            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/extension/module/special.php">
        <operation>
            <search><![CDATA[
			return $this->load->view('extension/module/special', $data);
            ]]></search>
            <add position="replace"><![CDATA[
					// lightshop
			if(isset($setting['layout']) && strpos($setting['layout'],'column_') !== false){
				return $this->load->view('extension/module/special_column', $data);
			}else{
				return $this->load->view('extension/module/special', $data);
			}
					// lightshop end

            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/extension/module/latest.php">
        <operation>
            <search><![CDATA[
			return $this->load->view('extension/module/latest', $data);
            ]]></search>
            <add position="replace"><![CDATA[
					// lightshop
			if(isset($setting['layout']) && strpos($setting['layout'],'column_') !== false){
				return $this->load->view('extension/module/latest_column', $data);
			}else{
				return $this->load->view('extension/module/latest', $data);
			}
					// lightshop end

            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/extension/module/featured.php">
        <operation>
            <search><![CDATA[
		if (!empty($setting['product'])) {
            ]]></search>
            <add position="before"><![CDATA[
		// lightshop
		$this->load->language('extension/theme/lightshop');
		$data['lazyload'] = $this->config->get('theme_lightshop_lazyload');
		// labels
			$this->load->model('extension/module/lightshop');
			$labelsInfo = array();
			if($this->config->get('theme_lightshop_label')){
				$labelsInfo = $this->config->get('theme_lightshop_label');
			}
			$data['language_id'] = $this->config->get('config_language_id');
			$newest = array();
			$sales = false;
			if(isset($labelsInfo['new']['period']) && $labelsInfo['new']['status']){
				$newest = $this->model_catalog_product->getNewestProducts($labelsInfo['new']['period']);			
			}
			if(isset($labelsInfo['sale']['status']) && $labelsInfo['sale']['status']){
				$sales = true;				
			}	
			$data['labelsinfo'] = $labelsInfo;		
		      if (isset($labelsInfo['hit']) && $labelsInfo['hit']['status']) {
		        $hits = $this->model_extension_module_lightshop->getHitProducts($labelsInfo['hit']['period'],$labelsInfo['hit']['qty']);
		      }	
		// labels	
		// lightshop end				
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
					$data['products'][] = array(
            ]]></search>
            <add position="before"><![CDATA[
					// lightshop
					if (in_array($product_info['product_id'], $newest)) {
						$isNewest = true;
					} else {
						$isNewest = false;
					}
			        $catch = false;
			        $nocatch = false;
			        if (isset($labelsInfo['catch']) && $labelsInfo['catch']['status'] && $product_info['quantity'] <= $labelsInfo['catch']['qty']) {
			          if($product_info['quantity'] > 0){
			            $catch = $labelsInfo['catch']['name'][$this->config->get('config_language_id')];
			          }else{
			            $catch = $labelsInfo['catch']['name1'][$this->config->get('config_language_id')];
			            $nocatch = true;
			          }
			        }

			        $popular = false;
			        if (isset($labelsInfo['popular']) && $labelsInfo['popular']['status'] && $product_info['viewed'] >= $labelsInfo['popular']['views']) {
			          $popular = $labelsInfo['popular']['name'][$this->config->get('config_language_id')];
			        }

			        $hit = false;
			        if (isset($labelsInfo['hit']) && $labelsInfo['hit']['status']) {
			          if (isset($hits[$product_info['product_id']])) {
			            $hit = $labelsInfo['hit']['name'][$this->config->get('config_language_id')];
			          }
			        }

					$discount = '';	
					if($sales && $special){
						if($labelsInfo['sale']['extra'] == 1){
							$discount = round((($product_info['price'] - $product_info['special'])/$product_info['price'])*100);
							$discount = $discount. ' %';
						}
						if($labelsInfo['sale']['extra'] == 2){
							$discount = $this->currency->format($this->tax->calculate(($product_info['price'] - $product_info['special']), $product_info['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
						}					
					}							
					// lightshop end	
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
						'special'     => $special,
            ]]></search>
            <add position="before"><![CDATA[
						'isnewest'       => $isNewest,// lightshop
						'sales'       => $sales,// lightshop
						'discount'       => $discount,// lightshop
				          'catch'       => $catch,// lightshop
				          'popular'   => $popular,// lightshop
				          'hit'    	  => $hit,// lightshop
				          'nocatch'       => $nocatch,// lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			return $this->load->view('extension/module/featured', $data);
            ]]></search>
            <add position="replace"><![CDATA[
					// lightshop
			if(isset($setting['layout']) && strpos($setting['layout'],'column_') !== false){
				return $this->load->view('extension/module/featured_column', $data);
			}else{
				return $this->load->view('extension/module/featured', $data);
			}
					// lightshop end

            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/extension/module/blog_featured.php">
        <operation error="skip">
            <search><![CDATA[
return $this->load->view('extension/module/blog_featured', $data);
            ]]></search>
            <add position="replace"><![CDATA[
					// lightshop
			if(isset($setting['layout']) && strpos($setting['layout'],'column_') !== false){
				return $this->load->view('extension/module/blog_featured_column', $data);
			}else{
				return $this->load->view('extension/module/blog_featured', $data);
			}
					// lightshop end
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/extension/module/blog_latest.php">
        <operation error="skip">
            <search><![CDATA[
return $this->load->view('extension/module/blog_latest', $data);
            ]]></search>
            <add position="replace"><![CDATA[
					// lightshop
			if(isset($setting['layout']) && strpos($setting['layout'],'column_') !== false){
				return $this->load->view('extension/module/blog_latest_column', $data);
			}else{
				return $this->load->view('extension/module/blog_latest', $data);
			}
					// lightshop end

            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/extension/module/featured_article.php">
        <operation error="skip">
            <search><![CDATA[
return $this->load->view('extension/module/featured_article', $data);
            ]]></search>
            <add position="replace"><![CDATA[
					// lightshop
			if(isset($setting['layout']) && strpos($setting['layout'],'column_') !== false){
				return $this->load->view('extension/module/featured_article_column', $data);
			}else{
				return $this->load->view('extension/module/featured_article', $data);
			}
					// lightshop end

            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/extension/total/coupon.php">
        <operation>
            <search><![CDATA[
			return $this->load->view('extension/total/coupon', $data);
            ]]></search>
            <add position="before"><![CDATA[
// lightshop
			$this->load->language('extension/theme/lightshop');
			$data['text_lightshop_coupon'] = $this->language->get('text_lightshop_coupon');
// lightshop end		
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/extension/total/reward.php">
        <operation>
            <search><![CDATA[
			return $this->load->view('extension/total/reward', $data);
            ]]></search>
            <add position="before"><![CDATA[
// lightshop
			$this->load->language('extension/theme/lightshop');
			$data['text_lightshop_reward'] = $this->language->get('text_lightshop_reward');
// lightshop end	
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/extension/total/shipping.php">
        <operation>
            <search><![CDATA[
			return $this->load->view('extension/total/shipping', $data);
            ]]></search>
            <add position="before"><![CDATA[
// lightshop
			$this->load->language('extension/theme/lightshop');
			$data['text_lightshop_shipping'] = $this->language->get('text_lightshop_shipping');
// lightshop end
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/extension/total/voucher.php">
        <operation>
            <search><![CDATA[
			return $this->load->view('extension/total/voucher', $data);
            ]]></search>
            <add position="before"><![CDATA[
// lightshop
			$this->load->language('extension/theme/lightshop');
			$data['text_lightshop_voucher'] = $this->language->get('text_lightshop_voucher');
// lightshop end
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/information/contact.php">
        <operation>
            <search index="0"><![CDATA[
		$this->document->setTitle($this->language->get('heading_title'));
            ]]></search>
            <add position="replace"><![CDATA[
		// lightshop
		
		if ($this->config->get('theme_lightshop_contact_meta_title' . $this->config->get('config_language_id'))) {
			$this->document->setTitle($this->config->get('theme_lightshop_contact_meta_title' . $this->config->get('config_language_id')));
		} else {
			$this->document->setTitle($this->language->get('heading_title'));
		}
		
		if ($this->config->get('theme_lightshop_contact_meta_description' . $this->config->get('config_language_id'))) {
			$this->document->setDescription($this->config->get('theme_lightshop_contact_meta_description' . $this->config->get('config_language_id')));
		}
		
		if ($this->config->get('theme_lightshop_contact_meta_keyword' . $this->config->get('config_language_id'))) {
			$this->document->setKeywords($this->config->get('theme_lightshop_contact_meta_keyword' . $this->config->get('config_language_id')));
		}
		
		// lightshop end

            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
		if (isset($this->error['name'])) {
            ]]></search>
            <add position="before"><![CDATA[
		// lightshop
		$this->load->language('extension/theme/lightshop');
		$data['schema'] = $this->config->get('theme_lightshop_schema');
		$data['shop_email'] = $this->config->get('config_email');
		$data['text_lightshop_support'] = $this->language->get('text_lightshop_support');
		$data['text_lightshop_con_soc'] = $this->language->get('text_lightshop_con_soc');
		$data['phone_1'] = html_entity_decode($this->config->get('theme_lightshop_phone_1' . $this->config->get('config_language_id')), ENT_QUOTES, 'UTF-8');
		$data['phone_2'] = html_entity_decode($this->config->get('theme_lightshop_phone_2' . $this->config->get('config_language_id')), ENT_QUOTES, 'UTF-8');
		$this->load->model('setting/setting');
		$data['social_navs'] = array();
		$social_links = $this->model_setting_setting->getSetting('theme_lightshopsoclinks');
		$data['social_links'] = $social_links['theme_lightshopsoclinks_array'];
		$data['social_navs'] = $this->config->get('theme_lightshop_social_nav');	
		$data['zoom'] = $this->config->get('theme_lightshop_contact_zoom');
		$data['zoom_control'] = $this->config->get('theme_lightshop_contact_zoom_control');
		$data['api_key'] = $this->config->get('theme_lightshop_contact_api_key');
		$data['contact_map'] = $this->config->get('theme_lightshop_contact_map');
		if ($this->config->get('theme_lightshop_contact_pdata')) {
			$this->load->language('extension/theme/lightshop');
			$this->load->model('catalog/information');

			$information_info = $this->model_catalog_information->getInformation($this->config->get('theme_lightshop_contact_pdata'));

			if ($information_info) {
				$data['text_lightshop_pdata'] = sprintf($this->language->get('text_lightshop_pdata'), $this->language->get('button_submit'), $this->url->link('information/information/agree', 'information_id=' . $this->config->get('theme_lightshop_contact_pdata'), true), $information_info['title'], $information_info['title']);
			} else {
				$data['text_lightshop_pdata'] = '';
			}
		} else {
			$data['text_lightshop_pdata'] = '';
		}

		// lightshop end
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/information/information.php">
        <operation>
            <search index="0"><![CDATA[
		if ($information_info) {
            ]]></search>
            <add position="before"><![CDATA[
		// lightshop
		$data['schema'] = $this->config->get('theme_lightshop_schema');
		// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$this->response->setOutput($this->load->view('error/not_found', $data));
            ]]></search>
            <add position="replace"><![CDATA[
// lightshop
		$this->load->language('extension/theme/lightshop');
		if (is_file(DIR_IMAGE . $this->config->get('theme_lightshop_logo_404'))) {
			$data['logo_404'] = HTTP_SERVER . 'image/' . $this->config->get('theme_lightshop_logo_404');
		} else {
			$data['logo_404'] = '';
		}
		$data['text_404'] = sprintf($this->language->get('text_404'), $this->url->link('information/contact', '', true), $this->url->link('product/search', '', true), $this->url->link('common/home', '', true));
		$this->response->setOutput($this->load->view('error/404', $data));
// lightshop end	
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/information/sitemap.php">
        <operation>
            <search><![CDATA[
$this->load->model('catalog/product');
            ]]></search>
            <add position="after"><![CDATA[
		// lightshop
		$this->load->language('extension/theme/lightshop');
		$data['schema'] = $this->config->get('theme_lightshop_schema');
		$data['text_lightshop_news'] = $this->language->get('text_lightshop_news');
		$data['text_lightshop_blogs'] = $this->language->get('text_lightshop_blogs');
		// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		$data['column_left'] = $this->load->controller('common/column_left');
            ]]></search>
            <add position="before"><![CDATA[
		// lightshop
		$this->load->model('extension/module/lightshopnews');
		$data['newss'] = array();
		if($this->model_extension_module_lightshopnews->isModuleSet()){
				$filter_data = array(
					'start'              => 0,
					'limit'              => 100000
				);

			foreach ($this->model_extension_module_lightshopnews->getNewss($filter_data) as $result) {
				$data['newss'][] = array(
					'title' => $result['title'],
					'href'  => $this->url->link('extension/module/lightshop_news/getnews', 'news_id=' . $result['news_id'])
				);
			}
		}

		$this->load->model('extension/module/lightshopblog');
		$this->load->model('extension/module/lightshopcatblog');
		if($this->model_extension_module_lightshopcatblog->isModuleSet()){
			$data['blogcategories'] = array();
			$data['blogcategories'] = $this->getCategoriesLb(0);
		}			
		// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		$this->response->setOutput($this->load->view('information/sitemap', $data));
            ]]></search>
            <add position="after" offset="1"><![CDATA[
		// lightshop
	protected function getCategoriesLb($parent_id, $current_path = '') {
		$info = array();

		$results = $this->model_extension_module_lightshopcatblog->getBlogCategories($parent_id);

		foreach ($results as $result) {
			if (!$current_path) {
				$new_path = $result['category_id'];
			} else {
				$new_path = $current_path . '_' . $result['category_id'];
			}

					$SubBlogs = array();
					$filter_data = array(
						'filter_category_id' => $result['category_id'],
						'start'              => 0,
						'limit'              => 100000
					);
			$blogs = $this->model_extension_module_lightshopblog->getBlogs($filter_data);

			foreach ($blogs as $blog) {
				$SubBlogs[] = array(
					'title' => $blog['title'],
					'href'  => $this->url->link('extension/module/lightshop_blog/getblog', 'blog_id=' . $blog['blog_id'])
				);
			}


				$info[] = array(
					'name' => $result['name'],
					'href'  => $this->url->link('extension/module/lightshopcat_blog/getcat', 'lbpath=' . $new_path),
					'subblogs' => $SubBlogs
				);
			

			$this->getCategoriesLb($result['category_id'], $new_path);
		}

		return $info;
	}
		// lightshop end	
            ]]></add>
        </operation>
    </file>
	<file path="catalog/controller/mail/order.php">
		<operation>
			<search><![CDATA[
		$data['logo'] = $order_info['store_url'] . 'image/' . $this->config->get('config_logo');
			]]></search>
			<add position="replace"><![CDATA[
		//lightshop	
		if (is_file(DIR_IMAGE . $this->config->get('theme_lightshop_header_logo'))) {
			$data['logo'] = $order_info['store_url'] . 'image/' . $this->config->get('theme_lightshop_header_logo');
		} else {
			$data['logo'] = '';
		}
		$data['header_text_logo'] = html_entity_decode($this->config->get('theme_lightshop_header_text_logo'), ENT_QUOTES, 'UTF-8');
		if ($this->config->get('theme_lightshop_color') == 1) {
			$lightshop_color = 'e09d3d';
		} elseif ($this->config->get('theme_lightshop_color') == 2){
			$lightshop_color = 'a8cf4b';
		} elseif ($this->config->get('theme_lightshop_color') == 3){
			$lightshop_color = '8e6048';
		} elseif ($this->config->get('theme_lightshop_color') == 4){
			$lightshop_color = '5b5d84';
		} elseif ($this->config->get('theme_lightshop_color') == 5){
			$lightshop_color = '343434';
		} elseif ($this->config->get('theme_lightshop_color') == 6){
			$lightshop_color = $this->config->get('theme_lightshop_custom_color_1');
		} else {
			$lightshop_color = '2a77ed';
		}
		$data['lightshop_color'] = $lightshop_color;
		$data['lightshop_custom_color_1'] = $this->config->get('theme_lightshop_custom_color_1');
		$data['theme_lightshop_checkout_st3'] = $this->config->get('theme_lightshop_checkout_st3_sa');
		$data['lightshop_phone_1'] = html_entity_decode($this->config->get('theme_lightshop_phone_1' . $this->config->get('config_language_id')), ENT_QUOTES, 'UTF-8');
		$data['lightshop_phone_2'] = html_entity_decode($this->config->get('theme_lightshop_phone_2' . $this->config->get('config_language_id')), ENT_QUOTES, 'UTF-8');	
		$data['phone_1_dig'] = preg_replace('/[^0-9]/', '', $data['lightshop_phone_1']);
		$data['phone_2_dig'] = preg_replace('/[^0-9]/', '', $data['lightshop_phone_2']);
		$data['config_email'] =  $this->config->get('config_email');
		$data['language_id'] = $this->config->get('config_language_id');
		//lightshop end
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
$this->load->model('tool/upload');
			]]></search>
			<add position="after"><![CDATA[
// lightshop
				$this->load->model('tool/image');
				$data['social_navs'] = array();
				if($this->config->get('theme_lightshop_social_nav')){
				$data['social_navs'] = $this->config->get('theme_lightshop_social_nav');
				}				
				foreach ($data['social_navs'] as $key => $social_nav) {
					$data['social_navs'][$key]['icone'] = $order_info['store_url'] . 'catalog/view/theme/lightshop/img/icons/png/social_'.$social_nav['settype'].'.png';
				}
// lightshop end
			]]></add>
		</operation>
		<operation>
			<search index="1,2"><![CDATA[
foreach ($order_products as $order_product) {
			]]></search>
			<add position="after"><![CDATA[
// lightshop
					$query_product_info = $this->db->query("SELECT * FROM " . DB_PREFIX . "product WHERE product_id = '" . (int)$order_product['product_id'] . "'");	
					$product_info = $query_product_info->row;
					
					if ($this->config->get('theme_lightshop_image_cart_resize')) {
						if ($product_info['image']) {
							$image = $this->model_tool_image->lightshop_resize($product_info['image'],  $this->config->get('theme_lightshop_image_cart_width'), $this->config->get('theme_lightshop_image_cart_height'));
						} else {
							$image = $this->model_tool_image->lightshop_resize('placeholder.png',  $this->config->get('theme_lightshop_image_cart_width'), $this->config->get('theme_lightshop_image_cart_height'));
						}
					} else {
						if ($product_info['image']) {
							$image = $this->model_tool_image->resize($product_info['image'],  $this->config->get('theme_lightshop_image_cart_width'), $this->config->get('theme_lightshop_image_cart_height'));
						} else {
							$image = $this->model_tool_image->resize('placeholder.png',  $this->config->get('theme_lightshop_image_cart_width'), $this->config->get('theme_lightshop_image_cart_height'));
						}
					}
// lightshop end
			]]></add>
		</operation>
		<operation>
			<search index="0,1"><![CDATA[
'option'   => $option_data,
			]]></search>
			<add position="after"><![CDATA[
				'image'    => $image,// lightshop
			]]></add>
		</operation>
		<operation>
			<search index="0,1"><![CDATA[
'quantity' => $order_product['quantity'],
			]]></search>
			<add position="after"><![CDATA[
				'href'     => $this->url->link('product/product', 'product_id=' . $order_product['product_id']),// lightshop
			]]></add>
		</operation>
		<operation>
			<search index="0"><![CDATA[
		$mail->setTo($order_info['email']);
			]]></search>
			<add position="after"><![CDATA[
				//lightshop start
				if(!$order_info['email']){
					$mail->setTo('nomaillightshops@nomail.ru');
				}
				//lightshop stop
			]]></add>
		</operation>
	</file> 
    <file path="catalog/controller/product/category.php">
        <operation>
            <search index="0"><![CDATA[
		$this->load->model('tool/image');
            ]]></search>
            <add position="after"><![CDATA[
		$this->load->model('setting/setting');
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
		if (isset($this->request->get['sort'])) {
            ]]></search>
            <add position="before"><![CDATA[
//lightshop start
		if (isset($this->session->data['change_currency'])) {
			unset($this->session->data['change_currency']);
			unset($this->request->get['min_price']);
			unset($this->request->get['max_price']);
		}

		if (isset($this->request->get['min_price'])) {
			$min_price = $this->request->get['min_price'];
		} else {
			$min_price = '';
		}

		if (isset($this->request->get['max_price'])) {
			$max_price = $this->request->get['max_price'];
		} else {
			$max_price = '';
		}
		$data['language_id'] = $this->config->get('config_language_id');
		$data['lazyload'] = $this->config->get('theme_lightshop_lazyload');

//lightshop stop
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
				$url .= '&limit=' . $this->request->get['limit'];
            ]]></search>
            <add position="after" offset="1"><![CDATA[
//lightshop start
			if (isset($this->request->get['min_price'])) {
				$url .= '&min_price=' . $this->request->get['min_price'];
			} 

			if (isset($this->request->get['max_price'])) {
				$url .= '&max_price=' . $this->request->get['max_price'];
			} 
			$cat_url = '';
//lightshop stop
            ]]></add>
        </operation>
        <operation>
            <search index="1,3"><![CDATA[
				$url .= '&limit=' . $this->request->get['limit'];
            ]]></search>
            <add position="after" offset="1"><![CDATA[
//lightshop start
			if (isset($this->request->get['min_price'])) {
				$url .= '&min_price=' . $this->request->get['min_price'];
			} 

			if (isset($this->request->get['max_price'])) {
				$url .= '&max_price=' . $this->request->get['max_price'];
			} 
//lightshop stop
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
			$category_id = (int)array_pop($parts);
            ]]></search>
            <add position="after"><![CDATA[
			$id = 0;
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
						'text' => $category_info['name'],
            ]]></search>
            <add position="after"><![CDATA[
						'breadList' => $this->breadList($id),// lightshop
						'cat_id' => $id,// lightshop
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
						'href' => $this->url->link('product/category', 'path=' . $path . $url)
            ]]></search>
            <add position="after" offset="2"><![CDATA[
				$id = $path_id;
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
			$category_id = 0;
            ]]></search>
            <add position="before" offset="1"><![CDATA[
//lightshop start
			$cat_url = $this->url->link('product/category', 'path=' . $path . '_' . $category_id);
//lightshop stop
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
$data['text_compare'] = sprintf($this->language->get('text_compare')
            ]]></search>
            <add position="after"><![CDATA[
			// lightshop
			$this->load->language('extension/theme/lightshop');
			$data['schema'] = $this->config->get('theme_lightshop_schema');
			$data['product_detail'] = $this->config->get('theme_lightshop_product_detail');
			$data['category_background'] = $this->config->get('theme_lightshop_category_background');
			$data['category_sorts'] = $this->config->get('theme_lightshop_category_sorts');
			$data['category_limits'] = $this->config->get('theme_lightshop_category_limits');
			$data['category_categories'] = $this->config->get('theme_lightshop_category_categories');
			$data['catalog_type'] = $this->config->get('theme_lightshop_catalog_type');
			
			$data['button_fastorder_sendorder'] = $this->language->get('button_lighshop_sendorder');
			$data['text_lightshop_buy_click'] = $this->language->get('text_lightshop_buy_click');
			$data['text_product_view_btn'] = $this->language->get('text_product_view_btn');
			
			$data['pс_view'] = $this->config->get('theme_lightshop_pс_view');
			$data['mobile_view'] = $this->config->get('theme_lightshop_mobile_view');
			if ($this->config->get('theme_lightshop_buy_click_pdata')) {
				$this->load->language('extension/theme/lightshop');
				$this->load->model('catalog/information');

				$information_info = $this->model_catalog_information->getInformation($this->config->get('theme_lightshop_buy_click_pdata'));

				if ($information_info) {
					$data['text_lightshop_pdata'] = sprintf($this->language->get('text_lightshop_pdata'), $this->language->get('button_lighshop_sendorder'), $this->url->link('information/information/agree', 'information_id=' . $this->config->get('theme_lightshop_buy_click_pdata'), true), $information_info['title'], $information_info['title']);
				} else {
					$data['text_lightshop_pdata'] = '';
				}
			} else {
				$data['text_lightshop_pdata'] = '';
			}
			
			$data['buy_click'] = array();
			if($this->config->get('theme_lightshop_buy_click')){
				$data['buy_click'] = $this->config->get('theme_lightshop_buy_click');
				if ($this->customer->isLogged()) {
					$this->load->model('account/customer');
					$data['customer_info'] = $this->model_account_customer->getCustomer($this->customer->getId());
				}
			}			
			$this->load->language('checkout/checkout');
			$data['entry_firstname'] = $this->language->get('entry_firstname');
			$data['entry_lastname'] = $this->language->get('entry_lastname');
			$data['entry_email'] = $this->language->get('entry_email');
			$data['entry_telephone'] = $this->language->get('entry_telephone');
			$data['entry_comment'] = $this->language->get('entry_comment');
			// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
				$data['thumb'] = $this->model_tool_image->resize($category_info['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_category_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_category_height'));
            ]]></search>
            <add position="replace"><![CDATA[
				$data['thumb'] = $this->config->get('theme_lightshop_image_category_resize') ? $this->model_tool_image->lightshop_resize($category_info['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_category_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_category_height')) : $this->model_tool_image->resize($category_info['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_category_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_category_height'));// lightshop
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
				$data['categories'][] = array(
            ]]></search>
            <add position="before"><![CDATA[
//lightshop start
				if(!$this->config->get('theme_lightshop_subcategory')){
					unset($filter_data['filter_sub_category']);
				}
//lightshop stop

            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
					'name' => $result['name'] . ($this->config->get('config_product_count') ? ' (' . $this->model_catalog_product->getTotalProducts($filter_data) . ')' : ''),
            ]]></search>
            <add position="after"><![CDATA[
					// lightshop
					'thumb' => $this->config->get('theme_lightshop_image_category_resize') ? $this->model_tool_image->lightshop_resize(($result['image']=='' ? 'no_image.png' : $result['image']), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_category_width'),  $this->config->get('theme_' . $this->config->get('config_theme') . '_image_category_height')) : $this->model_tool_image->resize(($result['image']=='' ? 'no_image.png' : $result['image']), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_category_width'),  $this->config->get('theme_' . $this->config->get('config_theme') . '_image_category_height')),
					// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
				'filter_category_id' => $category_id,
            ]]></search>
            <add position="after"><![CDATA[
				'min_price'    		 => $min_price,//lightshop
				'max_price'    		 => $max_price,//lightshop
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
				'limit'              => $limit
            ]]></search>
            <add position="after" offset="1"><![CDATA[
//lightshop start
			if($this->config->get('theme_lightshop_subcategory')){
				$filter_data['filter_sub_category'] = true;
			}
				if (count($results) == 1) {
					$colmd = 8; 
				}elseif ($this->config->get('theme_lightshop_category_categories') == 4) {
					$colmd = 4;
				}else{
					$colmd = 6;
				}
				$data['colmd'] = $colmd;
//lightshop stop
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
			$results = $this->model_catalog_product->getProducts($filter_data);
            ]]></search>
            <add position="after"><![CDATA[
			// lightshop
			if (isset($this->request->get['page'])) {
				$url .= '&page=' . $this->request->get['page'];
			}	

			$currR = $this->currency->getSymbolRight($this->session->data['currency']);
			$currL = $this->currency->getSymbolLeft($this->session->data['currency']);

			if($currR){
				$data['currencydata'] = "R_" . $currR ;
			}else{
				$data['currencydata'] = "L_" . $currL ;
			}
		
			$data['url'] = $url;
			$isDateTime = false;
			$data['path'] = $this->request->get['path'];
			$data['category_id'] = $category_id;
			$data['cat_url'] = $cat_url;
			$data['product_total'] = $product_total;
			$data['minPrice'] = $this->model_catalog_category->getMinPrice($category_id);
			$data['maxPrice'] = $this->model_catalog_category->getMaxPrice($category_id);
			$data['currency'] = $this->session->data['currency'];
			$this->load->model('extension/module/lightshop');
			$labelsInfo = array();
			if($this->config->get('theme_lightshop_label')){
				$labelsInfo = $this->config->get('theme_lightshop_label');  
			}
			$data['labelsinfo'] = $labelsInfo ;
			$data['language_id'] = $this->config->get('config_language_id');
			$newest = array();
			$sales = false;
			if(isset($labelsInfo['new']['period']) && $labelsInfo['new']['status']){
				$newest = $this->model_catalog_product->getNewestProducts($labelsInfo['new']['period']);	
			}
			if(isset($labelsInfo['sale']['status']) && $labelsInfo['sale']['status']){
				$sales = true;				
			}
		    if (isset($labelsInfo['hit']) && $labelsInfo['hit']['status']) {
		       $hits = $this->model_extension_module_lightshop->getHitProducts($labelsInfo['hit']['period'],$labelsInfo['hit']['qty']);
		    }
			// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
					$image = $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));
            ]]></search>
            <add position="replace"><![CDATA[
					$image = $this->config->get('theme_lightshop_image_product_resize') ? $this->model_tool_image->lightshop_resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height')) : $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));// lightshop
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
					$image = $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));
            ]]></search>
            <add position="replace"><![CDATA[
					$image = $this->config->get('theme_lightshop_image_product_resize') ? $this->model_tool_image->lightshop_resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height')) : $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));// lightshop
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
				$data['products'][] = array(
            ]]></search>
            <add position="before"><![CDATA[
				// lightshop
				$extraImages = array();				
				$images = $this->model_catalog_product->getProductImages($result['product_id']);
				foreach($images as $imageX){
					$extraImages[] = $this->config->get('theme_lightshop_image_product_resize') ? $this->model_tool_image->lightshop_resize($imageX['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height')) : $this->model_tool_image->resize($imageX['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));
				}
				
				if (in_array($result['product_id'], $newest)) {
					$isNewest = true;
				} else {
					$isNewest = false;
				}			
								
				if ($result['quantity'] <= 0) {
					$stock = $result['stock_status'];
				} elseif ($this->config->get('config_stock_display')) {
					$stock = $result['quantity'];
				} else {
					$stock = $this->language->get('text_instock');
				}	
				
				if ($result['quantity'] <= 0 && !$this->config->get('config_stock_checkout')) {
					$buy_btn = $result['stock_status'];
				} else {
					$buy_btn = '';
				}

				$discount = '';
				if($sales && $special){
					if($labelsInfo['sale']['extra'] == 1){
						$discount = round((($result['price'] - $result['special'])/$result['price'])*100);
						$discount = $discount. ' %';

					}
					if($labelsInfo['sale']['extra'] == 2){
						$discount = $this->currency->format($this->tax->calculate(($result['price'] - $result['special']), $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
					}					
				}
				$catch = false;
				$nocatch = false;
				if (isset($labelsInfo['catch']) && $labelsInfo['catch']['status'] && $result['quantity'] <= $labelsInfo['catch']['qty']) {
					if($result['quantity'] > 0){
						$catch = $labelsInfo['catch']['name'][$this->config->get('config_language_id')];
					}else{
						$catch = $labelsInfo['catch']['name1'][$this->config->get('config_language_id')];
						$nocatch = true;
					}
				}

				$popular = false;
				if (isset($labelsInfo['popular']) && $labelsInfo['popular']['status'] && $result['viewed'] >= $labelsInfo['popular']['views']) {
					$popular = $labelsInfo['popular']['name'][$this->config->get('config_language_id')];
				}

				$hit = false;
				if (isset($labelsInfo['hit']) && $labelsInfo['hit']['status']) {
					if (isset($hits[$result['product_id']])) {
						$hit = $labelsInfo['hit']['name'][$this->config->get('config_language_id')];
					}
				}

				$options = array();

				foreach ($this->model_catalog_product->getProductOptions($result['product_id']) as $option) {
					$product_option_value_data = array();

					foreach ($option['product_option_value'] as $option_value) {
						if (!$option_value['subtract'] || ($option_value['quantity'] > 0)) {
							if ((($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) && (float)$option_value['price']) {
								$priceOp = $this->currency->format($this->tax->calculate($option_value['price'], $result['tax_class_id'], $this->config->get('config_tax') ? 'P' : false), $this->session->data['currency']);
							} else {
								$priceOp = false;
							}

							$product_option_value_data[] = array(
								'product_option_value_id' => $option_value['product_option_value_id'],
								'option_value_id'         => $option_value['option_value_id'],
								'name'                    => $option_value['name'],
								'image'                   => $option_value['image'] ? $this->model_tool_image->resize($option_value['image'], 50, 50) : '',
								'price'                   => $priceOp,
								'price_prefix'            => $option_value['price_prefix']
							);
						}
					}

					if ($option['type'] == 'date' || $option['type'] == 'datetime' || $option['type'] == 'time') {
						$isDateTime = true;
					}
					
					$options[] = array(
						'product_option_id'    => $option['product_option_id'],
						'product_option_value' => $product_option_value_data,
						'option_id'            => $option['option_id'],
						'name'                 => $option['name'],
						'type'                 => $option['type'],
						'value'                => $option['value'],
						'required'             => $option['required']
					);
				}						
				// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
					'name'        => $result['name'],
            ]]></search>
            <add position="after"><![CDATA[
					'manufacturer'        => $result['manufacturer'],// lightshop
					'quantity'        => $result['quantity'],// lightshop
					'stock'        => $stock,// lightshop
					'images'       => $extraImages,// lightshop	
					'isnewest'       => $isNewest,// lightshop
					'sales'       => $sales,// lightshop
					'discount'       => $discount,// lightshop
					'catch'       => $catch,// lightshop
					'nocatch'       => $nocatch,// lightshop
					'popular'	  => $popular,// lightshop
					'hit'	 	  => $hit,// lightshop
					'buy_btn'	  => $buy_btn,// lightshop
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
					'rating'      => $result['rating'],
            ]]></search>
            <add position="after" offset="4"><![CDATA[
			// lightshop
			if ($isDateTime) {
				$this->document->addScript('catalog/view/javascript/jquery/datetimepicker/moment/moment.min.js');
				$this->document->addScript('catalog/view/javascript/jquery/datetimepicker/moment/moment-with-locales.min.js');
				$this->document->addScript('catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.js');
				$this->document->addStyle('catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.css');;				
			}
			// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
			$data['continue'] = $this->url->link('common/home');
            ]]></search>
            <add position="after"><![CDATA[
// lightshop

			if ($this->config->get($this->config->get('theme_lightshop_config_captcha_fo') . '_status')) {
				$data['captcha_fo'] = $this->load->controller('extension/captcha/' . $this->config->get('theme_lightshop_config_captcha_fo'));
			} else {
				$data['captcha_fo'] = '';
			}
		
		if (isset($this->request->get['view'])) {
			$view = $this->request->get['view'];
			$viewM = $this->request->get['view'];
		}elseif(isset($this->session->data['view'])){
			$view = $this->session->data['view'];
			$viewM = $this->session->data['view'];
		} else {
			$view = $this->config->get('theme_lightshop_pс_view');
			$viewM = $this->config->get('theme_lightshop_mobile_view');
		}
			if (isset($_COOKIE["ismobile"]) && $_COOKIE["ismobile"] == 1){ 
				$this->session->data['view'] = $viewM;
			}else{
				$this->session->data['view'] = $view;
			}
		$data['viewLayer'] = $view;
		$data['viewLayerM'] = $viewM;
		$viewSub = '';
		$data['viewSub'] = '';


				if(strpos($this->session->data['view'],'main') === false){	
					$data['view'] = $this->session->data['view'];

				}else{
					$data['view'] = $this->session->data['view'];

					$viewSub = explode('-',$data['view']);
					if(isset($viewSub[1])){
						$viewSub = '--'.$viewSub[1];
						$data['viewSub'] = 'catalogue__products-list'.$viewSub;
						$data['viewLayerM'] = 'main';
					}else{
						$data['viewSub'] = '';						
					}
					$data['view'] = 'main';

				}	

// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
			$this->response->setOutput($this->load->view('product/category', $data));
            ]]></search>
            <add position="before"><![CDATA[
// lightshop start
			if (isset($this->request->get['view'])) {
				
				$this->response->setOutput($this->load->view('product/category_'.$data['view'], $data));
				return ;
			}elseif(isset($this->request->get['popupdetail'])){
				
				$this->response->setOutput($this->load->view('product/category_popup', $data));
				return ;			
			}
			$data['buyclick_form'] = $this->load->view('product/buyclick_form', $data);
			$data['productsview'] = $this->load->view('product/category_'.$data['view'], $data);
// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
			$this->response->setOutput($this->load->view('error/not_found', $data));
            ]]></search>
            <add position="replace"><![CDATA[
// lightshop
		$this->load->language('extension/theme/lightshop');
		if (is_file(DIR_IMAGE . $this->config->get('theme_lightshop_logo_404'))) {
			$data['logo_404'] = HTTP_SERVER . 'image/' . $this->config->get('theme_lightshop_logo_404');
		} else {
			$data['logo_404'] = '';
		}
		$data['category_id'] = $category_id;
		$data['text_404'] = sprintf($this->language->get('text_404'), $this->url->link('information/contact', '', true), $this->url->link('product/search', '', true), $this->url->link('common/home', '', true));
		$this->response->setOutput($this->load->view('error/404', $data));
// lightshop end			
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
		$this->response->setOutput($this->load->view('error/404', $data));
            ]]></search>
            <add position="after" offset="4"><![CDATA[
// lightshop
	public function breadList($category_id) {
		$this->load->model('catalog/category');
		$data = array();
		$categories = $this->model_catalog_category->getCategories($category_id);
		foreach($categories as $category){
			$data[] = array(
				'name'		=> $category['name'],
				'href'       => $this->url->link('product/category', 'path=' . $category['category_id'])
			);
		}
		return $data;
	}
	public function breadlistcr() {

		$this->load->model('catalog/category');
		$category_id = $this->request->get['cat_id'];
		$data['breadLists'] = array();
		$categories = $this->model_catalog_category->getCategories($category_id);
		foreach($categories as $category){
			$data['breadLists'][] = array(
				'name'		=> $category['name'],
				'href'       => $this->url->link('product/category', 'path=' . $category['category_id'])
			);
		}
		$this->response->setOutput($this->load->view('product/bread_popup',$data));
	}
		
	public function chview() {
		$this->load->model('catalog/category');
		$data = array();
		$this->load->language('product/category');

		$this->load->model('catalog/category');

		$this->load->model('catalog/product');

		$this->load->model('tool/image');
		
		$this->load->language('extension/theme/lightshop');

		if (isset($this->request->get['filter'])) {
			$filter = $this->request->get['filter'];
		} else {
			$filter = '';
		}

		if (isset($this->request->get['sort'])) {
			$sort = $this->request->get['sort'];
		} else {
			$sort = 'p.sort_order';
		}

		if (isset($this->request->get['order'])) {
			$order = $this->request->get['order'];
		} else {
			$order = 'ASC';
		}
		
		if (isset($this->request->get['view'])) {
			$view = $this->request->get['view'];
		}elseif(isset($this->session->data['view'])){
			$view = $this->session->data['view'];
		} else {
			$view = 'main';
		}


		if (isset($this->request->get['min_price'])) {
			$min_price = $this->request->get['min_price'];
		} else {
			$min_price = '';
		}

		if (isset($this->request->get['max_price'])) {
			$max_price = $this->request->get['max_price'];
		} else {
			$max_price = '';
		}

		$this->session->data['view'] = $view;
		

				if(strpos($this->session->data['view'],'main') === false){	
					$viewFile = $this->session->data['view'];
				}else{
					$viewFile = $this->session->data['view'];
					$viewSub = explode('-',$viewFile);
					if(isset($viewSub[1])){
						$viewSub = $viewSub[1];
						$data['viewSub'] = 'catalogue__products-list--'.$viewSub;						
					}else{
						$data['viewSub'] = '';						
					}

					$viewFile = 'main';
				}			
				
		
		if (isset($this->request->get['page'])) {
			$page = $this->request->get['page'];
		} else {
			$page = 1;
		}

		if (isset($this->request->get['limit'])) {
			$limit = (int)$this->request->get['limit'];
		} else {
			$limit = $this->config->get('theme_' . $this->config->get('config_theme') . '_product_limit');
		}
		$url = '';

		if (isset($this->request->get['path'])) {

			if (isset($this->request->get['sort'])) {
				$url .= '&sort=' . $this->request->get['sort'];
			}

			if (isset($this->request->get['order'])) {
				$url .= '&order=' . $this->request->get['order'];
			}

			if (isset($this->request->get['limit'])) {
				$url .= '&limit=' . $this->request->get['limit'];
			}

			if (isset($this->request->get['min_price'])) {
				$url .= '&min_price=' . $this->request->get['min_price'];
			} 

			if (isset($this->request->get['max_price'])) {
				$url .= '&max_price=' . $this->request->get['max_price'];
			} 

			$path = '';

			$parts = explode('_', (string)$this->request->get['path']);

			$category_id = (int)array_pop($parts);
			$id = 0;
			foreach ($parts as $path_id) {
				if (!$path) {
					$path = (int)$path_id;
				} else {
					$path .= '_' . (int)$path_id;
				}

				$category_info = $this->model_catalog_category->getCategory($path_id);

				if ($category_info) {
					$data['breadcrumbs'][] = array(
						'text' => $category_info['name'],
						'breadList' => $this->breadList($id),// lightshop
						'cat_id' => $id,// lightshop
						'href' => $this->url->link('product/category', 'path=' . $path . $url)
					);
				}
				$id = $path_id;
			}
		} else {
			$category_id = 0;
		}
		$category_info = $this->model_catalog_category->getCategory($category_id);

			$data['text_refine'] = $this->language->get('text_refine');
			$data['text_empty'] = $this->language->get('text_empty');
			$data['text_quantity'] = $this->language->get('text_quantity');
			$data['text_manufacturer'] = $this->language->get('text_manufacturer');
			$data['text_model'] = $this->language->get('text_model');
			$data['text_price'] = $this->language->get('text_price');
			$data['text_tax'] = $this->language->get('text_tax');
			$data['text_points'] = $this->language->get('text_points');
			$data['text_compare'] = sprintf($this->language->get('text_compare'), (isset($this->session->data['compare']) ? count($this->session->data['compare']) : 0));
			$data['text_sort'] = $this->language->get('text_sort');
			$data['text_limit'] = $this->language->get('text_limit');

			$data['button_cart'] = $this->language->get('button_cart');
			$data['button_wishlist'] = $this->language->get('button_wishlist');
			$data['button_compare'] = $this->language->get('button_compare');
			$data['button_continue'] = $this->language->get('button_continue');
			$data['button_list'] = $this->language->get('button_list');
			$data['button_grid'] = $this->language->get('button_grid');
			


			$data['schema'] = $this->config->get('theme_lightshop_schema');
			$data['product_detail'] = $this->config->get('theme_lightshop_product_detail');

			$data['compare'] = $this->url->link('product/compare');

			$url = '';

			if (isset($this->request->get['filter'])) {
				$url .= '&filter=' . $this->request->get['filter'];
			}

			if (isset($this->request->get['sort'])) {
				$url .= '&sort=' . $this->request->get['sort'];
			}

			if (isset($this->request->get['order'])) {
				$url .= '&order=' . $this->request->get['order'];
			}

			if (isset($this->request->get['limit'])) {
				$url .= '&limit=' . $this->request->get['limit'];
			}

			if (isset($this->request->get['min_price'])) {
				$url .= '&min_price=' . $this->request->get['min_price'];
			} 

			if (isset($this->request->get['max_price'])) {
				$url .= '&max_price=' . $this->request->get['max_price'];
			} 

		if (isset($this->request->get['search'])) {
			$search = $this->request->get['search'];
		} else {
			$search = '';
		}
//search
		if (isset($this->request->get['tag'])) {
			$tag = $this->request->get['tag'];
		} elseif (isset($this->request->get['search'])) {
			$tag = $this->request->get['search'];
		} else {
			$tag = '';
		}

		if (isset($this->request->get['description'])) {
			$description = $this->request->get['description'];
		} else {
			$description = '';
		}

		if (isset($this->request->get['category_id'])) {
			$category_id = $this->request->get['category_id'];
		} else {
//			$category_id = 0;
		}

		if (isset($this->request->get['sub_category'])) {
			$sub_category = $this->request->get['sub_category'];
		} else {
			$sub_category = '';
		}
//search
			$data['products'] = array();

			$filter_data = array(
				'filter_name'         => $search,
				'filter_tag'          => $tag,
				'filter_description'  => $description,
				'filter_sub_category' => $sub_category,
				'filter_category_id' => $category_id,
				'filter_filter'      => $filter,
				'min_price'    		 => $min_price,
				'max_price'    		 => $max_price,
				'sort'               => $sort,
				'order'              => $order,
				'start'              => ($page - 1) * $limit,
				'limit'              => $limit
			);

			$product_total = $this->model_catalog_product->getTotalProducts($filter_data);

			$results = $this->model_catalog_product->getProducts($filter_data);
			

			$data['product_total'] = $product_total;
			$data['minPrice'] = $this->model_catalog_category->getMinPrice($category_id);
			$data['maxPrice'] = $this->model_catalog_category->getMaxPrice($category_id);
			$data['currency'] = $this->session->data['currency'];
			
			$labelsInfo = array();
			if($this->config->get('theme_lightshop_label')){
				$labelsInfo = $this->config->get('theme_lightshop_label');
			}
			$data['labelsinfo'] = $labelsInfo ;
			$data['language_id'] = $this->config->get('config_language_id');
			$newest = array();
			$sales = false;
			if(isset($labelsInfo['new']['period']) && $labelsInfo['new']['status']){
				$newest = $this->model_catalog_product->getNewestProducts($labelsInfo['new']['period']);	
			}
			if(isset($labelsInfo['sale']['status']) && $labelsInfo['sale']['status']){
				$sales = true;				
			} 
			$this->load->model('extension/module/lightshop');
		    if (isset($labelsInfo['hit']) && $labelsInfo['hit']['status']) {
		       $hits = $this->model_extension_module_lightshop->getHitProducts($labelsInfo['hit']['period'],$labelsInfo['hit']['qty']);
		    }

			$data['products'] = array();

			foreach ($results as $result) { 
				if ($result['image']) {
					$image = $this->config->get('theme_lightshop_image_product_resize') ? $this->model_tool_image->lightshop_resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height')) : $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));// lightshop
				} else {
					$image = $this->config->get('theme_lightshop_image_product_resize') ? $this->model_tool_image->lightshop_resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height')) : $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));// lightshop
				}
				
				$extraImages = array();				
				$images = $this->model_catalog_product->getProductImages($result['product_id']);
				foreach($images as $imageX){
					$extraImages[] = $this->config->get('theme_lightshop_image_product_resize') ? $this->model_tool_image->lightshop_resize($imageX['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height')) : $this->model_tool_image->resize($imageX['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));
				}			

				if ($result['quantity'] <= 0) {
					$stock = $result['stock_status'];
				} elseif ($this->config->get('config_stock_display')) {
					$stock = $result['quantity'];
				} else {
					$stock = $this->language->get('text_instock');
				}				
				if (in_array($result['product_id'], $newest)) {
					$isNewest = true;
				} else {
					$isNewest = false;
				}		
				
		        $catch = false;
		        if (isset($labelsInfo['catch']) && $labelsInfo['catch']['status'] && $result['quantity'] <= $labelsInfo['catch']['qty']) {
		          if($result['quantity'] > 0){
		            $catch = $labelsInfo['catch']['name'][$this->config->get('config_language_id')];
		          }else{
		            $catch = $labelsInfo['catch']['name1'][$this->config->get('config_language_id')];
		          }
		        }

		        $popular = false;
		        if (isset($labelsInfo['popular']) && $labelsInfo['popular']['status'] && $result['viewed'] >= $labelsInfo['popular']['views']) {
		          $popular = $labelsInfo['popular']['name'][$this->config->get('config_language_id')];
		        }

		        $hit = false;
		        if (isset($labelsInfo['hit']) && $labelsInfo['hit']['status']) {
		          if (isset($hits[$result['product_id']])) {
		            $hit = $labelsInfo['hit']['name'][$this->config->get('config_language_id')];
		          }
		        }			

				if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
					$price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$price = false;
				}

				if ((float)$result['special']) {
					$special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$special = false;
				}

				if ($this->config->get('config_tax')) {
					$tax = $this->currency->format((float)$result['special'] ? $result['special'] : $result['price'], $this->session->data['currency']);
				} else {
					$tax = false;
				}

				if ($this->config->get('config_review_status')) {
					$rating = (int)$result['rating'];
				} else {
					$rating = false;
				}
				if (isset($this->request->get['path'])) {				
					$href = $this->url->link('product/product', 'path=' . $this->request->get['path'] . '&product_id=' . $result['product_id'] . $url);
				}else{
					$href = $this->url->link('product/product', 'product_id=' . $result['product_id'] . $url);
				}
				if ($result['quantity'] <= 0 && !$this->config->get('config_stock_checkout')) {
					$buy_btn = $result['stock_status'];
				} else {
					$buy_btn = '';
				}

				$discount = '';
				if($sales && $special){
					if($labelsInfo['sale']['extra'] == 1){
						$discount = round((($result['price'] - $result['special'])/$result['price'])*100);
						$discount = $discount. ' %';
					}
					if($labelsInfo['sale']['extra'] == 2){
						$discount = $this->currency->format($this->tax->calculate(($result['price'] - $result['special']), $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
					}					
				}			
				
				$data['products'][] = array(
					'product_id'  => $result['product_id'],
					'thumb'       => $image,
					'name'        => $result['name'],
					'manufacturer'        => $result['manufacturer'],
					'quantity'        => $result['quantity'],
					'stock'        => $stock,
					'images'       => $extraImages,
					'isnewest'       => $isNewest,
					'sales'       => $sales,
			        'catch'       => $catch,
			        'popular'     => $popular,
			        'hit'    	  => $hit,
					'buy_btn'	  => $buy_btn,
					'discount'       => $discount,
					'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get('theme_' . $this->config->get('config_theme') . '_product_description_length')) . '..',
					'price'       => $price,
					'special'     => $special,
					'tax'         => $tax,
					'minimum'     => ($result['minimum'] > 0) ? $result['minimum'] : 1,
					'rating'      => $rating,
					'href'        => $href
				);
			}

		echo $this->load->view('product/category_'.$viewFile, $data);
		return ;
	}
	
	public function popupdetail() {
		$this->load->language('product/category');
		
		$this->load->language('extension/theme/lightshop');

		$this->load->model('catalog/category');

		$this->load->model('catalog/product');

		$this->load->model('tool/image');

		$this->load->model('setting/setting');

		$this->load->model('extension/module/lightshop');
		
		$data['review_status'] = $this->config->get('config_review_status');

		$filter_ocfilter = '';
		
		$prodkey = false;

			$data['button_fastorder_sendorder'] = $this->language->get('button_lighshop_sendorder');
			$data['text_lightshop_buy_click'] = $this->language->get('text_lightshop_buy_click');
			
		$data['text_lightshop_popup_link'] = $this->language->get('text_lightshop_popup_link');
		$data['text_lightshop_popup_link_more'] = $this->language->get('text_lightshop_popup_link_more');
		$data['text_lightshop_popup_upload'] = $this->language->get('text_lightshop_popup_upload');
		$data['button_wishlist'] = $this->language->get('button_wishlist');
		$data['button_compare'] = $this->language->get('button_compare');
		$data['button_cart'] = $this->language->get('button_cart');

			$data['buy_click'] = array();
			if($this->config->get('theme_lightshop_buy_click')){
				$data['buy_click'] = $this->config->get('theme_lightshop_buy_click');
			}


		if (isset($this->request->get['filter'])) {
			$filter = $this->request->get['filter'];
		} else {
			$filter = '';
		}

		if (isset($this->request->get['sort'])) {
			$sort = $this->request->get['sort'];
		} else {
			$sort = 'p.sort_order';
		}

		if (isset($this->request->get['order'])) {
			$order = $this->request->get['order'];
		} else {
			$order = 'ASC';
		}

		if (isset($this->request->get['page'])) {
			$page = $this->request->get['page'];
		} else {
			$page = 1;
		}

		if (isset($this->request->get['limit'])) {
			$limit = (int)$this->request->get['limit'];
		} else {
			$limit = $this->config->get('theme_' . $this->config->get('config_theme') . '_product_limit');
		}

		if (isset($this->request->get['min_price'])) {
			$min_price = $this->request->get['min_price'];
		} else {
			$min_price = '';
		}

		if (isset($this->request->get['max_price'])) {
			$max_price = $this->request->get['max_price'];
		} else {
			$max_price = '';
		}
		
			$url = '';

			if (isset($this->request->get['filter'])) {
				$url .= '&filter=' . $this->request->get['filter'];
			}

			if (isset($this->request->get['sort'])) {
				$url .= '&sort=' . $this->request->get['sort'];
			}
			
			if (isset($this->request->get['search'])) {
				$url .= '&search=' . $this->request->get['search'];
			}
			
			if (isset($this->request->get['order'])) {
				$url .= '&order=' . $this->request->get['order'];
			}

			if (isset($this->request->get['limit'])) {
				$url .= '&limit=' . $this->request->get['limit'];
			}
			if (isset($this->request->get['popuptype'])) {
				$url .= '&popuptype=' . $this->request->get['popuptype'];
			}
			if (isset($this->request->get['manufacturer_id'])) {
				$url .= '&manufacturer_id=' . $this->request->get['manufacturer_id'];
			}
			
			
		if (isset($this->request->get['prod_id'])) {
			$product_id = $this->request->get['prod_id'];
		}		
		
		$data['language'] = $this->session->data['language'];

		if (isset($this->request->get['search'])) {
			$search = $this->request->get['search'];
		} else {
			$search = '';
		}
		
		if (isset($this->request->get['popuppath'])) {

			$path = '';

			$parts = explode('_', (string)$this->request->get['popuppath']);

			$category_id = (int)array_pop($parts);

		} else {
			$category_id = 0;
		}
		
		$data['text_select'] = $this->language->get('text_select');		
//search
		if (isset($this->request->get['tag'])) {
			$tag = $this->request->get['tag'];
		} elseif (isset($this->request->get['search'])) {
			$tag = $this->request->get['search'];
		} else {
			$tag = '';
		}

		if (isset($this->request->get['description'])) {
			$description = $this->request->get['description'];
		} else {
			$description = '';
		}
		
		if (isset($this->request->get['popuptype'])) {
			$popuptype = $this->request->get['popuptype'];
		} else {
			$popuptype = 'main';
		}
		if (isset($this->request->get['manufacturer_id'])) {
			$manufacturer_id = (int)$this->request->get['manufacturer_id'];
		} else {
			$manufacturer_id = 0;
		}

		if (isset($this->request->get['sub_category'])) {
			$sub_category = $this->request->get['sub_category']; 
		} else {
			$sub_category = '';
		}
		
		$data['page'] = $page;
//search
			$data['products'] = array();

			$filter_data = array(
				'filter_name'         => $search,
				'filter_tag'          => $tag,
				'filter_description'  => $description,
				'filter_sub_category' => $sub_category,
				'filter_category_id' => $category_id,
				'filter_manufacturer_id' => $manufacturer_id,
				'min_price'    		 => $min_price,
				'max_price'    		 => $max_price,
				'filter_filter'      => $filter,
				'sort'               => $sort,
				'order'              => $order,
				'start'              => ($page - 1) * $limit,
				'limit'              => $limit
			);

//lightshop start
			if($this->config->get('theme_lightshop_subcategory')){
				$filter_data['filter_sub_category'] = true;
			}
//lightshop stop

//			$product_total = $this->model_catalog_product->getTotalProducts($filter_data);

//			$results = $this->model_catalog_product->getProducts($filter_data);

		
		switch ($popuptype) { 
		case 'main':
			$product_total = $this->model_catalog_product->getTotalProducts($filter_data);
			$results = $this->model_catalog_product->getProducts($filter_data);
			break;
		case 'special':
			$product_total = $this->model_catalog_product->getTotalProductSpecials();
			$results = $this->model_catalog_product->getProductSpecials($filter_data);
			break;
		}

			$data['products'] = array();
			$labelsInfo = array();
			if($this->config->get('theme_lightshop_label')){
				$labelsInfo = $this->config->get('theme_lightshop_label');
			}
			$data['labelsinfo'] = $labelsInfo ;
			$data['language_id'] = $this->config->get('config_language_id');
			$newest = array();
			$sales = false;
			if(isset($labelsInfo['new']['period']) && $labelsInfo['new']['status']){
				$newest = $this->model_catalog_product->getNewestProducts($labelsInfo['new']['period']);	
			}
			if(isset($labelsInfo['sale']['status']) && $labelsInfo['sale']['status']){
				$sales = true;				
			}
		    if (isset($labelsInfo['hit']) && $labelsInfo['hit']['status']) {
		       $hits = $this->model_extension_module_lightshop->getHitProducts($labelsInfo['hit']['period'],$labelsInfo['hit']['qty']);
		    }
		    
			foreach ($results as $result) {
				if ($result['image']) {
					$image = $this->config->get('theme_lightshop_image_product_detail_resize') ? $this->model_tool_image->lightshop_resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_detail_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_detail_height')) : $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_detail_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_detail_height'));// lightshop
				} else {
					$image = $this->config->get('theme_lightshop_image_product_detail_resize') ? $this->model_tool_image->lightshop_resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_detail_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_detail_height')) : $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_detail_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_detail_height'));// lightshop
				}
				
				$extraImages = array();				
				$images = $this->model_catalog_product->getProductImages($result['product_id']);
				foreach($images as $imageX){
					$extraImages[] = $this->config->get('theme_lightshop_image_product_detail_resize') ? $this->model_tool_image->lightshop_resize($imageX['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_detail_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_detail_height')) : $this->model_tool_image->resize($imageX['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_detail_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_detail_height'));
				}			

				if ($result['quantity'] <= 0) {
					$stock = $result['stock_status'];
				} elseif ($this->config->get('config_stock_display')) {
					$stock = $result['quantity'];
				} else {
					$stock = $this->language->get('text_instock');
				}				
				if (in_array($result['product_id'], $newest)) {
					$isNewest = true;
				} else {
					$isNewest = false;
				}			
		        $catch = false;
		        if (isset($labelsInfo['catch']) && $labelsInfo['catch']['status'] && $result['quantity'] <= $labelsInfo['catch']['qty']) {
		          if($result['quantity'] > 0){
		            $catch = $labelsInfo['catch']['name'][$this->config->get('config_language_id')];
		          }else{
		            $catch = $labelsInfo['catch']['name1'][$this->config->get('config_language_id')];
		          }
		        }

				$catch = false;
				$nocatch = false;
				if (isset($labelsInfo['catch']) && $labelsInfo['catch']['status'] && $result['quantity'] <= $labelsInfo['catch']['qty']) {
					if($result['quantity'] > 0){
						$catch = $labelsInfo['catch']['name'][$this->config->get('config_language_id')];
					}else{
						$catch = $labelsInfo['catch']['name1'][$this->config->get('config_language_id')];
						$nocatch = true;
					}
				}

		        $popular = false;
		        if (isset($labelsInfo['popular']) && $labelsInfo['popular']['status'] && $result['viewed'] >= $labelsInfo['popular']['views']) {
		          $popular = $labelsInfo['popular']['name'][$this->config->get('config_language_id')];
		        }

		        $hit = false;
		        if (isset($labelsInfo['hit']) && $labelsInfo['hit']['status']) {
		          if (isset($hits[$result['product_id']])) {
		            $hit = $labelsInfo['hit']['name'][$this->config->get('config_language_id')];
		          }
		        }			


				if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
					$price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$price = false;
				}

				if ((float)$result['special']) {
					$special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$special = false;
				}

				if ($this->config->get('config_tax')) {
					$tax = $this->currency->format((float)$result['special'] ? $result['special'] : $result['price'], $this->session->data['currency']);
				} else {
					$tax = false;
				}

				if ($this->config->get('config_review_status')) {
					$rating = (int)$result['rating'];
				} else {
					$rating = false;
				}

				$href = $this->url->link('product/product', 'product_id=' . $result['product_id'] );
					
				if ($result['quantity'] <= 0 && !$this->config->get('config_stock_checkout')) {
					$buy_btn = $result['stock_status'];
				} else {
					$buy_btn = '';
				}

				$discount = '';
				if($sales && $special){
					if($labelsInfo['sale']['extra'] == 1){
						$discount = round((($result['price'] - $result['special'])/$result['price'])*100);
						$discount = $discount. ' %';
					}
					if($labelsInfo['sale']['extra'] == 2){
						$discount = $this->currency->format($this->tax->calculate(($result['price'] - $result['special']), $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
					}					
				}	

				$customTabs = $this->model_extension_module_lightshop->getFields4Product($result['product_id']);
				
				$options = array();

				foreach ($this->model_catalog_product->getProductOptions($result['product_id']) as $option) {
					$product_option_value_data = array();

					foreach ($option['product_option_value'] as $option_value) {
						if (!$option_value['subtract'] || ($option_value['quantity'] > 0)) {
							if ((($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) && (float)$option_value['price']) {
								$priceOp = $this->currency->format($this->tax->calculate($option_value['price'], $result['tax_class_id'], $this->config->get('config_tax') ? 'P' : false), $this->session->data['currency']);
							} else {
								$priceOp = false;
							}

							$product_option_value_data[] = array(
								'product_option_value_id' => $option_value['product_option_value_id'],
								'option_value_id'         => $option_value['option_value_id'],
								'name'                    => $option_value['name'],
								'image'                   => $option_value['image'] ? $this->model_tool_image->resize($option_value['image'], 50, 50) : '',
								'price'                   => $priceOp,
								'price_prefix'            => $option_value['price_prefix']
							);
						}
					}

					$options[] = array(
						'product_option_id'    => $option['product_option_id'],
						'product_option_value' => $product_option_value_data,
						'option_id'            => $option['option_id'],
						'name'                 => $option['name'],
						'type'                 => $option['type'],
						'value'                => $option['value'],
						'required'             => $option['required']
					);
				}		
			
				$data['products'][] = array(
					'product_id'  => $result['product_id'],
					'thumb'       => $image,
					'name'        => $result['name'],
					'manufacturer'        => $result['manufacturer'],
					'quantity'        => $result['quantity'],
					'stock'        => $stock,
					'images'       => $extraImages,
					'isnewest'       => $isNewest,
					'options'       => $options,
					'sales'       => $sales,
			        'catch'      	=> $catch,
			        'nocatch'       => $nocatch,
			        'popular'   	=> $popular,
			        'hit'     		=> $hit,
			        'buy_btn'   	=> $buy_btn,
					'discount'    => $discount,
					'customTabs'    => $customTabs,
					'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get('theme_' . $this->config->get('config_theme') . '_product_description_length')) . '..',
					'price'       => $price,
					'special'     => $special,
					'tax'         => $tax,
					'minimum'     => ($result['minimum'] > 0) ? $result['minimum'] : 1,
					'rating'      => $rating,
					'href'        => $href
				);
				if(isset($product_id) && $result['product_id'] == $product_id){
					$prodkey = count($data['products'])-1;
				}
			}
		if(isset($prodkey) && ($prodkey >= count($data['products'])-3)){			
			$data['isLast'] = 1;
		}	

		if(!isset($product_id)){
			$prodkey = 0;
			$product_id  = current(reset($data['products']));
		}	
		$data['prodkey'] = $prodkey;		
		$data['minVisKey'] = $prodkey - 3;	

		if($page > 1){
			$data['prevLink'] = HTTP_SERVER . '?' .$url . '&page=' . ($page-1);
		}		

		if($page < ceil($product_total/$limit)){
			$data['nextLink'] = HTTP_SERVER . '?' .$url . '&page=' . ($page+1);
		}		
		
				
		$data['product_id'] = $product_id;
		
		$data['popup_link'] = $this->url->link('product/product', 'product_id=' . $product_id);
		
			$pagination = new Pagination();
			$pagination->total = $product_total;
			$pagination->page = $page;
			$pagination->limit = $limit;
			$pagination->url = HTTPS_SERVER . '?' .$url . '&page={page}';

			$data['pagination'] = $pagination->render();

		$this->response->setOutput($this->load->view('product/category_popup', $data));
			


	}	

	public function totalproducts() {
		$this->load->language('extension/theme/lightshop');
		$this->load->model('catalog/product');
		$json = array();


		if (isset($this->request->get['filter'])) {
			$filter = $this->request->get['filter'];
		} else {
			$filter = '';
		}

		if (isset($this->request->get['min_price'])) {
			$min_price = $this->request->get['min_price'];
		} else {
			$min_price = '';
		}

		if (isset($this->request->get['max_price'])) {
			$max_price = $this->request->get['max_price'];
		} else {
			$max_price = '';
		}

		if (isset($this->request->get['filter_category_id'])) {
			$category_id = (int)$this->request->get['filter_category_id'];
		} else {
			$category_id = 0;
		}

			$filter_data = array(
				'filter_category_id' => $category_id,
				'filter_sub_category' => $this->config->get('theme_lightshop_subcategory'),//lightshop
				'min_price'    		 => $min_price,
				'max_price'    		 => $max_price,
				'filter_filter'      => $filter,
				'limit'     		 => '10000'
			);
			
//lightshop start
			if($this->config->get('theme_lightshop_subcategory')){
				$filter_data['filter_sub_category'] = true;
			}
//lightshop stop

		$json['total'] = $this->model_catalog_product->getTotalProducts($filter_data);
		$json['text_show'] = $this->language->get('text_lightshop_show');
		$json['text_products'] = $this->language->get('text_lightshop_products');
		$json['id'] = rand();

		$this->response->addHeader('Content-Type: application/json');
		$this->response->setOutput(json_encode($json));
	}

// lightshop end
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/product/compare.php">
        <operation>
            <search><![CDATA[
		$data['review_status'] = $this->config->get('config_review_status');
            ]]></search>
            <add position="after"><![CDATA[
		// lightshop
		$data['compare_total'] = count($this->session->data['compare']);
		$this->load->language('extension/theme/lightshop');
		$data['text_prev2'] = $this->language->get('text_prev2');
		$data['text_next2'] = $this->language->get('text_next2');
		// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
					$image = $this->model_tool_image->resize($product_info['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_compare_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_compare_height'));
            ]]></search>
            <add position="replace"><![CDATA[
					$image = $this->config->get('theme_lightshop_image_compare_resize') ? $this->model_tool_image->lightshop_resize($product_info['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_compare_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_compare_height')) : $this->model_tool_image->resize($product_info['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_compare_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_compare_height')); // lightshop	
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
				$data['products'][$product_id] = array(
            ]]></search>
            <add position="before"><![CDATA[
				// lightshop
				if ($product_info['quantity'] <= 0 && !$this->config->get('config_stock_checkout')) {
					$buy_btn = $product_info['stock_status'];
				} else {
					$buy_btn = '';
				}
				// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
					'availability' => $availability,
            ]]></search>
            <add position="after"><![CDATA[
					'buy_btn'	   => $buy_btn,// lightshop
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/product/manufacturer.php">
        <operation>
            <search><![CDATA[
			$data['categories'][$key]['manufacturer'][] = array(
            ]]></search>
            <add position="before"><![CDATA[
// lightshop
			if ($this->config->get('theme_lightshop_image_manufacturer_resize')) {
				if ($result['image']) {
					$image = $this->model_tool_image->lightshop_resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_manufacturer_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_manufacturer_height'));
				} else {
					$image = $this->model_tool_image->lightshop_resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_manufacturer_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_manufacturer_height'));
				}
			} else {
				if ($result['image']) {
					$image = $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_manufacturer_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_manufacturer_height'));
				} else {
					$image = $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_manufacturer_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_manufacturer_height'));
				}
			}
// lightshop end							
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
				'text' => $manufacturer_info['name'],
            ]]></search>
            <add position="before"  offset="1"><![CDATA[
			$data['url'] = $url;// <-- lightshop		
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		$manufacturer_info = $this->model_catalog_manufacturer->getManufacturer($manufacturer_id);
            ]]></search>
            <add position="before"  offset="1"><![CDATA[
		$data['language_id'] = $this->config->get('config_language_id'); //lightshop added this		
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
'name' => $result['name'],
            ]]></search>
            <add position="after"><![CDATA[
				'thumb'       => $image,// lightshop			
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$data['compare'] = $this->url->link('product/compare');
            ]]></search>
            <add position="after"><![CDATA[
			// lightshop
			$this->load->language('extension/theme/lightshop');
			$data['schema'] = $this->config->get('theme_lightshop_schema');
			$data['product_detail'] = $this->config->get('theme_lightshop_product_detail');
			$data['category_background'] = $this->config->get('theme_lightshop_category_background');
			$data['category_sorts'] = $this->config->get('theme_lightshop_category_sorts');
			$data['category_limits'] = $this->config->get('theme_lightshop_category_limits');
			$data['catalog_type'] = $this->config->get('theme_lightshop_catalog_type');
			
			$data['button_fastorder_sendorder'] = $this->language->get('button_lighshop_sendorder');
			$data['text_fastorder_name'] = $this->language->get('text_lighshop_name');
			$data['text_fastorder_phone'] = $this->language->get('text_lighshop_phone');
			$data['text_fastorder_comment'] = $this->language->get('text_lighshop_comment');
			$data['text_lightshop_buy_click'] = $this->language->get('text_lightshop_buy_click');
			$data['text_product_view_btn'] = $this->language->get('text_product_view_btn');
			
			$data['pс_view'] = $this->config->get('theme_lightshop_pс_view');
			$data['mobile_view'] = $this->config->get('theme_lightshop_mobile_view');
			if ($this->config->get('theme_lightshop_buy_click_pdata')) {
				$this->load->language('extension/theme/lightshop');
				$this->load->model('catalog/information');

				$information_info = $this->model_catalog_information->getInformation($this->config->get('theme_lightshop_buy_click_pdata'));

				if ($information_info) {
					$data['text_lightshop_pdata'] = sprintf($this->language->get('text_lightshop_pdata'), $this->language->get('button_lighshop_sendorder'), $this->url->link('information/information/agree', 'information_id=' . $this->config->get('theme_lightshop_buy_click_pdata'), true), $information_info['title'], $information_info['title']);
				} else {
					$data['text_lightshop_pdata'] = '';
				}
			} else {
				$data['text_lightshop_pdata'] = '';
			}
			
			$data['buy_click'] = array();
			if($this->config->get('theme_lightshop_buy_click')){
				$data['buy_click'] = $this->config->get('theme_lightshop_buy_click');
				if ($this->customer->isLogged()) {
					$this->load->model('account/customer');
					$data['customer_info'] = $this->model_account_customer->getCustomer($this->customer->getId());
				}
			}			

			$this->load->language('checkout/checkout');
			$data['entry_firstname'] = $this->language->get('entry_firstname');
			$data['entry_lastname'] = $this->language->get('entry_lastname');
			$data['entry_email'] = $this->language->get('entry_email');
			$data['entry_telephone'] = $this->language->get('entry_telephone');
			$data['entry_comment'] = $this->language->get('entry_comment');
			
			$data['manufacturer_id'] = $manufacturer_id;			
			// lightshop end
         ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$results = $this->model_catalog_product->getProducts($filter_data);
            ]]></search>
            <add position="after"><![CDATA[
			// lightshop
			$this->load->model('extension/module/lightshop');
			$labelsInfo = array();
			if($this->config->get('theme_lightshop_label')){
				$labelsInfo = $this->config->get('theme_lightshop_label');
			}
			$data['labelsinfo'] = $labelsInfo ;
			$data['language_id'] = $this->config->get('config_language_id');
			$isDateTime = false;
			$newest = array();
			$sales = false;
			if(isset($labelsInfo['new']['period']) && $labelsInfo['new']['status']){
				$newest = $this->model_catalog_product->getNewestProducts($labelsInfo['new']['period']);	
			}
			if(isset($labelsInfo['sale']['status']) && $labelsInfo['sale']['status']){
				$sales = true;				
			}
		    if (isset($labelsInfo['hit']) && $labelsInfo['hit']['status']) {
		       $hits = $this->model_extension_module_lightshop->getHitProducts($labelsInfo['hit']['period'],$labelsInfo['hit']['qty']);
		    }
			$data['lazyload'] = $this->config->get('theme_lightshop_lazyload');
			// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
					$image = $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));
            ]]></search>
            <add position="replace"><![CDATA[
					$image = $this->config->get('theme_lightshop_image_product_resize') ? $this->model_tool_image->lightshop_resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height')) : $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));// lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
					$image = $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));
            ]]></search>
            <add position="replace"><![CDATA[
					$image = $this->config->get('theme_lightshop_image_product_resize') ? $this->model_tool_image->lightshop_resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height')) : $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));// lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
				$data['products'][] = array(
            ]]></search>
            <add position="before"><![CDATA[
				// lightshop
				$extraImages = array();				
				$images = $this->model_catalog_product->getProductImages($result['product_id']);
				foreach($images as $imageX){
					$extraImages[] = $this->config->get('theme_lightshop_image_product_resize') ? $this->model_tool_image->lightshop_resize($imageX['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height')) : $this->model_tool_image->resize($imageX['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));
				}
				
				if (in_array($result['product_id'], $newest)) {
					$isNewest = true;
				} else {
					$isNewest = false;
				}			
								
				if ($result['quantity'] <= 0) {
					$stock = $result['stock_status'];
				} elseif ($this->config->get('config_stock_display')) {
					$stock = $result['quantity'];
				} else {
					$stock = $this->language->get('text_instock');
				}	
				
				if ($result['quantity'] <= 0 && !$this->config->get('config_stock_checkout')) {
					$buy_btn = $result['stock_status'];
				} else {
					$buy_btn = '';
				}
				
				$discount = '';
				if($sales && $special){
					if($labelsInfo['sale']['extra'] == 1){
						$discount = round((($result['price'] - $result['special'])/$result['price'])*100);
						$discount = $discount. ' %';
					}
					if($labelsInfo['sale']['extra'] == 2){
						$discount = $this->currency->format($this->tax->calculate(($result['price'] - $result['special']), $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
					}					
				}
				$catch = false;
				$nocatch = false;
				if (isset($labelsInfo['catch']) && $labelsInfo['catch']['status'] && $result['quantity'] <= $labelsInfo['catch']['qty']) {
					if($result['quantity'] > 0){
						$catch = $labelsInfo['catch']['name'][$this->config->get('config_language_id')];
					}else{
						$catch = $labelsInfo['catch']['name1'][$this->config->get('config_language_id')];
						$nocatch = true;
					}
				}

				$popular = false;
				if (isset($labelsInfo['popular']) && $labelsInfo['popular']['status'] && $result['viewed'] >= $labelsInfo['popular']['views']) {
					$popular = $labelsInfo['popular']['name'][$this->config->get('config_language_id')];
				}

				$hit = false;
				if (isset($labelsInfo['hit']) && $labelsInfo['hit']['status']) {
					if (isset($hits[$result['product_id']])) {
						$hit = $labelsInfo['hit']['name'][$this->config->get('config_language_id')];
					}
				}

				$options = array();

				foreach ($this->model_catalog_product->getProductOptions($result['product_id']) as $option) {
					$product_option_value_data = array();

					foreach ($option['product_option_value'] as $option_value) {
						if (!$option_value['subtract'] || ($option_value['quantity'] > 0)) {
							if ((($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) && (float)$option_value['price']) {
								$priceOp = $this->currency->format($this->tax->calculate($option_value['price'], $result['tax_class_id'], $this->config->get('config_tax') ? 'P' : false), $this->session->data['currency']);
							} else {
								$priceOp = false;
							}

							$product_option_value_data[] = array(
								'product_option_value_id' => $option_value['product_option_value_id'],
								'option_value_id'         => $option_value['option_value_id'],
								'name'                    => $option_value['name'],
								'image'                   => $option_value['image'] ? $this->model_tool_image->resize($option_value['image'], 50, 50) : '',
								'price'                   => $priceOp,
								'price_prefix'            => $option_value['price_prefix']
							);
						}
					}

					if ($option['type'] == 'date' || $option['type'] == 'datetime' || $option['type'] == 'time') {
						$isDateTime = true;
					}
					
					$options[] = array(
						'product_option_id'    => $option['product_option_id'],
						'product_option_value' => $product_option_value_data,
						'option_id'            => $option['option_id'],
						'name'                 => $option['name'],
						'type'                 => $option['type'],
						'value'                => $option['value'],
						'required'             => $option['required']
					);
				}									
				// lightshop end
          ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
					'name'        => $result['name'],
            ]]></search>
            <add position="after"><![CDATA[
					'manufacturer'        => $result['manufacturer'],// lightshop
					'quantity'        => $result['quantity'],// lightshop
					'stock'        => $stock,// lightshop
					'images'       => $extraImages,// lightshop	
					'isnewest'       => $isNewest,// lightshop
					'sales'       => $sales,// lightshop
					'discount'       => $discount,// lightshop
					'popular'	  => $popular,// lightshop
					'hit'	 	  => $hit,// lightshop
					'buy_btn'	  => $buy_btn,// lightshop
					'catch'       => $catch,// lightshop
					'nocatch'       => $nocatch,// lightshop
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
'rating'      => $result['rating'],
            ]]></search>
            <add position="after" offset="4"><![CDATA[
			// lightshop
			if ($isDateTime) {
				$this->document->addScript('catalog/view/javascript/jquery/datetimepicker/moment/moment.min.js');
				$this->document->addScript('catalog/view/javascript/jquery/datetimepicker/moment/moment-with-locales.min.js');
				$this->document->addScript('catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.js');
				$this->document->addStyle('catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.css');				
			}
			// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search index="1"><![CDATA[
			$data['continue'] = $this->url->link('common/home');
            ]]></search>
            <add position="after" ><![CDATA[
// lightshop		
			if ($this->config->get($this->config->get('theme_lightshop_config_captcha_fo') . '_status')) {
				$data['captcha_fo'] = $this->load->controller('extension/captcha/' . $this->config->get('theme_lightshop_config_captcha_fo'));
			} else {
				$data['captcha_fo'] = '';
			}

		if (isset($this->request->get['view'])) {
			$view = $this->request->get['view'];
			$viewM = $this->request->get['view'];
		}elseif(isset($this->session->data['view'])){
			$view = $this->session->data['view'];
			$viewM = $this->session->data['view'];
		} else {
			$view = $this->config->get('theme_lightshop_pс_view');
			$viewM = $this->config->get('theme_lightshop_mobile_view');
		}
			if (isset($_COOKIE["ismobile"]) && $_COOKIE["ismobile"] == 1){ 
				$this->session->data['view'] = $viewM;
			}else{
				$this->session->data['view'] = $view;
			}
		$data['viewLayer'] = $view;
		$data['viewLayerM'] = $viewM;
		$viewSub = '';
		$data['viewSub'] = '';		


				if(strpos($this->session->data['view'],'main') === false){	
					$data['view'] = $this->session->data['view'];

				}else{
					$data['view'] = $this->session->data['view'];

					$viewSub = explode('-',$data['view']);
					if(isset($viewSub[1])){
						$viewSub = $viewSub[1];
						$data['viewSub'] = 'catalogue__products-list--'.$viewSub;
						$data['viewLayerM'] = 'main';
					}else{
						$data['viewSub'] = '';						
					}
					$data['view'] = 'main';

				}			
		$data['buyclick_form'] = $this->load->view('product/buyclick_form', $data);		

		if (isset($this->request->get['view'])) {
			
			$this->response->setOutput($this->load->view('product/category_'.$data['view'], $data));
			return ;
		}

		$data['productsview'] = $this->load->view('product/category_'.$data['view'], $data);
// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$this->response->setOutput($this->load->view('error/not_found', $data));
            ]]></search>
            <add position="replace"><![CDATA[
// lightshop
		$data['url'] = $url;
		$this->load->language('extension/theme/lightshop');
		if (is_file(DIR_IMAGE . $this->config->get('theme_lightshop_logo_404'))) {
			$data['logo_404'] = HTTP_SERVER . 'image/' . $this->config->get('theme_lightshop_logo_404');
		} else {
			$data['logo_404'] = '';
		}
		$data['text_404'] = sprintf($this->language->get('text_404'), $this->url->link('information/contact', '', true), $this->url->link('product/search', '', true), $this->url->link('common/home', '', true));
		$this->response->setOutput($this->load->view('error/404', $data));
// lightshop end	
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/product/product.php">
        <operation>
            <search><![CDATA[
		$this->load->model('catalog/category');
            ]]></search>
            <add position="before"><![CDATA[
		// lightshop
		$this->load->language('extension/theme/lightshop');
		$data['text_lightshop_points'] = $this->language->get('text_lightshop_points');
		$data['schema'] = $this->config->get('theme_lightshop_schema');
		$data['soc_share_code'] = html_entity_decode($this->config->get('theme_lightshop_soc_share_code'), ENT_QUOTES, 'UTF-8');
		$data['soc_share_prod'] = $this->config->get('theme_lightshop_soc_share_prod');
		$data['optMode'] = $this->config->get('theme_lightshop_product_opt_select');
				$this->load->model('extension/module/lightshop');
		$data['lazyload'] = $this->config->get('theme_lightshop_lazyload');
		// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$category_id = (int)array_pop($parts);
            ]]></search>
            <add position="after"><![CDATA[
			$id = 0;
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
						'text' => $category_info['name'],
            ]]></search>
            <add position="after"><![CDATA[
						'breadList' => $this->breadList($id),// lightshop
						'cat_id' => $id,// lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
						'href' => $this->url->link('product/category', 'path=' . $path)
            ]]></search>
            <add position="after" offset="2"><![CDATA[
				$id = $path_id;
            ]]></add>
        </operation>
        <operation>
            <search index="1"><![CDATA[
					'text' => $category_info['name'],
            ]]></search>
            <add position="after"><![CDATA[
					'breadList' => $this->breadList($id),// lightshop
					'cat_id' => $id,// lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$this->document->addScript('catalog/view/javascript/jquery/magnific/jquery.magnific-popup.min.js');
            ]]></search>
            <add position="before"><![CDATA[
			// lightshop
			if ($this->config->get('config_theme') != 'lightshop') {
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$this->document->addStyle('catalog/view/javascript/jquery/magnific/magnific-popup.css');
            ]]></search>
            <add position="after"><![CDATA[
			}
			$data['href'] = $this->url->link('product/product', $url . '&product_id=' . $this->request->get['product_id']);
			// lightshop end
            ]]></add>
        </operation>
        <operation error="skip">
            <search><![CDATA[
$data['model'] = $product_info['model'];
            ]]></search>
            <add position="after"><![CDATA[
			// lightshop
			$data['lightshop_mpn'] = $product_info['mpn'];
			// lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$this->load->model('tool/image');
            ]]></search>
            <add position="after"><![CDATA[
// lightshop
			$data['currency'] = 'RUB';
			if (isset($this->session->data['currency'])) {
				$data['currency'] = $this->session->data['currency'];
			}
			
			$this->load->language('checkout/checkout');
			$data['entry_firstname'] = $this->language->get('entry_firstname');
			$data['entry_lastname'] = $this->language->get('entry_lastname');
			$data['entry_email'] = $this->language->get('entry_email');
			$data['entry_telephone'] = $this->language->get('entry_telephone');
			$data['entry_comment'] = $this->language->get('entry_comment');
			$this->load->language('extension/theme/lightshop');
			$this->load->model('catalog/information');
			if ($this->config->get('theme_lightshop_buy_click_pdata')) {
				$click_pdata = $this->model_catalog_information->getInformation($this->config->get('theme_lightshop_buy_click_pdata'));
				if ($click_pdata) {
					$data['text_click_pdata'] = sprintf($this->language->get('text_lightshop_pdata'), $this->language->get('button_lighshop_sendorder'), $this->url->link('information/information/agree', 'information_id=' . $this->config->get('theme_lightshop_buy_click_pdata'), true), $click_pdata['title'], $click_pdata['title']);
				} else {
					$data['text_click_pdata'] = '';
				}
			} else {
				$data['text_click_pdata'] = '';
			}
			if ($this->config->get('theme_lightshop_review_pdata')) {	
				$review_pdata = $this->model_catalog_information->getInformation($this->config->get('theme_lightshop_review_pdata'));
				if ($review_pdata) {
					$data['text_review_pdata'] = sprintf($this->language->get('text_lightshop_pdata'), $this->language->get('button_continue'), $this->url->link('information/information/agree', 'information_id=' . $this->config->get('theme_lightshop_review_pdata'), true), $review_pdata['title'], $review_pdata['title']);
				} else {
					$data['text_review_pdata'] = '';
				}
			} else {
				$data['text_review_pdata'] = '';
			}

			$data['button_fastorder_sendorder'] = $this->language->get('button_lighshop_sendorder');

			$data['text_lightshop_products_text_more'] = $this->language->get('text_lightshop_products_text_more');
			$data['text_lightshop_products_review'] = $this->language->get('text_lightshop_products_review');
			
			$tempDesc = $this->descriptionExtra($data['description']);
			$data['description'] = $tempDesc['fulldesc'];	
			if (!$this->config->get('theme_lightshop_product_short_descr')) {
				$data['description'] = html_entity_decode($product_info['description'], ENT_QUOTES, 'UTF-8');
			}
			$data['short_descr'] = $this->config->get('theme_lightshop_product_short_descr');
			$data['zoom'] = $this->config->get('theme_lightshop_product_zoom');
			$data['p_related_view'] = $this->config->get('theme_lightshop_p_related_view');
			$data['shortdescription'] = $tempDesc['shortdesc'];			
			$data['typeOptAtt'] = $this->config->get('theme_lightshop_product_att_select');
			$data['typeOptSelect'] = $this->config->get('theme_lightshop_product_opt_select');
			$data['typeOptCheckImg'] = $this->config->get('theme_lightshop_product_opt_checkbox_img');
			$data['typeOptRadioImg'] = $this->config->get('theme_lightshop_product_opt_radio_img');
			
			if ($product_info['quantity'] <= 0 && !$this->config->get('config_stock_checkout')) {
				$data['buy_btn'] = $product_info['stock_status'];
			} else {
				$data['buy_btn'] = '';
			}

			if ($this->config->get('theme_lightshop_image_popup_resize')) {
				if ($product_info['image']) {
					$data['popup'] = $this->model_tool_image->lightshop_resize($product_info['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_popup_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_popup_height'));
				} else {
					$data['popup'] = $this->model_tool_image->lightshop_resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_popup_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_popup_height'));
				}
			} else {
            ]]></add>
        </operation>
        <operation error="skip">
            <search><![CDATA[
								$data['popup'] = '';
            ]]></search>
            <add position="replace"><![CDATA[
					$data['popup'] = $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_popup_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_popup_height'));
            ]]></add>
        </operation>
        <operation>
            <search index="2"><![CDATA[
				if ($product_info['image']) {
            ]]></search>
            <add position="before"><![CDATA[
			}
			if ($this->config->get('theme_lightshop_image_thumb_resize')) {
				if ($product_info['image']) {
					$data['thumb'] = $this->model_tool_image->lightshop_resize($product_info['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_thumb_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_thumb_height'));
					if ($this->config->get('theme_lightshop_og')) { //Lightshop added this
						$this->document->setOgImage($data['thumb']);
					} //Lightshop added this
				} else {
					$data['thumb'] = $this->model_tool_image->lightshop_resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_thumb_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_thumb_height'));;
				}
			} else {
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
				$data['thumb'] = '';
            ]]></search>
            <add position="replace"><![CDATA[
					$data['thumb'] = $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_thumb_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_thumb_height'));
					if ($this->config->get('theme_lightshop_og')) { //Lightshop added this
						$this->document->setOgImage($data['thumb']);
					} //Lightshop added this
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$data['images'] = array();
            ]]></search>
            <add position="before"><![CDATA[
			}
			if ($this->config->get('theme_lightshop_image_additional_resize')) {
				if ($product_info['image']) {
					$data['additional'] = $this->model_tool_image->lightshop_resize($product_info['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_additional_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_additional_height'));
					if ($this->config->get('theme_lightshop_og')) { //Lightshop added this
						$this->document->setOgImage($data['thumb']);
					} //Lightshop added this
				} else {
					$data['additional'] = $this->model_tool_image->lightshop_resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_additional_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_additional_height'));;
				}
			} else {
				if ($product_info['image']) {
					$data['additional'] = $this->model_tool_image->resize($product_info['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_additional_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_additional_height'));
					if ($this->config->get('theme_lightshop_og')) { //Lightshop added this
						$this->document->setOgImage($data['thumb']);
					} //Lightshop added this
				} else {
					$data['additional'] = $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_additional_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_additional_height'));
					if ($this->config->get('theme_lightshop_og')) { //Lightshop added this
						$this->document->setOgImage($data['thumb']);
					} //Lightshop added this
				}				
			}
			
			$data['customTabs'] = $this->model_extension_module_lightshop->getFields4Product($this->request->get['product_id']);

// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
					'popup' => $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_popup_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_popup_height')),
            ]]></search>
            <add position="replace"><![CDATA[
					'popup' =>  $this->config->get('theme_lightshop_image_popup_resize') ? $this->model_tool_image->lightshop_resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_popup_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_popup_height')) : $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_popup_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_popup_height')),
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
					'thumb' => $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_additional_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_additional_height'))
            ]]></search>
            <add position="replace"><![CDATA[
					'thumb' => $this->config->get('theme_lightshop_image_additional_resize') ? $this->model_tool_image->lightshop_resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_thumb_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_thumb_height')) : $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_thumb_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_thumb_height')),
					'additional' => $this->config->get('theme_lightshop_image_additional_resize') ? $this->model_tool_image->lightshop_resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_additional_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_additional_height')) : $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_additional_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_additional_height'))
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
				$data['price'] = $this->currency->format
            ]]></search>
            <add position="after"><![CDATA[
				$data['price_schema'] = number_format($this->tax->calculate($product_info['price'], $product_info['tax_class_id'], $this->config->get('config_tax')), 0, '', '');// lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
				$data['price'] = false;
            ]]></search>
            <add position="after"><![CDATA[
				$data['price_schema'] = false;// lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
				$data['special'] = $this->currency->format
            ]]></search>
            <add position="after"><![CDATA[
				$data['special_schema'] = number_format($this->tax->calculate($product_info['special'], $product_info['tax_class_id'], $this->config->get('config_tax')), 0, '', '');// lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
				$data['special'] = false;
            ]]></search>
            <add position="after"><![CDATA[
				$data['special_schema'] = false;
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
					'quantity' => $discount['quantity'],
            ]]></search>
            <add position="after"><![CDATA[
					'date_end' => $discount['date_end'],// lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
						$product_option_value_data[] = array(
            ]]></search>
            <add position="before"><![CDATA[
// lightshop start
						if ($option_value['image']) {
							$optImage = $this->model_tool_image->resize($option_value['image'], 50, 50);
						}else{
							$optImage = '';
						}
// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
							'image'                   => $this->model_tool_image->resize($option_value['image'], 50, 50),
            ]]></search>
            <add position="replace"><![CDATA[
							'image'                   => $optImage,// lightshop changed this
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$data['review_status'] = $this->config->get('config_review_status');
            ]]></search>
            <add position="before"><![CDATA[
			// lightshop
			$data['quantity'] = $product_info['quantity'];
			$data['special_date_end'] = $data['discount_date_end'] = date('Y-m-d', strtotime('+1 year'));

			if ($product_info['discount_date_end'] && $product_info['discount_date_end'] != '0000-00-00' ) {
				$data['discount_date_end'] = $product_info['discount_date_end'];
			}
			if ($data['special']) {	
				$action = $this->model_catalog_product->getProductActions($this->request->get['product_id']);
				if ($action['date_end'] != '0000-00-00') {
					$data['special_date_end'] = $action['date_end'];
				}		
			}
			$data['reviews_num'] = (int)$product_info['reviews'];
			// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$data['products'] = array();
            ]]></search>
            <add position="before"><![CDATA[
			// lightshop

			
			if ($this->config->get($this->config->get('theme_lightshop_config_captcha_fo') . '_status')) {
				$data['captcha_fo'] = $this->load->controller('extension/captcha/' . $this->config->get('theme_lightshop_config_captcha_fo'));
			} else {
				$data['captcha_fo'] = '';
			}

			$labelsInfo = array();
			if($this->config->get('theme_lightshop_label')){
				$labelsInfo = $this->config->get('theme_lightshop_label');
			}
			$data['labelsinfo'] = $labelsInfo ;
			$data['language_id'] = $this->config->get('config_language_id');
			$newest = array();
			$sales = false;
			if(isset($labelsInfo['new']['period']) && $labelsInfo['new']['status']){
				$newest = $this->model_catalog_product->getNewestProducts($labelsInfo['new']['period']);				
			}
			if(isset($labelsInfo['sale']['status']) && $labelsInfo['sale']['status']){
				$sales = true;				
			}
			$data['sales'] = $sales;
		    if (isset($labelsInfo['hit']) && $labelsInfo['hit']['status']) {
		       $hits = $this->model_extension_module_lightshop->getHitProducts($labelsInfo['hit']['period'],$labelsInfo['hit']['qty']);
		    }
				if (in_array($product_id, $newest)) {
					$data['isnewest'] = true;
				} else {
					$data['isnewest'] = false;
				}			

				$data['discount'] = '';
				if($sales && $data['special']){
					if($labelsInfo['sale']['extra'] == 1){
						$discount = round((($product_info['price'] - $product_info['special'])/$product_info['price'])*100);
						$data['discount'] = $discount. ' %';
					}
					if($labelsInfo['sale']['extra'] == 2){
						$data['discount'] = $this->currency->format($this->tax->calculate(($product_info['price'] - $product_info['special']), $product_info['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
					}					
				}		
		        $data['catch'] = false;
		        $data['nocatch'] = false;
		        if (isset($labelsInfo['catch']) && $labelsInfo['catch']['status'] && $product_info['quantity'] <= $labelsInfo['catch']['qty']) {
		          if($product_info['quantity'] > 0){
		            $data['catch'] = $labelsInfo['catch']['name'][$this->config->get('config_language_id')];
		          }else{
		            $data['catch'] = $labelsInfo['catch']['name1'][$this->config->get('config_language_id')];
		            $data['nocatch'] = true;
		          }
		        }

		        $data['popular'] = false;
		        if (isset($labelsInfo['popular']) && $labelsInfo['popular']['status'] && $product_info['viewed'] >= $labelsInfo['popular']['views']) {
		          $data['popular'] = $labelsInfo['popular']['name'][$this->config->get('config_language_id')];
		        }

		        $data['hit'] = false;
		        if (isset($labelsInfo['hit']) && $labelsInfo['hit']['status']) {
		          if (isset($hits[$product_id])) {
		            $data['hit'] = $labelsInfo['hit']['name'][$this->config->get('config_language_id')];
		          }
		        }

			$data['buy_click'] = array();
			if($this->config->get('theme_lightshop_buy_click')){
				$data['buy_click'] = $this->config->get('theme_lightshop_buy_click');

				if ($this->customer->isLogged()) {
					$this->load->model('account/customer');
					$data['customer_info'] = $this->model_account_customer->getCustomer($this->customer->getId());
				}
			}

			$data['text_lightshop_buy_click'] = $this->language->get('text_lightshop_buy_click');			
				
			// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
					if ($result['image']) {
            ]]></search>
            <add position="before"><![CDATA[
				// lightshop
				if ($this->config->get('theme_lightshop_image_related_resize')) {
            ]]></add>
        </operation>
        <operation>
            <search index="0"><![CDATA[
					if ($result['image']) {
            ]]></search>
            <add position="after"><![CDATA[
						$image = $this->model_tool_image->lightshop_resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_related_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_related_height'));
					} else {
						$image = $this->model_tool_image->lightshop_resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_related_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_related_height'));
					}
				} else {
					if ($result['image']) {
            ]]></add>
        </operation>
        <operation>
            <search index="1"><![CDATA[
				if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
            ]]></search>
            <add position="before"><![CDATA[
				}
				// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
				$data['products'][] = array(
            ]]></search>
            <add position="before"><![CDATA[
// lightshop
					if (in_array($result['product_id'], $newest)) {
						$isNewest = true;
					} else {
						$isNewest = false;
					}

			        $catch = false;
			        $nocatch = false;
			        if (isset($labelsInfo['catch']) && $labelsInfo['catch']['status'] && $result['quantity'] <= $labelsInfo['catch']['qty']) {
			          if($result['quantity'] > 0){
			            $catch = $labelsInfo['catch']['name'][$this->config->get('config_language_id')];
			          }else{
			            $catch = $labelsInfo['catch']['name1'][$this->config->get('config_language_id')];
			            $nocatch = true;
			          }
			        }

			        $popular = false;


			        $hit = false;
			        if (isset($labelsInfo['hit']) && $labelsInfo['hit']['status']) {
			          if (isset($hits[$result['product_id']])) {
			            $hit = $labelsInfo['hit']['name'][$this->config->get('config_language_id')];
			          }
			        }

					
					$discount = '';	
					if($sales && $special){
						if($labelsInfo['sale']['extra'] == 1){
							$discount = round((($result['price'] - $result['special'])/$result['price'])*100);
							$discount = $discount. ' %';
						}
						if($labelsInfo['sale']['extra'] == 2){
							$discount = $this->currency->format($this->tax->calculate(($result['price'] - $result['special']), $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
						}					
					}		
// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
					'price'       => $price,
            ]]></search>
            <add position="after"><![CDATA[
						'isnewest'       => $isNewest,// lightshop
						'sales'       => $sales,// lightshop
						'discount'       => $discount,// lightshop
				        'catch'       => $catch,// lightshop
				        'popular'   => $popular,// lightshop
				        'hit'    	  => $hit,// lightshop
				        'nocatch'       => $nocatch,// lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$data['recurrings'] = $this->model_catalog_product->getProfiles($this->request->get['product_id']);
            ]]></search>
            <add position="before"><![CDATA[
// lightshop
			$data['buyclick_form'] = $this->load->view('product/buyclick_form', $data);
			if (!isset($_COOKIE["productsVieded[" . $product_id . "]"])){
				SetCookie("productsVieded[" . $product_id . "]",time(),time()+3600*24*30*12,"/");
			}
			$data['buyclick_form'] = $this->load->view('product/buyclick_form', $data);
			
			if ($this->config->get('theme_lightshop_product_review')) {
				$data['reviewsdata'] = $this->review();
			} else {
				$data['reviewsdata'] = false;
			}
// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
			$this->response->setOutput($this->load->view('error/not_found', $data));
            ]]></search>
            <add position="replace"><![CDATA[
// lightshop
		if (is_file(DIR_IMAGE . $this->config->get('theme_lightshop_logo_404'))) {
			$data['logo_404'] = HTTP_SERVER . 'image/' . $this->config->get('theme_lightshop_logo_404');
		} else {
			$data['logo_404'] = '';
		}
		$data['text_404'] = sprintf($this->language->get('text_404'), $this->url->link('information/contact', '', true), $this->url->link('product/search', '', true), $this->url->link('common/home', '', true));
		$this->response->setOutput($this->load->view('error/404', $data));
// lightshop end		
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		$data['reviews'] = array();
            ]]></search>
            <add position="before"><![CDATA[
		// lightshop
		$data['schema'] = $this->config->get('theme_lightshop_schema');
		// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
				'rating'     => (int)$result['rating'],
            ]]></search>
            <add position="after"><![CDATA[
				'date_added_schema' => date('Y-m-d', strtotime($result['date_added'])), // lightshop
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
		$this->response->setOutput($this->load->view('product/review', $data));
            ]]></search>
            <add position="replace"><![CDATA[
		//lightshop
		if ($this->config->get('theme_lightshop_product_review')) {
			return $this->load->view('product/review', $data);
		} else {
			$this->response->setOutput($this->load->view('product/review', $data));
		}
		// lightshop end
            ]]></add>
        </operation>
        <operation>
            <search index="1"><![CDATA[
		$this->response->setOutput(json_encode($json));
            ]]></search>
            <add position="after" offset="1"><![CDATA[
// lightshop

	public function custtabload() {
		$this->load->model('extension/module/lightshop');

		$customTabs = $this->model_extension_module_lightshop->getFields4Product($this->request->get['product_ids']);
		$data['customTab'] = $customTabs["popup"][$this->request->get['tab']];

		$this->response->setOutput($this->load->view('product/custtab_popup',$data));
	}

	public function autocomplete() {
		$json = array();

		if (isset($this->request->get['filter_name']) || isset($this->request->get['filter_model'])) {
			$this->load->model('catalog/product');
//			$this->load->model('catalog/option');
			$this->load->model('tool/image');

			if (isset($this->request->get['filter_name'])) {
				$filter_name = $this->request->get['filter_name'];
			} else {
				$filter_name = '';
			}

			if (isset($this->request->get['filter_model'])) {
				$filter_model = $this->request->get['filter_model'];
			} else {
				$filter_model = '';
			}

			if (isset($this->request->get['limit'])) {
				$limit = $this->request->get['limit'];
			} else {
				$limit = 5;
			}

			$filter_data = array(
				'filter_name'  => $filter_name,
				'filter_tag'   => $filter_name,
				'filter_model' => $filter_model,
				'start'        => 0,
				'limit'        => $limit
			);

			$results = $this->model_catalog_product->getProducts($filter_data);

			foreach ($results as $result) {
				$option_data = array();
				if ($result['image']) {
					$image = $this->config->get('theme_lightshop_image_product_resize') ? $this->model_tool_image->lightshop_resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height')) : $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));// lightshop
				} else {
					$image = $this->config->get('theme_lightshop_image_product_resize') ? $this->model_tool_image->lightshop_resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height')) : $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));// lightshop
				}
				
				if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
					$price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$price = false;
				}

				if ((float)$result['special']) {
					$special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$special = false;
				}


				$json[] = array(
					'product_id' => $result['product_id'],
					'name'       => strip_tags(html_entity_decode($result['name'], ENT_QUOTES, 'UTF-8')),
					'model'      => $result['model'],
					'image'      => $image,
					'option'     => $option_data,
					'price'      => $price,
					'special'    => $special,
					'href' 		 => str_replace('&amp;', '&', $this->url->link('product/product', 'product_id=' . $result['product_id']))
				);
			}
		}

		$this->response->addHeader('Content-Type: application/json');
		$this->response->setOutput(json_encode($json));
	}
	public function breadList($category_id) {
		$this->load->model('catalog/category');
		$data = array();
		$categories = $this->model_catalog_category->getCategories($category_id);
		foreach($categories as $category){
			$data[] = array(
				'name'		=> $category['name'],
				'href'       => $this->url->link('product/category', 'path=' . $category['category_id'])
			);
		}
		return $data;
	}
	public function breadlistcr() {

		$this->load->model('catalog/category');
		$category_id = $this->request->get['cat_id'];
		$data['breadLists'] = array();
		$categories = $this->model_catalog_category->getCategories($category_id);
		foreach($categories as $category){
			$data['breadLists'][] = array(
				'name'		=> $category['name'],
				'href'       => $this->url->link('product/category', 'path=' . $category['category_id'])
			);
		}
		$this->response->setOutput($this->load->view('product/bread_popup',$data));
	}
	public function descriptionExtra($description) {
		$data['fulldesc'] = $description;
		$data['shortdesc'] = '';
		$tag = html_entity_decode($this->config->get('theme_lightshop_product_short_tag'), ENT_QUOTES, 'UTF-8');
		$temp = explode($tag,$description);
		if(isset($temp[0])){
			$data['shortdesc'] = $temp[0];
			$data['fulldesc'] = str_replace($data['shortdesc'].$tag, "", $description);
		}
		return $data;
	}
	public function analystdataorder() {
		$json = array();

		$this->load->model('catalog/product');
		$this->load->model('catalog/category');
		$this->load->model('extension/module/lightshop');
		$this->load->model('checkout/order');

		if (isset($this->request->post['order_id'])) {
			$order_id = (int)$this->request->post['order_id'];
			$products = $this->model_extension_module_lightshop->getOrderProducts($order_id);
			$order_info = $this->model_checkout_order->getOrder($order_id);
			$json['value'] = $order_info['total'];
			$json['transaction_id'] = $order_id;
		}else{
			$products = $this->cart->getProducts();
		}

			$cartSubTotal = $this->cart->getSubTotal();

			foreach ($products as $product) {

				$product_categories = $this->model_catalog_product->getCategories($product['product_id']);
				if($product_categories){
					$category_info = $this->model_catalog_category->getCategory($product_categories[0]['category_id']);
					$category_name = $category_info['name'];
				}else{
					$category_name = "";
				}

				$product_info = $this->model_catalog_product->getProduct($product['product_id']);

				$json['items'][] = array(
					'id' => $product['product_id'],
					'name'       => strip_tags(html_entity_decode($product['name'], ENT_QUOTES, 'UTF-8')),
					'price' => $product['price'],
					'quantity' => $product['quantity'],
					'category'       => strip_tags(html_entity_decode($category_name, ENT_QUOTES, 'UTF-8')),
					'brand' => strip_tags(html_entity_decode($product_info['manufacturer'], ENT_QUOTES, 'UTF-8'))
				);		
			}


		$this->response->addHeader('Content-Type: application/json');
		$this->response->setOutput(json_encode($json));		
	}

	public function analystdata() {
		$json = array();

		if (isset($this->request->post['product_id'])) {
			$product_id = $this->request->post['product_id'];
		} else {
			$product_id = 0;
		}

		if (isset($this->request->post['qty'])) {
			$quantity = $this->request->post['qty'];
		} else {
			$quantity = 1;
		}



		$this->load->model('catalog/product');
		$this->load->model('catalog/category');

		$product_info = $this->model_catalog_product->getProduct($product_id);

				if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
					$price = $this->tax->calculate($product_info['price'], $product_info['tax_class_id'], $this->config->get('config_tax'));
				} else {
					$price = false;
				}

				if ((float)$product_info['special']) {
					$price = $this->tax->calculate($product_info['special'], $product_info['tax_class_id'], $this->config->get('config_tax'));
				}

		$product_categories = $this->model_catalog_product->getCategories($product_id);
		if($product_categories){
			$category_info = $this->model_catalog_category->getCategory($product_categories[0]['category_id']);
			$category_name = $category_info['name'];
		}else{
			$category_name = "";
		}

				$json['items'][] = array(
					'id' => $product_info['product_id'],
					'name'       => strip_tags(html_entity_decode($product_info['name'], ENT_QUOTES, 'UTF-8')),
					'price' => $price,
					'quantity' => $quantity,
					'category'       => strip_tags(html_entity_decode($category_name, ENT_QUOTES, 'UTF-8')),
					'brand' => strip_tags(html_entity_decode($product_info['manufacturer'], ENT_QUOTES, 'UTF-8'))
				);

		$this->response->addHeader('Content-Type: application/json');
		$this->response->setOutput(json_encode($json));

	}
// lightshop end
            ]]></add>
        </operation>
		<operation>
			<search><![CDATA[
		'href' => $this->url->link('product/search', 'tag=' . trim($tag))
			]]></search>
			<add position="replace"><![CDATA[
		'href' => str_replace('&amp;', '&', $this->url->link('product/search', 'tag=' . trim($tag)))// lightshop
			]]></add>
		</operation>
    </file>
	<file path="catalog/controller/product/search.php">
		<operation>
			<search><![CDATA[
		$data['compare'] = $this->url->link('product/compare');
			]]></search>
			<add position="before"><![CDATA[
		// lightshop
		$this->load->language('extension/theme/lightshop');
		$data['lazyload'] = $this->config->get('theme_lightshop_lazyload');
		$data['url'] = $url;
		$data['schema'] = $this->config->get('theme_lightshop_schema');
		$data['product_detail'] = $this->config->get('theme_lightshop_product_detail');
		$data['category_background'] = $this->config->get('theme_lightshop_category_background');
		$data['category_sorts'] = $this->config->get('theme_lightshop_category_sorts');
		$data['category_limits'] = $this->config->get('theme_lightshop_category_limits');
		$data['catalog_type'] = $this->config->get('theme_lightshop_catalog_type');
		$data['language_id'] = $this->config->get('config_language_id');

			$data['button_fastorder_sendorder'] = $this->language->get('button_lighshop_sendorder');
			$data['text_lightshop_buy_click'] = $this->language->get('text_lightshop_buy_click');
			$data['text_product_view_btn'] = $this->language->get('text_product_view_btn');

			if ($this->config->get('theme_lightshop_buy_click_pdata')) {
				$this->load->language('extension/theme/lightshop');
				$this->load->model('catalog/information');

				$information_info = $this->model_catalog_information->getInformation($this->config->get('theme_lightshop_buy_click_pdata'));

				if ($information_info) {
					$data['text_lightshop_pdata'] = sprintf($this->language->get('text_lightshop_pdata'), $this->language->get('button_lighshop_sendorder'), $this->url->link('information/information/agree', 'information_id=' . $this->config->get('theme_lightshop_buy_click_pdata'), true), $information_info['title'], $information_info['title']);
				} else {
					$data['text_lightshop_pdata'] = '';
				}
			} else {
				$data['text_lightshop_pdata'] = '';
			}
			
			$data['pс_view'] = $this->config->get('theme_lightshop_pс_view');
			$data['mobile_view'] = $this->config->get('theme_lightshop_mobile_view');
			
			$data['buy_click'] = array();
			if($this->config->get('theme_lightshop_buy_click')){
				$data['buy_click'] = $this->config->get('theme_lightshop_buy_click');
				if ($this->customer->isLogged()) {
					$this->load->model('account/customer');
					$data['customer_info'] = $this->model_account_customer->getCustomer($this->customer->getId());
				}
			}	
			
			$this->load->language('checkout/checkout');
			$data['entry_firstname'] = $this->language->get('entry_firstname');
			$data['entry_lastname'] = $this->language->get('entry_lastname');
			$data['entry_email'] = $this->language->get('entry_email');
			$data['entry_telephone'] = $this->language->get('entry_telephone');
			$data['entry_comment'] = $this->language->get('entry_comment');
		// lightshop end
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
			$results = $this->model_catalog_product->getProducts($filter_data);
			]]></search>
			<add position="after"><![CDATA[
			// lightshop
			$this->load->model('extension/module/lightshop');
			$labelsInfo = array();
			if($this->config->get('theme_lightshop_label')){
				$labelsInfo = $this->config->get('theme_lightshop_label');
			}
			$data['labelsinfo'] = $labelsInfo ;
			$data['language_id'] = $this->config->get('config_language_id');
			$newest = array();
			$isDateTime = false;
			$sales = false;
			if(isset($labelsInfo['new']['period']) && $labelsInfo['new']['status']){
				$newest = $this->model_catalog_product->getNewestProducts($labelsInfo['new']['period']);	
			}
			if(isset($labelsInfo['sale']['status']) && $labelsInfo['sale']['status']){
				$sales = true;				
			}
		    if (isset($labelsInfo['hit']) && $labelsInfo['hit']['status']) {
		       $hits = $this->model_extension_module_lightshop->getHitProducts($labelsInfo['hit']['period'],$labelsInfo['hit']['qty']);
		    }
			// lightshop end
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
					$image = $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));
			]]></search>
			<add position="replace"><![CDATA[
					$image = $this->config->get('theme_lightshop_image_product_resize') ? $this->model_tool_image->lightshop_resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height')) : $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));// lightshop
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
					$image = $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));
			]]></search>
			<add position="replace"><![CDATA[
					$image = $this->config->get('theme_lightshop_image_product_resize') ? $this->model_tool_image->lightshop_resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height')) : $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));// lightshop
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
				$data['products'][] = array(
			]]></search>
			<add position="before"><![CDATA[
				// lightshop
				$extraImages = array();				
				$images = $this->model_catalog_product->getProductImages($result['product_id']);
				foreach($images as $imageX){
					$extraImages[] = $this->config->get('theme_lightshop_image_product_resize') ? $this->model_tool_image->lightshop_resize($imageX['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height')) : $this->model_tool_image->resize($imageX['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));
				}
				
				if (in_array($result['product_id'], $newest)) {
					$isNewest = true;
				} else {
					$isNewest = false;
				}			
								
				if ($result['quantity'] <= 0) {
					$stock = $result['stock_status'];
				} elseif ($this->config->get('config_stock_display')) {
					$stock = $result['quantity'];
				} else {
					$stock = $this->language->get('text_instock');
				}	
				
				if ($result['quantity'] <= 0 && !$this->config->get('config_stock_checkout')) {
					$buy_btn = $result['stock_status'];
				} else {
					$buy_btn = '';
				}
				
				$discount = '';
				if($sales && $special){
					if($labelsInfo['sale']['extra'] == 1){
						$discount = round((($result['price'] - $result['special'])/$result['price'])*100);
						$discount = $discount. ' %';
					}
					if($labelsInfo['sale']['extra'] == 2){
						$discount = $this->currency->format($this->tax->calculate(($result['price'] - $result['special']), $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
					}					
				}
				$catch = false;
				$nocatch = false;
				if (isset($labelsInfo['catch']) && $labelsInfo['catch']['status'] && $result['quantity'] <= $labelsInfo['catch']['qty']) {
					if($result['quantity'] > 0){
						$catch = $labelsInfo['catch']['name'][$this->config->get('config_language_id')];
					}else{
						$catch = $labelsInfo['catch']['name1'][$this->config->get('config_language_id')];
						$nocatch = true;
					}
				}

				$popular = false;
				if (isset($labelsInfo['popular']) && $labelsInfo['popular']['status'] && $result['viewed'] >= $labelsInfo['popular']['views']) {
					$popular = $labelsInfo['popular']['name'][$this->config->get('config_language_id')];
				}

				$hit = false;
				if (isset($labelsInfo['hit']) && $labelsInfo['hit']['status']) {
					if (isset($hits[$result['product_id']])) {
						$hit = $labelsInfo['hit']['name'][$this->config->get('config_language_id')];
					}
				}

				$options = array();

				foreach ($this->model_catalog_product->getProductOptions($result['product_id']) as $option) {
					$product_option_value_data = array();

					foreach ($option['product_option_value'] as $option_value) {
						if (!$option_value['subtract'] || ($option_value['quantity'] > 0)) {
							if ((($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) && (float)$option_value['price']) {
								$priceOp = $this->currency->format($this->tax->calculate($option_value['price'], $result['tax_class_id'], $this->config->get('config_tax') ? 'P' : false), $this->session->data['currency']);
							} else {
								$priceOp = false;
							}

							$product_option_value_data[] = array(
								'product_option_value_id' => $option_value['product_option_value_id'],
								'option_value_id'         => $option_value['option_value_id'],
								'name'                    => $option_value['name'],
								'image'                   => $option_value['image'] ? $this->model_tool_image->resize($option_value['image'], 50, 50) : '',
								'price'                   => $priceOp,
								'price_prefix'            => $option_value['price_prefix']
							);
						}
					}

					if ($option['type'] == 'date' || $option['type'] == 'datetime' || $option['type'] == 'time') {
						$isDateTime = true;
					}
					
					$options[] = array(
						'product_option_id'    => $option['product_option_id'],
						'product_option_value' => $product_option_value_data,
						'option_id'            => $option['option_id'],
						'name'                 => $option['name'],
						'type'                 => $option['type'],
						'value'                => $option['value'],
						'required'             => $option['required']
					);
				}									
				// lightshop end
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
					'name'        => $result['name'],
			]]></search>
			<add position="after"><![CDATA[
					'manufacturer'        => $result['manufacturer'],// lightshop
					'quantity'        => $result['quantity'],// lightshop
					'stock'        => $stock,// lightshop
					'images'       => $extraImages,// lightshop	
					'isnewest'       => $isNewest,// lightshop
					'sales'       => $sales,// lightshop
					'discount'       => $discount,// lightshop
					'popular'	  => $popular,// lightshop
					'hit'	 	  => $hit,// lightshop
					'buy_btn'	  => $buy_btn,// lightshop
					'catch'       => $catch,// lightshop
					'nocatch'       => $nocatch,// lightshop
			]]></add>
		</operation>
		<operation>
            <search index="0"><![CDATA[
'rating'      => $result['rating'],
            ]]></search>
            <add position="after" offset="4"><![CDATA[
			// lightshop
			if ($isDateTime) {
				$this->document->addScript('catalog/view/javascript/jquery/datetimepicker/moment/moment.min.js');
				$this->document->addScript('catalog/view/javascript/jquery/datetimepicker/moment/moment-with-locales.min.js');
				$this->document->addScript('catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.js');
				$this->document->addStyle('catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.css');;				
			}
			// lightshop end
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
		$data['limit'] = $limit;
			]]></search>
			<add position="after"><![CDATA[
// lightshop	
			if ($this->config->get($this->config->get('theme_lightshop_config_captcha_fo') . '_status')) {
				$data['captcha_fo'] = $this->load->controller('extension/captcha/' . $this->config->get('theme_lightshop_config_captcha_fo'));
			} else {
				$data['captcha_fo'] = '';
			}
			
		if (isset($this->request->get['view'])) {
			$view = $this->request->get['view'];
			$viewM = $this->request->get['view'];
		}elseif(isset($this->session->data['view'])){
			$view = $this->session->data['view'];
			$viewM = $this->session->data['view'];
		} else {
			$view = $this->config->get('theme_lightshop_pс_view');
			$viewM = $this->config->get('theme_lightshop_mobile_view');
		}
			if (isset($_COOKIE["ismobile"]) && $_COOKIE["ismobile"] == 1){ 
				$this->session->data['view'] = $viewM;
			}else{
				$this->session->data['view'] = $view;
			}
		$data['viewLayer'] = $view;
		$data['viewLayerM'] = $viewM;
		$viewSub = '';
		$data['viewSub'] = '';		


				if(strpos($this->session->data['view'],'main') === false){	
					$data['view'] = $this->session->data['view'];

				}else{
					$data['view'] = $this->session->data['view'];

					$viewSub = explode('-',$data['view']);
					if(isset($viewSub[1])){
						$viewSub = $viewSub[1];
						$data['viewSub'] = 'catalogue__products-list--'.$viewSub;
						$data['viewLayerM'] = 'main';
					}else{
						$data['viewSub'] = '';						
					}
					$data['view'] = 'main';

				}			
		$data['buyclick_form'] = $this->load->view('product/buyclick_form', $data);		

		if (isset($this->request->get['view'])) {
			
			$this->response->setOutput($this->load->view('product/category_'.$data['view'], $data));
			return ;
		}elseif(isset($this->request->get['popupdetail'])){
			
			$this->response->setOutput($this->load->view('product/category_popup', $data));
			return ;			
		}

		$data['productsview'] = $this->load->view('product/category_'.$data['view'], $data);
// lightshop end
			]]></add>
		</operation>
	</file>  
	<file path="catalog/controller/product/special.php">
		<operation>
			<search><![CDATA[
		$data['compare'] = $this->url->link('product/compare');
			]]></search>
			<add position="before"><![CDATA[
		// lightshop
		$this->load->language('extension/theme/lightshop');
		$data['url'] = $url;
		$data['schema'] = $this->config->get('theme_lightshop_schema');
		$data['product_detail'] = $this->config->get('theme_lightshop_product_detail');
		$data['category_background'] = $this->config->get('theme_lightshop_category_background');
		$data['category_sorts'] = $this->config->get('theme_lightshop_category_sorts');
		$data['category_limits'] = $this->config->get('theme_lightshop_category_limits');
		$data['catalog_type'] = $this->config->get('theme_lightshop_catalog_type');
		$data['language_id'] = $this->config->get('config_language_id');

			$data['button_fastorder_sendorder'] = $this->language->get('button_lighshop_sendorder');
			$data['text_fastorder_name'] = $this->language->get('text_lighshop_name');
			$data['text_fastorder_phone'] = $this->language->get('text_lighshop_phone');
			$data['text_fastorder_comment'] = $this->language->get('text_lighshop_comment');
			$data['text_lightshop_buy_click'] = $this->language->get('text_lightshop_buy_click');
			$data['text_product_view_btn'] = $this->language->get('text_product_view_btn');

			$data['pс_view'] = $this->config->get('theme_lightshop_pс_view');
			$data['mobile_view'] = $this->config->get('theme_lightshop_mobile_view');
			if ($this->config->get('theme_lightshop_buy_click_pdata')) {
				$this->load->language('extension/theme/lightshop');
				$this->load->model('catalog/information');

				$information_info = $this->model_catalog_information->getInformation($this->config->get('theme_lightshop_buy_click_pdata'));

				if ($information_info) {
					$data['text_lightshop_pdata'] = sprintf($this->language->get('text_lightshop_pdata'), $this->language->get('button_lighshop_sendorder'), $this->url->link('information/information/agree', 'information_id=' . $this->config->get('theme_lightshop_buy_click_pdata'), true), $information_info['title'], $information_info['title']);
				} else {
					$data['text_lightshop_pdata'] = '';
				}
			} else {
				$data['text_lightshop_pdata'] = '';
			}

			$data['buy_click'] = array();
			if($this->config->get('theme_lightshop_buy_click')){
				$data['buy_click'] = $this->config->get('theme_lightshop_buy_click');
				if ($this->customer->isLogged()) {
					$this->load->model('account/customer');
					$data['customer_info'] = $this->model_account_customer->getCustomer($this->customer->getId());
				}
			}	
			$this->load->language('checkout/checkout');
			$data['entry_firstname'] = $this->language->get('entry_firstname');
			$data['entry_lastname'] = $this->language->get('entry_lastname');
			$data['entry_email'] = $this->language->get('entry_email');
			$data['entry_telephone'] = $this->language->get('entry_telephone');
			$data['entry_comment'] = $this->language->get('entry_comment');		
			$data['lazyload'] = $this->config->get('theme_lightshop_lazyload');				
		// lightshop end
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
		$results = $this->model_catalog_product->getProductSpecials($filter_data);
			]]></search>
			<add position="after"><![CDATA[
			// lightshop
			$this->load->model('extension/module/lightshop');
			$labelsInfo = array();
			if($this->config->get('theme_lightshop_label')){
				$labelsInfo = $this->config->get('theme_lightshop_label');
			}
			$data['labelsinfo'] = $labelsInfo ;
			$isDateTime = false;
			$data['language_id'] = $this->config->get('config_language_id');
			$newest = array();
			$sales = false;
			if(isset($labelsInfo['new']['period']) && $labelsInfo['new']['status']){
				$newest = $this->model_catalog_product->getNewestProducts($labelsInfo['new']['period']);	
			}
			if(isset($labelsInfo['sale']['status']) && $labelsInfo['sale']['status']){
				$sales = true;				
			}
			if (isset($labelsInfo['hit']) && $labelsInfo['hit']['status']) {
			    $hits = $this->model_extension_module_lightshop->getHitProducts($labelsInfo['hit']['period'],$labelsInfo['hit']['qty']);
			}	

			// lightshop end
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
				$image = $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));
			]]></search>
			<add position="replace"><![CDATA[
				$image = $this->config->get('theme_lightshop_image_product_resize') ? $this->model_tool_image->lightshop_resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height')) : $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));// lightshop
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
				$image = $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));
			]]></search>
			<add position="replace"><![CDATA[
				$image = $this->config->get('theme_lightshop_image_product_resize') ? $this->model_tool_image->lightshop_resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height')) : $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));// lightshop
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
			$data['products'][] = array(
			]]></search>
			<add position="before"><![CDATA[
				// lightshop
				$extraImages = array();				
				$images = $this->model_catalog_product->getProductImages($result['product_id']);
				foreach($images as $imageX){
					$extraImages[] = $this->config->get('theme_lightshop_image_product_resize') ? $this->model_tool_image->lightshop_resize($imageX['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height')) : $this->model_tool_image->resize($imageX['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));
				}
				
				if (in_array($result['product_id'], $newest)) {
					$isNewest = true;
				} else {
					$isNewest = false;
				}			
								
				if ($result['quantity'] <= 0) {
					$stock = $result['stock_status'];
				} elseif ($this->config->get('config_stock_display')) {
					$stock = $result['quantity'];
				} else {
					$stock = $this->language->get('text_instock');
				}	
				
				if ($result['quantity'] <= 0 && !$this->config->get('config_stock_checkout')) {
					$buy_btn = $result['stock_status'];
				} else {
					$buy_btn = '';
				}
				
				$discount = '';
				if($sales && $special){
					if($labelsInfo['sale']['extra'] == 1){
						$discount = round((($result['price'] - $result['special'])/$result['price'])*100);
						$discount = $discount. ' %';
					}
					if($labelsInfo['sale']['extra'] == 2){
						$discount = $this->currency->format($this->tax->calculate(($result['price'] - $result['special']), $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
					}					
				}

				$catch = false;
				$nocatch = false;
				if (isset($labelsInfo['catch']) && $labelsInfo['catch']['status'] && $result['quantity'] <= $labelsInfo['catch']['qty']) {
					if($result['quantity'] > 0){
						$catch = $labelsInfo['catch']['name'][$this->config->get('config_language_id')];
					}else{
						$catch = $labelsInfo['catch']['name1'][$this->config->get('config_language_id')];
						$nocatch = true;
					}
				}

				$popular = false;
				if (isset($labelsInfo['popular']) && $labelsInfo['popular']['status'] && $result['viewed'] >= $labelsInfo['popular']['views']) {
					$popular = $labelsInfo['popular']['name'][$this->config->get('config_language_id')];
				}

				$hit = false;
				if (isset($labelsInfo['hit']) && $labelsInfo['hit']['status']) {
					if (isset($hits[$result['product_id']])) {
						$hit = $labelsInfo['hit']['name'][$this->config->get('config_language_id')];
					}
				}

				$options = array();

				foreach ($this->model_catalog_product->getProductOptions($result['product_id']) as $option) {
					$product_option_value_data = array();

					foreach ($option['product_option_value'] as $option_value) {
						if (!$option_value['subtract'] || ($option_value['quantity'] > 0)) {
							if ((($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) && (float)$option_value['price']) {
								$priceOp = $this->currency->format($this->tax->calculate($option_value['price'], $result['tax_class_id'], $this->config->get('config_tax') ? 'P' : false), $this->session->data['currency']);
							} else {
								$priceOp = false;
							}

							$product_option_value_data[] = array(
								'product_option_value_id' => $option_value['product_option_value_id'],
								'option_value_id'         => $option_value['option_value_id'],
								'name'                    => $option_value['name'],
								'image'                   => $option_value['image'] ? $this->model_tool_image->resize($option_value['image'], 50, 50) : '',
								'price'                   => $priceOp,
								'price_prefix'            => $option_value['price_prefix']
							);
						}
					}

					if ($option['type'] == 'date' || $option['type'] == 'datetime' || $option['type'] == 'time') {
						$isDateTime = true;
					}
					
					$options[] = array(
						'product_option_id'    => $option['product_option_id'],
						'product_option_value' => $product_option_value_data,
						'option_id'            => $option['option_id'],
						'name'                 => $option['name'],
						'type'                 => $option['type'],
						'value'                => $option['value'],
						'required'             => $option['required']
					);
				}										
				// lightshop end
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
				'name'        => $result['name'],
			]]></search>
			<add position="after"><![CDATA[
					'manufacturer'        => $result['manufacturer'],// lightshop
					'quantity'        => $result['quantity'],// lightshop
					'stock'        => $stock,// lightshop
					'images'       => $extraImages,// lightshop	
					'isnewest'       => $isNewest,// lightshop
					'sales'       => $sales,// lightshop
					'discount'       => $discount,// lightshop
					'popular'	  => $popular,// lightshop
					'hit'	 	  => $hit,// lightshop
					'buy_btn'	  => $buy_btn,// lightshop
					'catch'       => $catch,// lightshop
					'nocatch'       => $nocatch,// lightshop
			]]></add>
		</operation>
		<operation>
            <search index="0"><![CDATA[
'rating'      => $result['rating'],
            ]]></search>
            <add position="after" offset="4"><![CDATA[
			// lightshop
			if ($isDateTime) {
				$this->document->addScript('catalog/view/javascript/jquery/datetimepicker/moment/moment.min.js');
				$this->document->addScript('catalog/view/javascript/jquery/datetimepicker/moment/moment-with-locales.min.js');
				$this->document->addScript('catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.js');
				$this->document->addStyle('catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.css');			
			}
			// lightshop end
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
		$data['continue'] = $this->url->link('common/home');
			]]></search>
			<add position="after"><![CDATA[
// lightshop		
			if ($this->config->get($this->config->get('theme_lightshop_config_captcha_fo') . '_status')) {
				$data['captcha_fo'] = $this->load->controller('extension/captcha/' . $this->config->get('theme_lightshop_config_captcha_fo'));
			} else {
				$data['captcha_fo'] = '';
			}
			
		if (isset($this->request->get['view'])) {
			$view = $this->request->get['view'];
			$viewM = $this->request->get['view'];
		}elseif(isset($this->session->data['view'])){
			$view = $this->session->data['view'];
			$viewM = $this->session->data['view'];
		} else {
			$view = $this->config->get('theme_lightshop_pс_view');
			$viewM = $this->config->get('theme_lightshop_mobile_view');
		}
			if (isset($_COOKIE["ismobile"]) && $_COOKIE["ismobile"] == 1){ 
				$this->session->data['view'] = $viewM;
			}else{
				$this->session->data['view'] = $view;
			}
		$data['viewLayer'] = $view;
		$data['viewLayerM'] = $viewM;
		$viewSub = '';
		$data['viewSub'] = '';		


				if(strpos($this->session->data['view'],'main') === false){	
					$data['view'] = $this->session->data['view'];

				}else{
					$data['view'] = $this->session->data['view'];

					$viewSub = explode('-',$data['view']);
					if(isset($viewSub[1])){
						$viewSub = $viewSub[1];
						$data['viewSub'] = 'catalogue__products-list--'.$viewSub;
						$data['viewLayerM'] = 'main';
					}else{
						$data['viewSub'] = '';						
					}
					$data['view'] = 'main';

				}		
		$data['buyclick_form'] = $this->load->view('product/buyclick_form', $data);

		if (isset($this->request->get['view'])) {
			
			$this->response->setOutput($this->load->view('product/category_'.$data['view'], $data));
			return ;
		}
		$data['productsview'] = $this->load->view('product/category_'.$data['view'], $data);
// lightshop end
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/startup/seo_url.php">
		<operation>
			<search><![CDATA[
					if ($url[0] == 'manufacturer_id') {
			]]></search>
			<add position="before"><![CDATA[
//lightshop start
					if ($url[0] == 'lightshopcatblog_id') { 
						if (!isset($this->request->get['lbpath'])) {

							$this->request->get['lbpath'] = $url[1];
						} else {
							$this->request->get['lbpath'] = $url[1];
						}
					}

					if ($url[0] == 'news_id') {
						$this->request->get['news_id'] = $url[1];
					}

					if ($url[0] == 'blog_id') {
						$this->request->get['blog_id'] = $url[1];
					}
//lightshop end
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
					if ($query->row['query'] && $url[0] != 'information_id' && $url[0] != 'manufacturer_id' && $url[0] != 'category_id' && $url[0] != 'product_id') {
			]]></search>
			<add position="replace"><![CDATA[
					if ($query->row['query'] && $url[0] != 'information_id' && $url[0] != 'manufacturer_id' && $url[0] != 'category_id' && $url[0] != 'product_id' && $url[0] != 'blog_id' && $url[0] != 'news_id' && $url[0] != 'lightshopcatblog_id') { //lightshop comment add this
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
					$this->request->get['route'] = 'information/information';
			]]></search>
			<add position="after"><![CDATA[
				} elseif (isset($this->request->get['news_id'])) {//lightshop
					$this->request->get['route'] = 'extension/module/lightshop_news/getnews';//lightshop
				} elseif (isset($this->request->get['blog_id'])) {//lightshop
					$this->request->get['lbpath'] = '2';

					$this->request->get['route'] = 'extension/module/lightshop_blog/getblog';//lightshop
				} elseif (isset($this->request->get['lbpath'])) {//lightshop

					$this->request->get['route'] = 'extension/module/lightshopcat_blog/getcat';//lightshop
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
				if (($data['route'] == 'product/product' && $key == 'product_id') || (($data['route'] == 'product/manufacturer/info' || $data['route'] == 'product/product') && $key == 'manufacturer_id') || ($data['route'] == 'information/information' && $key == 'information_id')) {
			]]></search>
			<add position="replace"><![CDATA[
				if (($data['route'] == 'product/product' && $key == 'product_id') || (($data['route'] == 'product/manufacturer/info' || $data['route'] == 'product/product') && $key == 'manufacturer_id') || ($data['route'] == 'information/information' && $key == 'information_id') || ($data['route'] == 'extension/module/lightshop_news/getnews' && $key == 'news_id')) {//lightshop comment add this
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
				} elseif ($key == 'path') {
			]]></search>
			<add position="before"><![CDATA[
//lightshop start
				} elseif ($data['route'] == 'extension/module/lightshop_blog/getblog' && $key == 'blog_id') {
					if ($this->config->get('config_seo_pro') === null) {  // Check - This section for Russian build OCStore only

						if ($this->config->get('theme_lightshop_blog_path') ) { 
							$catlessblog = false;
							$categories = $this->getPathByBlog($value); 
							if (!$categories && !$catlessblog) return $link;
							if ($catlessblog) {
								$categories = 0;
							}
							$categories = explode('_', $categories);
							if ($categories[0]) {
								array_unshift($categories, "0");
							}

							foreach ($categories as $category) {
								$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "seo_url WHERE `query` = 'lightshopcatblog_id=" . (int)$category . "'");

								if ($query->num_rows && $query->row['keyword']) {
									$url .= '/' . $query->row['keyword'];
								} else {
									$url = '';

									break;
								}
							}

						}
					}
					$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "seo_url WHERE `query` = '" . $this->db->escape($key . '=' . (int)$value) . "' AND store_id = '" . (int)$this->config->get('config_store_id') . "' AND language_id = '" . (int)$this->config->get('config_language_id') . "'");

					if ($query->num_rows && $query->row['keyword']) {
						$url .= '/' . $query->row['keyword'];

						unset($data[$key]);
					}

				} elseif ($key == 'lbpath') {


					$categories = explode('_', $value);
					if ($categories[0]) {
						array_unshift($categories, "0");
					}

					foreach ($categories as $category) {
						$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "seo_url WHERE `query` = 'lightshopcatblog_id=" . (int)$category . "'");

						if ($query->num_rows && $query->row['keyword']) {
							$url .= '/' . $query->row['keyword'];
						} else {
							$url = '';

							break;
						}
					}

					unset($data[$key]);	
				}elseif (($data['route'] == 'extension/module/lightshop_news/getnewslist')) {	
					$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "seo_url WHERE `query` = '" . $this->db->escape($value) . "'");

					if ($query->num_rows && $query->row['keyword'] && (strpos($url, $query->row['keyword']) === false)) {
						//&& (strpos($url, $query->row['keyword']) === false) - uses for new version SEO-PRO to avoid doubling
						$url .= '/' . $query->row['keyword'];

						unset($data[$key]);
					}				

//lightshop end
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
public function rewrite($link) {
			]]></search>
			<add position="before"><![CDATA[
//lightshop start
	public function getPathByBlog($blog_id) {
		$blog_id = (int)$blog_id;
		if ($blog_id < 1) return false;

		static $path = null;
		$query = $this->db->query("SELECT category_id FROM " . DB_PREFIX . "lightshop_blog_to_category WHERE blog_id = '" . $blog_id . "' ORDER BY main_category DESC LIMIT 1");

		$path[$blog_id] = $this->getPathByCategoryLb($query->num_rows ? (int)$query->row['category_id'] : 0);

		return $path[$blog_id];
	}

	private function getPathByCategoryLb($category_id) {
		$category_id = (int)$category_id;
		if ($category_id < 1) return false;

		static $path = null;

			$max_level = 10;

			$sql = "SELECT CONCAT_WS('_'";
			for ($i = $max_level-1; $i >= 0; --$i) {
				$sql .= ",t$i.category_id";
			}
			$sql .= ") AS path FROM " . DB_PREFIX . "lightshopcat_blog t0";
			for ($i = 1; $i < $max_level; ++$i) {
				$sql .= " LEFT JOIN " . DB_PREFIX . "lightshopcat_blog t$i ON (t$i.category_id = t" . ($i-1) . ".parent_id)";
			}
			$sql .= " WHERE t0.category_id = '" . $category_id . "'";

			$query = $this->db->query($sql);

			$path[$category_id] = $query->num_rows ? $query->row['path'] : false;

		return $path[$category_id];
	}
//lightshop end
			]]></add>
		</operation>
	</file>  
	<file path="catalog/language/ru-ru/ru-ru.php">
		<operation error="skip">
			<search trim="true"><![CDATA[
$_['text_home']             = '<i class="fa fa-home"></i>';
			]]></search>
			<add position="replace"><![CDATA[
// lightshop
$_['text_home']             = 'Главная';
$_['entry_comment']         = 'Комментарий';
$_['error_comment']         = 'Введите комментарий!';
// lightshop end
			]]></add>
		</operation>
<!-- opencart Русская сборка -->
		<operation error="skip">
			<search trim="true"><![CDATA[
$_['text_home']				= '<i class="fa fa-home"></i>';
			]]></search>
			<add position="replace"><![CDATA[
// lightshop
$_['text_home']             = 'Главная';
$_['entry_comment']         = 'Комментарий';
$_['error_comment']         = 'Введите комментарий!';
// lightshop end
			]]></add>
		</operation>
		<operation error="skip">
			<search trim="true"><![CDATA[
$_['text_home'] = '<i class="fa fa-home"></i>';
			]]></search>
			<add position="replace"><![CDATA[
// lightshop
$_['text_home']             = 'Главная';
$_['entry_comment']         = 'Комментарий';
$_['error_comment']         = 'Введите комментарий!';
// lightshop end
			]]></add>
		</operation>
	</file> 
	<file path="catalog/language/en-gb/en-gb.php">
		<operation>
			<search trim="true"><![CDATA[
$_['text_home']             = '<i class="fa fa-home"></i>';
			]]></search>
			<add position="replace"><![CDATA[
// lightshop
$_['text_home']             = 'Home';
$_['entry_comment']         = 'Entry comment';
$_['error_comment']         = 'Error comment!';
// lightshop end
			]]></add>
		</operation>
	</file> 
	<file path="catalog/language/uk-ua/uk-ua.php">
		<operation>
			<search trim="true"><![CDATA[
$_['text_home']             = '<i class="fa fa-home"></i>';
			]]></search>
			<add position="replace"><![CDATA[
// lightshop
$_['text_home']             = 'Головна';
$_['entry_comment']         = 'Коментар';
$_['error_comment']         = 'Введіть коментар!';
// lightshop end
			]]></add>
		</operation>
	</file> 
	<file path="catalog/model/account/wishlist.php">
		<operation>
			<search><![CDATA[
		return $query->row['total'];
			]]></search>
			<add position="after" offset="1"><![CDATA[
// lightshop

	public function getWishlistLb() {
		if ($this->customer->isLogged()) {
       		 $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "customer_wishlist WHERE customer_id = '" . (int)$this->customer->getId() . "'");
			return $query->rows;
		}else{
				$results = array();
				if(isset($_COOKIE["productsWish"])){
					foreach($_COOKIE["productsWish"] as $product_id => $val){
						$cookies[$val] = $product_id;
					}
					krsort($cookies);
					
					foreach($cookies as $product_id){
						$results[]  = array(
							'customer_id' => 0,
							'product_id' => $product_id, 
							'date_added' => ''
						);
					}
				}
				return 	$results ;		
		}
	}

	public function addWishlistLb($product_id) {
		if ($this->customer->isLogged()) {
			$this->db->query("DELETE FROM " . DB_PREFIX . "customer_wishlist WHERE customer_id = '" . (int)$this->customer->getId() . "' AND product_id = '" . (int)$product_id . "'");

			$this->db->query("INSERT INTO " . DB_PREFIX . "customer_wishlist SET customer_id = '" . (int)$this->customer->getId() . "', product_id = '" . (int)$product_id . "', date_added = NOW()");
		}else{
			if (!isset($_COOKIE["productsWish[" . $product_id . "]"])){
				SetCookie("productsWish[" . $product_id . "]",time(),time()+3600*24*30*12,"/");
			}		
		}	
	}

	public function getTotalWishlistLb() {
		if ($this->customer->isLogged()) {
			$query = $this->db->query("SELECT COUNT(*) AS total FROM " . DB_PREFIX . "customer_wishlist WHERE customer_id = '" . (int)$this->customer->getId() . "'");

			return $query->row['total'];
		}else{
				$results = 0;
				if(isset($_COOKIE["productsWish"])){
					$results = count($_COOKIE["productsWish"]);
				}
				return 	$results ;			
		}
	}

	public function deleteWishlistLb($product_id) {
		if ($this->customer->isLogged()) {
			$this->db->query("DELETE FROM " . DB_PREFIX . "customer_wishlist WHERE customer_id = '" . (int)$this->customer->getId() . "' AND product_id = '" . (int)$product_id . "'");
		}else{
			SetCookie("productsWish[" . $product_id . "]",time(),time()-3600, '/');
		}
	}

// lightshop end
			]]></add>
		</operation>
	</file>
	<file path="catalog/model/catalog/category.php">
		<operation>
			<search><![CDATA[
	public function getTotalCategoriesByCategoryId($parent_id = 0) {
			]]></search>
			<add position="before"><![CDATA[
	// lightshop
	public function getMinPrice($category_id) {
		$query = $this->db->query("SELECT  MIN(p.price) AS minprice FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_to_category pc ON (p.product_id = pc.product_id)  WHERE pc.category_id = '" . (int)$category_id . "'  AND p.status = '1'");

		return $query->row['minprice'];
	}
	public function getMaxPrice($category_id) {
		$query = $this->db->query("SELECT  MAX(p.price) AS maxprice FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_to_category pc ON (p.product_id = pc.product_id)  WHERE pc.category_id = '" . (int)$category_id . "'  AND p.status = '1'");
		return $query->row['maxprice'];
	}
	public function getTopCategories() {
		$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "category c LEFT JOIN " . DB_PREFIX . "category_description cd ON (c.category_id = cd.category_id) LEFT JOIN " . DB_PREFIX . "category_to_store c2s ON (c.category_id = c2s.category_id) WHERE ( top = 1 OR c.parent_id = 0 ) AND cd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND c2s.store_id = '" . (int)$this->config->get('config_store_id') . "'  ORDER BY c.parent_id, c.sort_order, cd.name");
		return $query->rows;	
	}
	// lightshop end
			]]></add>
		</operation>
	</file>
	<file path="catalog/model/catalog/product.php">
		<operation>
			<search index="0"><![CDATA[
		if ($query->num_rows) {
			]]></search>
			<add position="after"><![CDATA[
// lightshop start
			if ($this->config->get('theme_lightshop_product_cod')) {
				$query->row['model'] = $query->row[$this->config->get('theme_lightshop_product_cod')];
			}
			$discount_date_end = false;
			if ($query->row['discount']) {
				$query2 = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_discount WHERE product_id = '" . (int)$product_id . "' AND quantity = '1'");
				$discount_date_end = $query2->row['date_end'];
			}
// lightshop end
			]]></add>
		</operation>
		<operation>
			<search index="0"><![CDATA[
				'special'          => $query->row['special'],
			]]></search>
			<add position="after"><![CDATA[
				'discount_date_end' => $discount_date_end,  //lightshop
			]]></add>
		</operation>
		<operation>
			<search index="0"><![CDATA[
	public function getProducts($data = array()) {
			]]></search>
			<add position="replace"><![CDATA[
// lightshop start
	private function getCustomerGroup() {
		if($this->customer->isLogged()) {
			$customer_group_id = $this->customer->getGroupId();
			return $customer_group_id;
		} else {
			$customer_group_id = $this->config->get('config_customer_group_id');
			return $customer_group_id;
		}
	}
// lightshop end
	public function getProducts($data = array()) {
// lightshop start
		$customer_group_id = $this->getCustomerGroup();
// lightshop end
			]]></add>
		</operation>
		<operation>
			<search index="0"><![CDATA[
		if (!empty($data['filter_category_id'])) {
			]]></search>
			<add position="before"><![CDATA[
		// lightshop start
		$sql .= ", coalesce((SELECT price FROM " . DB_PREFIX . "product_discount pd2 WHERE pd2.product_id = p.product_id AND pd2.customer_group_id = '" . (int)$customer_group_id . "' AND pd2.quantity = '1' AND ((pd2.date_start = '0000-00-00' OR pd2.date_start < NOW()) AND (pd2.date_end = '0000-00-00' OR pd2.date_end > NOW())) ORDER BY pd2.priority ASC, pd2.price ASC LIMIT 1), " .
				"(SELECT price FROM " . DB_PREFIX . "product_special ps WHERE ps.product_id = p.product_id AND ps.customer_group_id = '" . (int)$customer_group_id . "' AND ((ps.date_start = '0000-00-00' OR ps.date_start < NOW()) AND (ps.date_end = '0000-00-00' OR ps.date_end > NOW())) ORDER BY ps.priority ASC, ps.price ASC LIMIT 1), " .
				"p.price) as realprice ";
		// lightshop end			
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
				$sql .= " LEFT JOIN " . DB_PREFIX . "product_filter pf ON (p2c.product_id = pf.product_id) LEFT JOIN " . DB_PREFIX . "product p ON (pf.product_id = p.product_id)";
			]]></search>
			<add position="replace"><![CDATA[
				$sql .= " LEFT JOIN " . DB_PREFIX . "product_filter pf ON (p2c.product_id = pf.product_id) LEFT JOIN " . DB_PREFIX . "product p ON (pf.product_id = p.product_id)   LEFT JOIN " . DB_PREFIX . "filter f ON (pf.filter_id = f.filter_id)"; // lightshop change this
			]]></add>
		</operation>
		<operation>
			<search index="0"><![CDATA[
			$sql .= " FROM " . DB_PREFIX . "product p";
			]]></search>
			<add position="after"><![CDATA[
			// lightshop
			if (isset($data['filter_category_ids']) && $data['filter_category_ids']) {
				$categories = implode(",",$data['filter_category_ids']);
				$sql .= " LEFT JOIN " . DB_PREFIX . "product_to_category p2c ON (p2c.product_id = p.product_id)";
			}
			// lightshop end
			]]></add>
		</operation>
		<operation>
			<search index="1"><![CDATA[
		if (!empty($data['filter_category_id'])) {
			]]></search>
			<add position="before"><![CDATA[
		if (isset($data['filter_category_ids']) && $data['filter_category_ids']) {
			$categories = implode(",",$data['filter_category_ids']);
			$sql .= " AND p2c.category_id IN (" . $categories . ")";
		}	
			]]></add>
		</operation>
		<operation>
			<search index="0"><![CDATA[
				$sql .= " AND pf.filter_id IN (" . implode(',', $implode) . ")";
			]]></search>
			<add position="before"><![CDATA[
// lightshop
				if(!(int)$this->config->get('filter_grouptype')){
					$query1 = $this->db->query("SELECT COUNT(DISTINCT f.filter_group_id) as total FROM " . DB_PREFIX . "filter_group fg LEFT JOIN " . DB_PREFIX . "filter f ON (fg.filter_group_id = f.filter_group_id) where f.filter_id IN(" . implode(',', $implode) . ")");
					if($query1->num_rows){
						$filtersCount = $query1->row['total'];
					}					
				}
// lightshop
			]]></add>
		</operation>
		<operation>
			<search index="0"><![CDATA[
		$sql .= " GROUP BY p.product_id";
			]]></search>
			<add position="after"><![CDATA[
		// lightshop
		if(isset($data['min_price']) && $data['min_price'] >= 0) {
			$tempMinPrice = (float)$data['min_price'];
			if (!$this->config->get('decimal_place')) {
				$tempMinPrice = (float)$data['min_price'] -0.5 ;
			}

			$sql .= " HAVING realprice >=" . $this->currency->convert($tempMinPrice,$this->session->data['currency'], $this->config->get('config_currency'));
		}
		if(isset($data['max_price']) && $data['max_price'] > 0) {
			$tempMaxPrice = (float)$data['max_price'];
			if (!$this->config->get('decimal_place')) {
				$tempMaxPrice = (float)$data['max_price'] + 0.5 ;
			}
			
			$sql .= " AND realprice <=" . $this->currency->convert($tempMaxPrice,$this->session->data['currency'], $this->config->get('config_currency'));
			
		}
		
				if(isset($filtersCount) && !(int)$this->config->get('filter_grouptype')){
					$sql .= " AND  COUNT(DISTINCT f.filter_group_id) = " . $filtersCount ;	
				}

		// lightshop
			]]></add>
		</operation>
		<operation>
			<search index="0"><![CDATA[
			'p.quantity',
			]]></search>
			<add position="after"><![CDATA[
			'p.viewed',// lightshop
			]]></add>
		</operation>
		<operation>
			<search index="0"><![CDATA[
			'p.date_added'
			]]></search>
			<add position="replace"><![CDATA[
			'p.date_added',
			'discount'// lightshop
			]]></add>
		</operation>
		<operation>
			<search index="0"><![CDATA[
				$sql .= " ORDER BY (CASE WHEN special IS NOT NULL THEN special WHEN discount IS NOT NULL THEN discount ELSE p.price END)";
			]]></search>
			<add position="after"><![CDATA[
			} elseif ($data['sort'] == 'discount') {// lightshop
				$sql .= " ORDER BY (CASE WHEN special IS NOT NULL THEN (p.price - special)  END)";	// lightshop 		
			]]></add>
		</operation>
		<operation>
			<search index="0"><![CDATA[
				$sql .= " ORDER BY " . $data['sort'];
			]]></search>
			<add position="after" offset="1"><![CDATA[
// lightshop start
		}elseif(isset($data['sort']) && $data['sort'] == 'random'){  
				$sql .= " ORDER BY rand() ";
// lightshop end		
			]]></add>
		</operation>
		<operation>
			<search index="0"><![CDATA[
	public function getProductOptions($product_id) {
			]]></search>
			<add position="after"><![CDATA[
// lightshop start
		$product_option_data = $this->cache->get('product.options.' . (int)$this->config->get('config_language_id') . '.' . (int)$product_id );
//		$product_option_data = false;
		if ($product_option_data) {
			return $product_option_data;
		}
// lightshop end
			]]></add>
		</operation>
		<operation>
			<search index="1"><![CDATA[
		return $product_option_data;
			]]></search>
			<add position="before"><![CDATA[
		$this->cache->set('product.options.' . (int)$this->config->get('config_language_id') . '.' . (int)$product_id, $product_option_data);// lightshop add this
			]]></add>
		</operation>
		<operation>
			<search index="0"><![CDATA[
		$sql = "SELECT COUNT(DISTINCT p.product_id) AS total";
			]]></search>
			<add position="replace"><![CDATA[
// lightshop start
		$customer_group_id = $this->getCustomerGroup();
// lightshop end
		$sql = "SELECT COUNT(DISTINCT p.product_id) AS total";

		// lightshop start
		if(isset($data['max_price']) && $data['max_price'] > 0) {
			$sql = "SELECT coalesce((SELECT price FROM " . DB_PREFIX . "product_discount pd2 WHERE pd2.product_id = p.product_id AND pd2.customer_group_id = '" . (int)$customer_group_id . "' AND pd2.quantity = '1' AND ((pd2.date_start = '0000-00-00' OR pd2.date_start < NOW()) AND (pd2.date_end = '0000-00-00' OR pd2.date_end > NOW())) ORDER BY pd2.priority ASC, pd2.price ASC LIMIT 1), " .
					"(SELECT price FROM " . DB_PREFIX . "product_special ps WHERE ps.product_id = p.product_id AND ps.customer_group_id = '" . (int)$customer_group_id . "' AND ((ps.date_start = '0000-00-00' OR ps.date_start < NOW()) AND (ps.date_end = '0000-00-00' OR ps.date_end > NOW())) ORDER BY ps.priority ASC, ps.price ASC LIMIT 1), " .
					"p.price) as realprice ";
		}
		// lightshop end	
			]]></add>
		</operation>
		<operation>
			<search index="1"><![CDATA[
				$sql .= " AND pf.filter_id IN (" . implode(',', $implode) . ")";
			]]></search>
			<add position="after"><![CDATA[
// lightshop
				if(!(int)$this->config->get('filter_grouptype')){
					$query1 = $this->db->query("SELECT COUNT(DISTINCT f.filter_group_id) as total FROM " . DB_PREFIX . "filter_group fg LEFT JOIN " . DB_PREFIX . "filter f ON (fg.filter_group_id = f.filter_group_id) where f.filter_id IN(" . implode(',', $implode) . ")");
					if($query1->num_rows){
						$filtersCount = $query1->row['total'];
					}					
				}
// lightshop
	]]></add>
		</operation>
		<operation>
			<search index="1"><![CDATA[
			$sql .= " AND p.manufacturer_id = '" . (int)$data['filter_manufacturer_id'] . "'";
			]]></search>
			<add position="after" offset="1"><![CDATA[
		// lightshop
		$sql .= " GROUP BY p.product_id";
		$cond = ' HAVING ';
		if(isset($data['max_price']) && $data['max_price'] > 0) {
			$cond = ' AND ';

			$tempMinPrice = (float)$data['min_price'];
			if (!$this->config->get('decimal_place')) {
				$tempMinPrice = (float)$data['min_price'] -0.5 ;
			}
			$sql .= " HAVING realprice >=" . $this->currency->convert($tempMinPrice,$this->session->data['currency'], $this->config->get('config_currency'));

		}
		if(isset($data['max_price']) && $data['max_price'] > 0) {
			$cond = ' AND ';

			$tempMaxPrice = (float)$data['max_price'];
			if (!$this->config->get('decimal_place')) {
				$tempMaxPrice = (float)$data['max_price'] + 0.5 ;
			}
			$sql .= " AND realprice <=" . $this->currency->convert($tempMaxPrice,$this->session->data['currency'], $this->config->get('config_currency'));
		}

			if(isset($filtersCount) && !(int)$this->config->get('filter_grouptype')){
				$sql .= $cond . " COUNT(DISTINCT f.filter_group_id) = " . $filtersCount ;	
			}


		// lightshop
	]]></add>
		</operation>
		<operation>
			<search index="0"><![CDATA[
		return $query->row['total'];
			]]></search>
			<add position="replace"><![CDATA[
//		return $query->row['total'];
		return $query->num_rows;
	]]></add>
		</operation>
		<operation>
			<search><![CDATA[
	public function getTotalProductSpecials(
			]]></search>
			<add position="before"><![CDATA[
			// lightshop	
	public function getNewestProducts($period) {
		$product_data = $this->cache->get('product.newest.' . (int)$this->config->get('config_language_id') . '.' . (int)$this->config->get('config_store_id') . '.' . $this->config->get('config_customer_group_id') . '.' . $period);
		$product_data = false;
		if (!$product_data) {
			$query = $this->db->query("SELECT p.product_id FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_to_store p2s ON (p.product_id = p2s.product_id) WHERE p.status = '1' AND p.date_available <= NOW() AND p.date_added <= NOW() AND p.date_added > DATE_SUB(CURDATE(), INTERVAL " . $period . " DAY) AND p2s.store_id = '" . (int)$this->config->get('config_store_id') . "' ORDER BY p.date_added DESC");
			foreach ($query->rows as $result) {
				$product_data[$result['product_id']] = $result['product_id'];
			}

			$this->cache->set('product.newest.' . (int)$this->config->get('config_language_id') . '.' . (int)$this->config->get('config_store_id') . '.' . $this->config->get('config_customer_group_id') . '.' . $period, $product_data);
		}
		
		if(!$product_data){
			$product_data = array();//Если нет товаров - возвращаем пустой массив.					
		}			

		return $product_data;
	}

	public function getAlsoOrderedProducts($products_id,$sortorder) { 
		$products_id = implode(',', $products_id);
		$data = array();
		$sql = 	"SELECT *,COUNT(`product_id`) as rating FROM " . DB_PREFIX . "order_product WHERE order_id IN(SELECT op.`order_id` FROM (SELECT *,COUNT(`order_product_id`) AS totalpr FROM " . DB_PREFIX . "order_product GROUP by `order_id` ) as src LEFT JOIN `" . DB_PREFIX . "order_product` as op ON (src.`order_id` = op.`order_id`) WHERE src.totalpr > 1 AND op.`product_id` IN  ('" . $products_id . "')) AND `product_id` NOT IN  ('" . $products_id . "') GROUP BY `product_id` ";
		if ($sortorder == 'random') {
			$sql .= "ORDER BY RAND()";
		}else{
			$sql .= "ORDER BY rating DESC";
		}
		
		$query = $this->db->query($sql);
		if ($query->num_rows) {
			foreach ($query->rows as  $value) {
				$data[$value['product_id']] = $this->getProduct($value['product_id']);
			}
		}
		return 	$data ;
	}

	public function getProductActions($product_id) {
		$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_special WHERE product_id = '" . (int)$product_id . "'");

		return $query->row;
	}


			// lightshop end
			]]></add>
		</operation>
	</file> 
	<file path="catalog/model/tool/image.php">
		<operation>
			<search index="0"><![CDATA[
			return $this->config->get('config_url') . 'image/' . $image_new;
			]]></search>
			<add position="after" offset="2"><![CDATA[
// lightshop	
	public function lightshop_resize($filename, $width, $height) { 
		if (!is_file(DIR_IMAGE . $filename)) {
			if (is_file(DIR_IMAGE . 'no_image.jpg')) {
				$filename = 'no_image.jpg';
			} elseif (is_file(DIR_IMAGE . 'no_image.png')) {
				$filename = 'no_image.png';
			} else {
				return;
			}
		}

		$extension = pathinfo($filename, PATHINFO_EXTENSION);

		$image_old = $filename;
		$proportion = 1;
		$image_new = 'cache/' . utf8_substr($filename, 0, utf8_strrpos($filename, '.')) . '-auto_width_' . (int)$height . '.' . $extension;

		if (!is_file(DIR_IMAGE . $image_new) || (filectime(DIR_IMAGE . $image_old) > filectime(DIR_IMAGE . $image_new))) {
			list($width_orig, $height_orig, $image_type) = getimagesize(DIR_IMAGE . $image_old);

			if (!in_array($image_type, array(IMAGETYPE_PNG, IMAGETYPE_JPEG, IMAGETYPE_GIF))) {
				return DIR_IMAGE . $image_old;
			}
			$proportion = $height/$height_orig;
			$path = '';

			$directories = explode('/', dirname($image_new));

			foreach ($directories as $directory) {
				$path = $path . '/' . $directory;

				if (!is_dir(DIR_IMAGE . $path)) {
					@mkdir(DIR_IMAGE . $path, 0777);
				}
			}
			
			$new_width = round($width_orig * $proportion,2);
			
			if ($width_orig != $width || $height_orig != $height) {
				$image = new Image(DIR_IMAGE . $image_old);
				$image->resize($new_width, $height);
				$image->save(DIR_IMAGE . $image_new);
			} else {
				copy(DIR_IMAGE . $image_old, DIR_IMAGE . $image_new);
			}
		}

		$imagepath_parts = explode('/', $image_new);
		$new_image = implode('/', array_map('rawurlencode', $imagepath_parts));

		if ($this->request->server['HTTPS']) {
			return $this->config->get('config_ssl') . 'image/' . $new_image;
		} else {
			return $this->config->get('config_url') . 'image/' . $new_image;
		}
	}
// lightshop end
			]]></add>
		</operation>
	</file>  
	<file path="system/library/seopro.php">
		<operation error="skip">
			<search><![CDATA[
					} elseif (count($url) > 1) {
			]]></search>
			<add position="before"><![CDATA[
//lightshop start
					} elseif ($url[0] == 'lightshopcatblog_id') { 
						if (!isset($this->request->get['lbpath'])) {

							$this->request->get['lbpath'] = $url[1];
						} else {
							$this->request->get['lbpath'] = $url[1];
//							$this->request->get['lbpath'] .= '_' . $url[1];
						}

//lightshop end
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[
			$this->request->get['route'] = 'information/information';
			]]></search>
			<add position="after"><![CDATA[
		} elseif (isset($this->request->get['news_id'])) {//lightshop
			$this->request->get['route'] = 'extension/module/lightshop_news/getnews';//lightshop
		} elseif (isset($this->request->get['blog_id'])) {//lightshop
			if(!isset($this->request->get['lbpath'])){$this->request->get['lbpath'] = '0';}

			$this->request->get['route'] = 'extension/module/lightshop_blog/getblog';//lightshop

		} elseif (isset($this->request->get['lbpath'])) {//lightshop

				$this->request->get['route'] = 'extension/module/lightshopcat_blog/getcat';//lightshop
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[
				case 'product/category': 
			]]></search>
			<add position="before"><![CDATA[
//lightshop start
				case 'extension/module/lightshop_blog/getblog':
					if (isset($data['blog_id'])) {    
						$tmp = $data;
						$catlessblog = false;
						$data = array();
						if ($this->config->get('theme_lightshop_blog_path')) { 
							if (isset($tmp['lbpath']) && $tmp['lbpath'] == '0') {
								$catlessblog = true; 
							}
							$data['lbpath'] = $this->getPathByBlog($tmp['blog_id']);
							if (!$data['lbpath'] && !$catlessblog) return $link;
							if ($catlessblog) {
								$data['lbpath'] = 0;
							}
						}
						$data['blog_id'] = $tmp['blog_id'];
						$seo_pro_utm = preg_replace('~\r?\n~', "\n", $this->config->get('config_seo_pro_utm'));
						$allowed_parameters = explode("\n", $seo_pro_utm);
						foreach($allowed_parameters as $ap) {
							if (isset($tmp[trim($ap)])) {
								$data[trim($ap)] = $tmp[trim($ap)];
							}
						}
					}
					break;
//lightshop end
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[
				case 'product/manufacturer/info':
			]]></search>
			<add position="after"><![CDATA[
//lightshop start
				case 'information/information/agree':
					return [$url, $data, $postfix];
					break;
//lightshop end
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[
				case 'category_id':
			]]></search>
			<add position="after"><![CDATA[
				case 'news_id'://lightshop
				case 'blog_id'://lightshop
					$queries[] = $key . '=' . (int)$value; //lightshop
					unset($data[$key]); //lightshop
					$postfix = true; //lightshop
					break; //lightshop
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[
$queries[] = 'category_id=' . (int)$category_id;
			]]></search>
			<add position="after" offset="3"><![CDATA[
//lightshop start
				case 'lbpath':
					$lbcategories = explode('_', $value);
					if ($lbcategories[0]) {
						array_unshift($lbcategories, "0");
					}
	 
					foreach ($lbcategories as $lbcategory) {
						$queries[] = 'lightshopcatblog_id=' . $lbcategory;
					}
					unset($data[$key]);
					break;
//lightshop end
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[
	private function getPathByCategory($category_id) {
			]]></search>
			<add position="before"><![CDATA[
//lightshop start
	public function getPathByBlog($blog_id) {
		$blog_id = (int)$blog_id;
		if ($blog_id < 1) return false;

		static $path = null;
		$query = $this->db->query("SELECT category_id FROM " . DB_PREFIX . "lightshop_blog_to_category WHERE blog_id = '" . $blog_id . "' ORDER BY main_category DESC LIMIT 1");

		$path[$blog_id] = $this->getPathByCategoryLb($query->num_rows ? (int)$query->row['category_id'] : 0);

		return $path[$blog_id];
	}

	private function getPathByCategoryLb($category_id) {
		$category_id = (int)$category_id;
		if ($category_id < 1) return false;

		static $path = null;

			$max_level = 10;

			$sql = "SELECT CONCAT_WS('_'";
			for ($i = $max_level-1; $i >= 0; --$i) {
				$sql .= ",t$i.category_id";
			}
			$sql .= ") AS path FROM " . DB_PREFIX . "lightshopcat_blog t0";
			for ($i = 1; $i < $max_level; ++$i) {
				$sql .= " LEFT JOIN " . DB_PREFIX . "lightshopcat_blog t$i ON (t$i.category_id = t" . ($i-1) . ".parent_id)";
			}
			$sql .= " WHERE t0.category_id = '" . $category_id . "'";

			$query = $this->db->query($sql);

			$path[$category_id] = $query->num_rows ? $query->row['path'] : false;

		return $path[$category_id];
	}
//lightshop end
			]]></add>
		</operation>

	</file> 
	<file path="system/library/cart/cart.php">
		<operation>
			<search><![CDATA[
$product_data[] = array(
			]]></search>
			<add position="before"><![CDATA[
// lightshop start
			if ($this->config->get('theme_lightshop_product_cod')) {
				$product_query->row['model'] = $product_query->row[$this->config->get('theme_lightshop_product_cod')];
			}
// lightshop end
			]]></add>
		</operation>
	</file>  
	<file path="system/config/catalog.php">
		<operation>
			<search><![CDATA[
	'controller/*/after'  => array(
			]]></search>
			<add position="replace" offset="2"><![CDATA[
			]]></add>
		</operation>
	</file>  
	<file path="system/library/image.php">
		<operation error="skip">
			<search><![CDATA[
	public function save($file, $quality = 90) {
			]]></search>
			<add position="replace"><![CDATA[
	public function save($file, $quality = 75) { // lightshop
			]]></add>
		</operation>
	</file>  	
</modification>